ninja_required_version = 1.8.2

TARGET = x86_64-unknown-linux-musl
LLVM_VER = 15.0.0

BUILDROOT = out/build

SYSROOT = out/target/${TARGET}
INC = -isystem out/target/clang/lib/clang/${LLVM_VER}/include -isystem $SYSROOT/include -Isystem/bioniccompat/include
CC = out/target/bin/${TARGET}-clang -nostdinc $INC
CXX = out/target/bin/${TARGET}-clang++ -nostdinc -nostdinc++ -isystem $SYSROOT/include/c++/v1 $INC
LINKER = out/target/bin/${TARGET}-clang -isysroot $SYSROOT -stdlib=libc++
AR = out/target/bin/${TARGET}-ar
STRIP = out/target/bin/${TARGET}-strip

SYSTEMDIR = out/system

KERNEL_VERSION = 5.16.11-zen-gfbc389882a61

HOSTCC = out/host/bin/clang
HOSTCXX = out/host/bin/clang++ -stdlib++-isystem out/host/include/c++/v1
HOSTAR = out/host/bin/llvm-ar
YASM = out/host/bin/yasm -f elf64 -m amd64

rule cc
  command = $CC -fPIC -g -MD -MF $out.d $cflags $includes -c $in -o $out
  depfile = $out.d
  description = CC $out

rule cxx
  command = $CXX -std=c++20 -fPIC -g -MD -MF $out.d $cxxflags $includes -c $in -o $out
  depfile = $out.d
  description = CXX $out

rule yasm
  command = $YASM $asflags $includes -o $out $in && echo -n $$(dirname $out)/ >$out.d && $YASM $asflags $includes -M $in >>$out.d
  depfile = $out.d
  description = YASM $out

rule ar
  command = $AR csrD $out $in
  description = AR $out

rule so
  command = $LINKER -L$SYSROOT/lib -Wl,--as-needed -Wl,--no-undefined $libs -Wl,-x -shared -g -L$$(dirname $out) -Wl,-soname,$$(basename $out) -o $out $in
  description = SO $out

rule soa
  command = $LINKER -L$SYSROOT/lib -Wl,--as-needed -Wl,--no-undefined $libs -Wl,-x -shared -g -L$$(dirname $out) -Wl,-soname,$$(basename $out) -o $out -Wl,--whole-archive $in -Wl,--no-whole-archive
  description = SO(.a) $out

rule link
  command = $LINKER -L$SYSROOT/lib -Wl,--as-needed -Wl,--no-undefined $libs -o $out $in
  description = LINK $out

rule strip
  command = $STRIP --strip-all -o $out $in
  description = STRIP $out

rule copy
  command = mkdir -p $$(dirname $out) && cp -f $in $out
  description = COPY $out <- $in

rule symlink
  command = ln -sf $target $out
  description = SYMLINK $out -> $target

rule hostcc
  command = $HOSTCC -fPIC -g $cflags $includes -c $in -o $out
  description = [HOST] CC $out

rule hostcxx
  command = $HOSTCXX -std=c++20 -fPIC -g $cxxflags $includes -c $in -o $out
  description = [HOST] CXX $out

rule hostar
  command = $HOSTAR csrD $out $in
  description = [HOST] AR $out

rule hostld
  command = $HOSTCXX -fuse-ld=mold -stdlib=libc++ -Wl,-rpath,out/host/lib $ldflags $in -o $out
  description = [HOST] LINK $out


# host versions of target builds
subninja build/host.ninja

subninja build/aidl_host.ninja
build out/host/bin/aidl: copy $BUILDROOT/_host/aidl/aidl
HOSTAIDL = out/host/bin/aidl
rule aidl
  command = mkdir -p "${headerDir}" && $HOSTAIDL --lang=${lang} ${optionalFlags} --structured --ninja -d ${out}.d -h ${headerDir} -o ${outDir} ${imports} ${in}
  generator = $HOSTAIDL
  depfile = ${out}.d
  deps = gcc
  description = [HOST] AIDL ${lang} ${in}

subninja build/protobuf_host.ninja
build out/host/bin/protoc: copy $BUILDROOT/_host/protobuf/aprotoc
HOSTPROTOC = out/host/bin/protoc
rule protoc
  command = $HOSTPROTOC --cpp_out=lite:$BUILDROOT/init/proto --dependency_out=$out -I . $in #&& out/soong/host/linux-x86/bin/dep_fixer out/soong/.intermediates/system/core/init/host_init_verifier/linux_glibc_x86_64/gen/proto/system/core/init/subcontext.pb.d
  generator = $HOSTPROTOC
  description = [HOST] PROTOC $in

subninja build/kmod.ninja
build out/host/bin/depmod: copy $BUILDROOT/_host/kmod/depmod

subninja build/wayland_host.ninja
build out/host/bin/wayland-scanner: copy $BUILDROOT/_host/wayland/wayland-scanner
rule wayland-scanner
  command = out/host/bin/wayland-scanner -s $type $in $out
  generator = out/host/bin/wayland-scanner
  description = [HOST] WAYLAND SCANNER $out


subninja build/fmtlib.ninja

subninja build/libbase.ninja
build $SYSROOT/lib/libbase.so: copy $BUILDROOT/libbase/libbase.so

subninja build/libbinder.ninja
build $SYSROOT/lib/libbinder.so: copy $BUILDROOT/libbinder/libbinder.so

subninja build/libcap.ninja
build $SYSROOT/include/sys/capability.h: copy external/libcap/libcap/include/sys/capability.h

subninja build/libcgrouprc.ninja
build $SYSROOT/lib/libcgrouprc.so: copy $BUILDROOT/libcgrouprc/libcgrouprc.so

subninja build/libcgrouprc_format.ninja

subninja build/libcutils.ninja
build $SYSROOT/lib/libcutils.so: copy $BUILDROOT/libcutils/libcutils.so

subninja build/libdrm.ninja
build $SYSROOT/lib/libdrm.so: copy $BUILDROOT/libdrm/libdrm.so

subninja build/libevdev.ninja
build $SYSROOT/lib/libevdev.so: copy $BUILDROOT/libevdev/libevdev.so

subninja build/libext2_uuid.ninja
build $SYSROOT/lib/libext2_uuid.so: copy $BUILDROOT/libext2_uuid/libext2_uuid.so

subninja build/libext4_utils.ninja
build $SYSROOT/lib/libext4_utils.so: copy $BUILDROOT/ext4_utils/libext4_utils.so

subninja build/libffi.ninja

subninja build/libinput.ninja
build $SYSROOT/lib/libinput.so: copy $BUILDROOT/libinput/libinput.so

subninja build/libjpeg.ninja
build $SYSROOT/lib/libjpeg.so: copy $BUILDROOT/libjpeg/libjpeg.so

subninja build/liblog.ninja
build $SYSROOT/lib/liblog.so: copy $BUILDROOT/liblog/liblog.so

subninja build/libmodprobe.ninja

subninja build/libpng.ninja
build $SYSROOT/lib/libpng.so: copy $BUILDROOT/libpng/libpng.so

subninja build/libprocessgroup.ninja
build $SYSROOT/lib/libprocessgroup.so: copy $BUILDROOT/libprocessgroup/libprocessgroup.so

subninja build/libprocessgroup_setup.ninja
build $SYSROOT/lib/libprocessgroup_setup.so: copy $BUILDROOT/libprocessgroup_setup/libprocessgroup_setup.so

subninja build/libprocinfo.ninja

subninja build/libpropertyinfoparser.ninja

subninja build/libpropertyinfoserializer.ninja

subninja build/libsystemproperties.ninja
build $SYSROOT/lib/libsystemproperties.so: copy $BUILDROOT/libsystemproperties/libsystemproperties.so

subninja build/libsysutils.ninja
build $SYSROOT/lib/libsysutils.so: copy $BUILDROOT/libsysutils/libsysutils.so

subninja build/libudev.ninja
build $SYSROOT/lib/libudev.so: copy $BUILDROOT/libudev/libudev.so
build $SYSROOT/include/libudev.h: copy external/libudev/udev.h

subninja build/libutils.ninja
build $SYSROOT/lib/libutils.so: copy $BUILDROOT/libutils/libutils.so

subninja build/libva.ninja
build $SYSROOT/lib/libva.so: copy $BUILDROOT/libva/libva.so
build $SYSROOT/lib/libva-drm.so: copy $BUILDROOT/libva/libva-drm.so
build $SYSROOT/lib/libva-wayland.so: copy $BUILDROOT/libva/libva-wayland.so

subninja build/libwebp.ninja
build $SYSROOT/lib/libwebp.so: copy $BUILDROOT/libwebp/libwebp.so

subninja build/libxkbcommon.ninja
build $SYSROOT/lib/libxkbcommon.so: copy $BUILDROOT/libxkbcommon/libxkbcommon.so

subninja build/boringssl.ninja
build $SYSROOT/lib/libcrypto.so: copy $BUILDROOT/boringssl/libcrypto.so

subninja build/cairo.ninja
build $SYSROOT/lib/libcairo.so: copy $BUILDROOT/cairo/libcairo.so

subninja build/expat.ninja
build $SYSROOT/lib/libexpat.so: copy $BUILDROOT/expat/libexpat.so

subninja build/freetype.ninja
build $SYSROOT/lib/libfreetype.so: copy $BUILDROOT/freetype/libfreetype.so

subninja build/fs_mgr.ninja
build $SYSROOT/lib/libfs_mgr.so: copy $BUILDROOT/fs_mgr/libfs_mgr.so

subninja build/init.ninja
build $SYSROOT/bin/init: copy $BUILDROOT/init/obj/init

subninja build/jsoncpp.ninja

subninja build/logwrapper.ninja
build $SYSROOT/lib/liblogwrap.so: copy $BUILDROOT/logwrapper/liblogwrap.so

subninja build/mksh.ninja

subninja build/pixman.ninja
build $SYSROOT/lib/libpixman-1.so: copy $BUILDROOT/pixman/libpixman-1.so

subninja build/protobuf.ninja

subninja build/initramfs.ninja
build initramfs: phony $BUILDROOT/initramfs.gz

subninja build/mesa.ninja
build $SYSROOT/lib/libgbm.so: copy $BUILDROOT/mesa/libgbm.so
build $SYSROOT/lib/libglapi.so: copy $BUILDROOT/mesa/libglapi.so
build $SYSROOT/lib/libEGL.so: copy $BUILDROOT/mesa/libEGL.so
build $SYSROOT/lib/libGLESv2.so: copy $BUILDROOT/mesa/libGLESv2.so

subninja build/mtdev.ninja

subninja build/seatd.ninja
build $SYSROOT/lib/libseat.so: copy $BUILDROOT/seatd/libseat.so

subninja build/system_img.ninja
build system.img: phony $SYSTEMDIR.img $SYSTEMDIR.stamp

subninja build/toybox.ninja
build $SYSTEMDIR/system/bin/toybox: copy $BUILDROOT/toybox/toybox

subninja build/utils.ninja
build $SYSTEMDIR/system/bin/su: copy $BUILDROOT/utils/su

subninja build/wayland.ninja
build $SYSROOT/lib/libwayland-client.so: copy $BUILDROOT/wayland/libwayland-client.so
build $SYSROOT/lib/libwayland-server.so: copy $BUILDROOT/wayland/libwayland-server.so
build $SYSROOT/lib/libwayland-cursor.so: copy $BUILDROOT/wayland/libwayland-cursor.so

subninja build/weston.ninja

subninja build/xkeyboard-config.ninja

subninja build/zlib.ninja
build $SYSROOT/lib/libz.so: copy $BUILDROOT/zlib/libz.so

subninja build/zstd.ninja
build $SYSROOT/lib/libzstd.so: copy $BUILDROOT/zstd/libzstd.so

default initramfs system.img
