/* Generated by ./src/xlat/gen.sh from ./src/xlat/route_nexthop_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifndef IN_MPERS

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data route_nexthop_flags_xdata[] = {
 XLAT(RTNH_F_DEAD),
 #define XLAT_VAL_0 ((unsigned) (RTNH_F_DEAD))
 #define XLAT_STR_0 STRINGIFY(RTNH_F_DEAD)
 XLAT(RTNH_F_PERVASIVE),
 #define XLAT_VAL_1 ((unsigned) (RTNH_F_PERVASIVE))
 #define XLAT_STR_1 STRINGIFY(RTNH_F_PERVASIVE)
 XLAT(RTNH_F_ONLINK),
 #define XLAT_VAL_2 ((unsigned) (RTNH_F_ONLINK))
 #define XLAT_STR_2 STRINGIFY(RTNH_F_ONLINK)
 XLAT(RTNH_F_OFFLOAD),
 #define XLAT_VAL_3 ((unsigned) (RTNH_F_OFFLOAD))
 #define XLAT_STR_3 STRINGIFY(RTNH_F_OFFLOAD)
 XLAT(RTNH_F_LINKDOWN),
 #define XLAT_VAL_4 ((unsigned) (RTNH_F_LINKDOWN))
 #define XLAT_STR_4 STRINGIFY(RTNH_F_LINKDOWN)
 XLAT(RTNH_F_UNRESOLVED),
 #define XLAT_VAL_5 ((unsigned) (RTNH_F_UNRESOLVED))
 #define XLAT_STR_5 STRINGIFY(RTNH_F_UNRESOLVED)
 XLAT(RTNH_F_TRAP),
 #define XLAT_VAL_6 ((unsigned) (RTNH_F_TRAP))
 #define XLAT_STR_6 STRINGIFY(RTNH_F_TRAP)
};
const struct xlat route_nexthop_flags[1] = { {
 .data = route_nexthop_flags_xdata,
 .size = ARRAY_SIZE(route_nexthop_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
