/* Generated by ./src/xlat/gen.sh from ./src/xlat/sg_io_info.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(SG_INFO_CHECK) || (defined(HAVE_DECL_SG_INFO_CHECK) && HAVE_DECL_SG_INFO_CHECK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SG_INFO_CHECK) == (1), "SG_INFO_CHECK != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SG_INFO_CHECK 1
#endif
#if defined(SG_INFO_DIRECT_IO) || (defined(HAVE_DECL_SG_INFO_DIRECT_IO) && HAVE_DECL_SG_INFO_DIRECT_IO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SG_INFO_DIRECT_IO) == (2), "SG_INFO_DIRECT_IO != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SG_INFO_DIRECT_IO 2
#endif
#if defined(SG_INFO_MIXED_IO) || (defined(HAVE_DECL_SG_INFO_MIXED_IO) && HAVE_DECL_SG_INFO_MIXED_IO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SG_INFO_MIXED_IO) == (4), "SG_INFO_MIXED_IO != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SG_INFO_MIXED_IO 4
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifndef IN_MPERS

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data sg_io_info_xdata[] = {
 XLAT(SG_INFO_CHECK),
 #define XLAT_VAL_0 ((unsigned) (SG_INFO_CHECK))
 #define XLAT_STR_0 STRINGIFY(SG_INFO_CHECK)
 XLAT(SG_INFO_DIRECT_IO),
 #define XLAT_VAL_1 ((unsigned) (SG_INFO_DIRECT_IO))
 #define XLAT_STR_1 STRINGIFY(SG_INFO_DIRECT_IO)
 XLAT(SG_INFO_MIXED_IO),
 #define XLAT_VAL_2 ((unsigned) (SG_INFO_MIXED_IO))
 #define XLAT_STR_2 STRINGIFY(SG_INFO_MIXED_IO)
};
const struct xlat sg_io_info[1] = { {
 .data = sg_io_info_xdata,
 .size = ARRAY_SIZE(sg_io_info_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
