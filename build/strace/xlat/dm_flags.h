/* Generated by ./src/xlat/gen.sh from ./src/xlat/dm_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat dm_flags in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data dm_flags_xdata[] = {
 XLAT(DM_READONLY_FLAG),
 #define XLAT_VAL_0 ((unsigned) (DM_READONLY_FLAG))
 #define XLAT_STR_0 STRINGIFY(DM_READONLY_FLAG)
 XLAT(DM_SUSPEND_FLAG),
 #define XLAT_VAL_1 ((unsigned) (DM_SUSPEND_FLAG))
 #define XLAT_STR_1 STRINGIFY(DM_SUSPEND_FLAG)
 XLAT(DM_EXISTS_FLAG),
 #define XLAT_VAL_2 ((unsigned) (DM_EXISTS_FLAG))
 #define XLAT_STR_2 STRINGIFY(DM_EXISTS_FLAG)
 XLAT(DM_PERSISTENT_DEV_FLAG),
 #define XLAT_VAL_3 ((unsigned) (DM_PERSISTENT_DEV_FLAG))
 #define XLAT_STR_3 STRINGIFY(DM_PERSISTENT_DEV_FLAG)
 XLAT(DM_STATUS_TABLE_FLAG),
 #define XLAT_VAL_4 ((unsigned) (DM_STATUS_TABLE_FLAG))
 #define XLAT_STR_4 STRINGIFY(DM_STATUS_TABLE_FLAG)
 XLAT(DM_ACTIVE_PRESENT_FLAG),
 #define XLAT_VAL_5 ((unsigned) (DM_ACTIVE_PRESENT_FLAG))
 #define XLAT_STR_5 STRINGIFY(DM_ACTIVE_PRESENT_FLAG)
 XLAT(DM_INACTIVE_PRESENT_FLAG),
 #define XLAT_VAL_6 ((unsigned) (DM_INACTIVE_PRESENT_FLAG))
 #define XLAT_STR_6 STRINGIFY(DM_INACTIVE_PRESENT_FLAG)
 XLAT(DM_BUFFER_FULL_FLAG),
 #define XLAT_VAL_7 ((unsigned) (DM_BUFFER_FULL_FLAG))
 #define XLAT_STR_7 STRINGIFY(DM_BUFFER_FULL_FLAG)
 XLAT(DM_SKIP_BDGET_FLAG),
 #define XLAT_VAL_8 ((unsigned) (DM_SKIP_BDGET_FLAG))
 #define XLAT_STR_8 STRINGIFY(DM_SKIP_BDGET_FLAG)
 XLAT(DM_SKIP_LOCKFS_FLAG),
 #define XLAT_VAL_9 ((unsigned) (DM_SKIP_LOCKFS_FLAG))
 #define XLAT_STR_9 STRINGIFY(DM_SKIP_LOCKFS_FLAG)
 XLAT(DM_NOFLUSH_FLAG),
 #define XLAT_VAL_10 ((unsigned) (DM_NOFLUSH_FLAG))
 #define XLAT_STR_10 STRINGIFY(DM_NOFLUSH_FLAG)
 XLAT(DM_QUERY_INACTIVE_TABLE_FLAG),
 #define XLAT_VAL_11 ((unsigned) (DM_QUERY_INACTIVE_TABLE_FLAG))
 #define XLAT_STR_11 STRINGIFY(DM_QUERY_INACTIVE_TABLE_FLAG)
 XLAT(DM_UEVENT_GENERATED_FLAG),
 #define XLAT_VAL_12 ((unsigned) (DM_UEVENT_GENERATED_FLAG))
 #define XLAT_STR_12 STRINGIFY(DM_UEVENT_GENERATED_FLAG)
 XLAT(DM_UUID_FLAG),
 #define XLAT_VAL_13 ((unsigned) (DM_UUID_FLAG))
 #define XLAT_STR_13 STRINGIFY(DM_UUID_FLAG)
 XLAT(DM_SECURE_DATA_FLAG),
 #define XLAT_VAL_14 ((unsigned) (DM_SECURE_DATA_FLAG))
 #define XLAT_STR_14 STRINGIFY(DM_SECURE_DATA_FLAG)
 XLAT(DM_DATA_OUT_FLAG),
 #define XLAT_VAL_15 ((unsigned) (DM_DATA_OUT_FLAG))
 #define XLAT_STR_15 STRINGIFY(DM_DATA_OUT_FLAG)
 XLAT(DM_DEFERRED_REMOVE),
 #define XLAT_VAL_16 ((unsigned) (DM_DEFERRED_REMOVE))
 #define XLAT_STR_16 STRINGIFY(DM_DEFERRED_REMOVE)
 XLAT(DM_INTERNAL_SUSPEND_FLAG),
 #define XLAT_VAL_17 ((unsigned) (DM_INTERNAL_SUSPEND_FLAG))
 #define XLAT_STR_17 STRINGIFY(DM_INTERNAL_SUSPEND_FLAG)
 XLAT(DM_IMA_MEASUREMENT_FLAG),
 #define XLAT_VAL_18 ((unsigned) (DM_IMA_MEASUREMENT_FLAG))
 #define XLAT_STR_18 STRINGIFY(DM_IMA_MEASUREMENT_FLAG)
};
static
const struct xlat dm_flags[1] = { {
 .data = dm_flags_xdata,
 .size = ARRAY_SIZE(dm_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
