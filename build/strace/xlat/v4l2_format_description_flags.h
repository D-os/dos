/* Generated by ./src/xlat/gen.sh from ./src/xlat/v4l2_format_description_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat v4l2_format_description_flags[];

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data v4l2_format_description_flags_xdata[] = {
 XLAT(V4L2_FMT_FLAG_COMPRESSED),
 #define XLAT_VAL_0 ((unsigned) (V4L2_FMT_FLAG_COMPRESSED))
 #define XLAT_STR_0 STRINGIFY(V4L2_FMT_FLAG_COMPRESSED)
 XLAT(V4L2_FMT_FLAG_EMULATED),
 #define XLAT_VAL_1 ((unsigned) (V4L2_FMT_FLAG_EMULATED))
 #define XLAT_STR_1 STRINGIFY(V4L2_FMT_FLAG_EMULATED)
 XLAT(V4L2_FMT_FLAG_CONTINUOUS_BYTESTREAM),
 #define XLAT_VAL_2 ((unsigned) (V4L2_FMT_FLAG_CONTINUOUS_BYTESTREAM))
 #define XLAT_STR_2 STRINGIFY(V4L2_FMT_FLAG_CONTINUOUS_BYTESTREAM)
 XLAT(V4L2_FMT_FLAG_DYN_RESOLUTION),
 #define XLAT_VAL_3 ((unsigned) (V4L2_FMT_FLAG_DYN_RESOLUTION))
 #define XLAT_STR_3 STRINGIFY(V4L2_FMT_FLAG_DYN_RESOLUTION)
 XLAT(V4L2_FMT_FLAG_ENC_CAP_FRAME_INTERVAL),
 #define XLAT_VAL_4 ((unsigned) (V4L2_FMT_FLAG_ENC_CAP_FRAME_INTERVAL))
 #define XLAT_STR_4 STRINGIFY(V4L2_FMT_FLAG_ENC_CAP_FRAME_INTERVAL)
 XLAT(V4L2_FMT_FLAG_CSC_COLORSPACE),
 #define XLAT_VAL_5 ((unsigned) (V4L2_FMT_FLAG_CSC_COLORSPACE))
 #define XLAT_STR_5 STRINGIFY(V4L2_FMT_FLAG_CSC_COLORSPACE)
 XLAT(V4L2_FMT_FLAG_CSC_XFER_FUNC),
 #define XLAT_VAL_6 ((unsigned) (V4L2_FMT_FLAG_CSC_XFER_FUNC))
 #define XLAT_STR_6 STRINGIFY(V4L2_FMT_FLAG_CSC_XFER_FUNC)
 XLAT(V4L2_FMT_FLAG_CSC_YCBCR_ENC),
 #define XLAT_VAL_7 ((unsigned) (V4L2_FMT_FLAG_CSC_YCBCR_ENC))
 #define XLAT_STR_7 STRINGIFY(V4L2_FMT_FLAG_CSC_YCBCR_ENC)
 XLAT(V4L2_FMT_FLAG_CSC_QUANTIZATION),
 #define XLAT_VAL_8 ((unsigned) (V4L2_FMT_FLAG_CSC_QUANTIZATION))
 #define XLAT_STR_8 STRINGIFY(V4L2_FMT_FLAG_CSC_QUANTIZATION)
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat v4l2_format_description_flags[1] = { {
 .data = v4l2_format_description_flags_xdata,
 .size = ARRAY_SIZE(v4l2_format_description_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
