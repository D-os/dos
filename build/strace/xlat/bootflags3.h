/* Generated by ./src/xlat/gen.sh from ./src/xlat/bootflags3.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(LINUX_REBOOT_CMD_RESTART) || (defined(HAVE_DECL_LINUX_REBOOT_CMD_RESTART) && HAVE_DECL_LINUX_REBOOT_CMD_RESTART)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((LINUX_REBOOT_CMD_RESTART) == (0x01234567), "LINUX_REBOOT_CMD_RESTART != 0x01234567");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define LINUX_REBOOT_CMD_RESTART 0x01234567
#endif
#if defined(LINUX_REBOOT_CMD_HALT) || (defined(HAVE_DECL_LINUX_REBOOT_CMD_HALT) && HAVE_DECL_LINUX_REBOOT_CMD_HALT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((LINUX_REBOOT_CMD_HALT) == (0xCDEF0123), "LINUX_REBOOT_CMD_HALT != 0xCDEF0123");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define LINUX_REBOOT_CMD_HALT 0xCDEF0123
#endif
#if defined(LINUX_REBOOT_CMD_CAD_ON) || (defined(HAVE_DECL_LINUX_REBOOT_CMD_CAD_ON) && HAVE_DECL_LINUX_REBOOT_CMD_CAD_ON)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((LINUX_REBOOT_CMD_CAD_ON) == (0x89ABCDEF), "LINUX_REBOOT_CMD_CAD_ON != 0x89ABCDEF");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define LINUX_REBOOT_CMD_CAD_ON 0x89ABCDEF
#endif
#if defined(LINUX_REBOOT_CMD_CAD_OFF) || (defined(HAVE_DECL_LINUX_REBOOT_CMD_CAD_OFF) && HAVE_DECL_LINUX_REBOOT_CMD_CAD_OFF)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((LINUX_REBOOT_CMD_CAD_OFF) == (0x00000000), "LINUX_REBOOT_CMD_CAD_OFF != 0x00000000");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define LINUX_REBOOT_CMD_CAD_OFF 0x00000000
#endif
#if defined(LINUX_REBOOT_CMD_POWER_OFF) || (defined(HAVE_DECL_LINUX_REBOOT_CMD_POWER_OFF) && HAVE_DECL_LINUX_REBOOT_CMD_POWER_OFF)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((LINUX_REBOOT_CMD_POWER_OFF) == (0x4321FEDC), "LINUX_REBOOT_CMD_POWER_OFF != 0x4321FEDC");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define LINUX_REBOOT_CMD_POWER_OFF 0x4321FEDC
#endif
#if defined(LINUX_REBOOT_CMD_RESTART2) || (defined(HAVE_DECL_LINUX_REBOOT_CMD_RESTART2) && HAVE_DECL_LINUX_REBOOT_CMD_RESTART2)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((LINUX_REBOOT_CMD_RESTART2) == (0xA1B2C3D4), "LINUX_REBOOT_CMD_RESTART2 != 0xA1B2C3D4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define LINUX_REBOOT_CMD_RESTART2 0xA1B2C3D4
#endif
#if defined(LINUX_REBOOT_CMD_SW_SUSPEND) || (defined(HAVE_DECL_LINUX_REBOOT_CMD_SW_SUSPEND) && HAVE_DECL_LINUX_REBOOT_CMD_SW_SUSPEND)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((LINUX_REBOOT_CMD_SW_SUSPEND) == (0xD000FCE2), "LINUX_REBOOT_CMD_SW_SUSPEND != 0xD000FCE2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define LINUX_REBOOT_CMD_SW_SUSPEND 0xD000FCE2
#endif
#if defined(LINUX_REBOOT_CMD_KEXEC) || (defined(HAVE_DECL_LINUX_REBOOT_CMD_KEXEC) && HAVE_DECL_LINUX_REBOOT_CMD_KEXEC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((LINUX_REBOOT_CMD_KEXEC) == (0x45584543), "LINUX_REBOOT_CMD_KEXEC != 0x45584543");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define LINUX_REBOOT_CMD_KEXEC 0x45584543
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat bootflags3 in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data bootflags3_xdata[] = {
 XLAT(LINUX_REBOOT_CMD_RESTART),
 #define XLAT_VAL_0 ((unsigned) (LINUX_REBOOT_CMD_RESTART))
 #define XLAT_STR_0 STRINGIFY(LINUX_REBOOT_CMD_RESTART)
 XLAT(LINUX_REBOOT_CMD_HALT),
 #define XLAT_VAL_1 ((unsigned) (LINUX_REBOOT_CMD_HALT))
 #define XLAT_STR_1 STRINGIFY(LINUX_REBOOT_CMD_HALT)
 XLAT(LINUX_REBOOT_CMD_CAD_ON),
 #define XLAT_VAL_2 ((unsigned) (LINUX_REBOOT_CMD_CAD_ON))
 #define XLAT_STR_2 STRINGIFY(LINUX_REBOOT_CMD_CAD_ON)
 XLAT(LINUX_REBOOT_CMD_CAD_OFF),
 #define XLAT_VAL_3 ((unsigned) (LINUX_REBOOT_CMD_CAD_OFF))
 #define XLAT_STR_3 STRINGIFY(LINUX_REBOOT_CMD_CAD_OFF)
 XLAT(LINUX_REBOOT_CMD_POWER_OFF),
 #define XLAT_VAL_4 ((unsigned) (LINUX_REBOOT_CMD_POWER_OFF))
 #define XLAT_STR_4 STRINGIFY(LINUX_REBOOT_CMD_POWER_OFF)
 XLAT(LINUX_REBOOT_CMD_RESTART2),
 #define XLAT_VAL_5 ((unsigned) (LINUX_REBOOT_CMD_RESTART2))
 #define XLAT_STR_5 STRINGIFY(LINUX_REBOOT_CMD_RESTART2)
 XLAT(LINUX_REBOOT_CMD_SW_SUSPEND),
 #define XLAT_VAL_6 ((unsigned) (LINUX_REBOOT_CMD_SW_SUSPEND))
 #define XLAT_STR_6 STRINGIFY(LINUX_REBOOT_CMD_SW_SUSPEND)
 XLAT(LINUX_REBOOT_CMD_KEXEC),
 #define XLAT_VAL_7 ((unsigned) (LINUX_REBOOT_CMD_KEXEC))
 #define XLAT_STR_7 STRINGIFY(LINUX_REBOOT_CMD_KEXEC)
};
static
const struct xlat bootflags3[1] = { {
 .data = bootflags3_xdata,
 .size = ARRAY_SIZE(bootflags3_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
