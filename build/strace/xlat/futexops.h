/* Generated by ./src/xlat/gen.sh from ./src/xlat/futexops.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(FUTEX_WAIT) || (defined(HAVE_DECL_FUTEX_WAIT) && HAVE_DECL_FUTEX_WAIT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAIT) == (0), "FUTEX_WAIT != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAIT 0
#endif
#if defined(FUTEX_WAKE) || (defined(HAVE_DECL_FUTEX_WAKE) && HAVE_DECL_FUTEX_WAKE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAKE) == (1), "FUTEX_WAKE != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAKE 1
#endif
#if defined(FUTEX_FD) || (defined(HAVE_DECL_FUTEX_FD) && HAVE_DECL_FUTEX_FD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_FD) == (2), "FUTEX_FD != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_FD 2
#endif
#if defined(FUTEX_REQUEUE) || (defined(HAVE_DECL_FUTEX_REQUEUE) && HAVE_DECL_FUTEX_REQUEUE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_REQUEUE) == (3), "FUTEX_REQUEUE != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_REQUEUE 3
#endif
#if defined(FUTEX_CMP_REQUEUE) || (defined(HAVE_DECL_FUTEX_CMP_REQUEUE) && HAVE_DECL_FUTEX_CMP_REQUEUE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_CMP_REQUEUE) == (4), "FUTEX_CMP_REQUEUE != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_CMP_REQUEUE 4
#endif
#if defined(FUTEX_WAKE_OP) || (defined(HAVE_DECL_FUTEX_WAKE_OP) && HAVE_DECL_FUTEX_WAKE_OP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAKE_OP) == (5), "FUTEX_WAKE_OP != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAKE_OP 5
#endif
#if defined(FUTEX_LOCK_PI) || (defined(HAVE_DECL_FUTEX_LOCK_PI) && HAVE_DECL_FUTEX_LOCK_PI)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_LOCK_PI) == (6), "FUTEX_LOCK_PI != 6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_LOCK_PI 6
#endif
#if defined(FUTEX_UNLOCK_PI) || (defined(HAVE_DECL_FUTEX_UNLOCK_PI) && HAVE_DECL_FUTEX_UNLOCK_PI)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_UNLOCK_PI) == (7), "FUTEX_UNLOCK_PI != 7");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_UNLOCK_PI 7
#endif
#if defined(FUTEX_TRYLOCK_PI) || (defined(HAVE_DECL_FUTEX_TRYLOCK_PI) && HAVE_DECL_FUTEX_TRYLOCK_PI)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_TRYLOCK_PI) == (8), "FUTEX_TRYLOCK_PI != 8");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_TRYLOCK_PI 8
#endif
#if defined(FUTEX_WAIT_BITSET) || (defined(HAVE_DECL_FUTEX_WAIT_BITSET) && HAVE_DECL_FUTEX_WAIT_BITSET)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAIT_BITSET) == (9), "FUTEX_WAIT_BITSET != 9");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAIT_BITSET 9
#endif
#if defined(FUTEX_WAKE_BITSET) || (defined(HAVE_DECL_FUTEX_WAKE_BITSET) && HAVE_DECL_FUTEX_WAKE_BITSET)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAKE_BITSET) == (10), "FUTEX_WAKE_BITSET != 10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAKE_BITSET 10
#endif
#if defined(FUTEX_WAIT_REQUEUE_PI) || (defined(HAVE_DECL_FUTEX_WAIT_REQUEUE_PI) && HAVE_DECL_FUTEX_WAIT_REQUEUE_PI)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAIT_REQUEUE_PI) == (11), "FUTEX_WAIT_REQUEUE_PI != 11");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAIT_REQUEUE_PI 11
#endif
#if defined(FUTEX_CMP_REQUEUE_PI) || (defined(HAVE_DECL_FUTEX_CMP_REQUEUE_PI) && HAVE_DECL_FUTEX_CMP_REQUEUE_PI)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_CMP_REQUEUE_PI) == (12), "FUTEX_CMP_REQUEUE_PI != 12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_CMP_REQUEUE_PI 12
#endif
#if defined(FUTEX_LOCK_PI2) || (defined(HAVE_DECL_FUTEX_LOCK_PI2) && HAVE_DECL_FUTEX_LOCK_PI2)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_LOCK_PI2) == (13), "FUTEX_LOCK_PI2 != 13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_LOCK_PI2 13
#endif
#if defined(FUTEX_WAIT_PRIVATE) || (defined(HAVE_DECL_FUTEX_WAIT_PRIVATE) && HAVE_DECL_FUTEX_WAIT_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAIT_PRIVATE) == ((FUTEX_WAIT | FUTEX_PRIVATE_FLAG)), "FUTEX_WAIT_PRIVATE != (FUTEX_WAIT | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAIT_PRIVATE (FUTEX_WAIT | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_WAKE_PRIVATE) || (defined(HAVE_DECL_FUTEX_WAKE_PRIVATE) && HAVE_DECL_FUTEX_WAKE_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAKE_PRIVATE) == ((FUTEX_WAKE | FUTEX_PRIVATE_FLAG)), "FUTEX_WAKE_PRIVATE != (FUTEX_WAKE | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAKE_PRIVATE (FUTEX_WAKE | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_REQUEUE_PRIVATE) || (defined(HAVE_DECL_FUTEX_REQUEUE_PRIVATE) && HAVE_DECL_FUTEX_REQUEUE_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_REQUEUE_PRIVATE) == ((FUTEX_REQUEUE | FUTEX_PRIVATE_FLAG)), "FUTEX_REQUEUE_PRIVATE != (FUTEX_REQUEUE | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_REQUEUE_PRIVATE (FUTEX_REQUEUE | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_CMP_REQUEUE_PRIVATE) || (defined(HAVE_DECL_FUTEX_CMP_REQUEUE_PRIVATE) && HAVE_DECL_FUTEX_CMP_REQUEUE_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_CMP_REQUEUE_PRIVATE) == ((FUTEX_CMP_REQUEUE | FUTEX_PRIVATE_FLAG)), "FUTEX_CMP_REQUEUE_PRIVATE != (FUTEX_CMP_REQUEUE | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_CMP_REQUEUE_PRIVATE (FUTEX_CMP_REQUEUE | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_WAKE_OP_PRIVATE) || (defined(HAVE_DECL_FUTEX_WAKE_OP_PRIVATE) && HAVE_DECL_FUTEX_WAKE_OP_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAKE_OP_PRIVATE) == ((FUTEX_WAKE_OP | FUTEX_PRIVATE_FLAG)), "FUTEX_WAKE_OP_PRIVATE != (FUTEX_WAKE_OP | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAKE_OP_PRIVATE (FUTEX_WAKE_OP | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_LOCK_PI_PRIVATE) || (defined(HAVE_DECL_FUTEX_LOCK_PI_PRIVATE) && HAVE_DECL_FUTEX_LOCK_PI_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_LOCK_PI_PRIVATE) == ((FUTEX_LOCK_PI | FUTEX_PRIVATE_FLAG)), "FUTEX_LOCK_PI_PRIVATE != (FUTEX_LOCK_PI | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_LOCK_PI_PRIVATE (FUTEX_LOCK_PI | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_UNLOCK_PI_PRIVATE) || (defined(HAVE_DECL_FUTEX_UNLOCK_PI_PRIVATE) && HAVE_DECL_FUTEX_UNLOCK_PI_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_UNLOCK_PI_PRIVATE) == ((FUTEX_UNLOCK_PI | FUTEX_PRIVATE_FLAG)), "FUTEX_UNLOCK_PI_PRIVATE != (FUTEX_UNLOCK_PI | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_UNLOCK_PI_PRIVATE (FUTEX_UNLOCK_PI | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_TRYLOCK_PI_PRIVATE) || (defined(HAVE_DECL_FUTEX_TRYLOCK_PI_PRIVATE) && HAVE_DECL_FUTEX_TRYLOCK_PI_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_TRYLOCK_PI_PRIVATE) == ((FUTEX_TRYLOCK_PI | FUTEX_PRIVATE_FLAG)), "FUTEX_TRYLOCK_PI_PRIVATE != (FUTEX_TRYLOCK_PI | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_TRYLOCK_PI_PRIVATE (FUTEX_TRYLOCK_PI | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_WAIT_BITSET_PRIVATE) || (defined(HAVE_DECL_FUTEX_WAIT_BITSET_PRIVATE) && HAVE_DECL_FUTEX_WAIT_BITSET_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAIT_BITSET_PRIVATE) == ((FUTEX_WAIT_BITSET | FUTEX_PRIVATE_FLAG)), "FUTEX_WAIT_BITSET_PRIVATE != (FUTEX_WAIT_BITSET | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAIT_BITSET_PRIVATE (FUTEX_WAIT_BITSET | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_WAKE_BITSET_PRIVATE) || (defined(HAVE_DECL_FUTEX_WAKE_BITSET_PRIVATE) && HAVE_DECL_FUTEX_WAKE_BITSET_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAKE_BITSET_PRIVATE) == ((FUTEX_WAKE_BITSET | FUTEX_PRIVATE_FLAG)), "FUTEX_WAKE_BITSET_PRIVATE != (FUTEX_WAKE_BITSET | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAKE_BITSET_PRIVATE (FUTEX_WAKE_BITSET | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_WAIT_REQUEUE_PI_PRIVATE) || (defined(HAVE_DECL_FUTEX_WAIT_REQUEUE_PI_PRIVATE) && HAVE_DECL_FUTEX_WAIT_REQUEUE_PI_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_WAIT_REQUEUE_PI_PRIVATE) == ((FUTEX_WAIT_REQUEUE_PI | FUTEX_PRIVATE_FLAG)), "FUTEX_WAIT_REQUEUE_PI_PRIVATE != (FUTEX_WAIT_REQUEUE_PI | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_WAIT_REQUEUE_PI_PRIVATE (FUTEX_WAIT_REQUEUE_PI | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_CMP_REQUEUE_PI_PRIVATE) || (defined(HAVE_DECL_FUTEX_CMP_REQUEUE_PI_PRIVATE) && HAVE_DECL_FUTEX_CMP_REQUEUE_PI_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_CMP_REQUEUE_PI_PRIVATE) == ((FUTEX_CMP_REQUEUE_PI | FUTEX_PRIVATE_FLAG)), "FUTEX_CMP_REQUEUE_PI_PRIVATE != (FUTEX_CMP_REQUEUE_PI | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_CMP_REQUEUE_PI_PRIVATE (FUTEX_CMP_REQUEUE_PI | FUTEX_PRIVATE_FLAG)
#endif
#if defined(FUTEX_LOCK_PI2_PRIVATE) || (defined(HAVE_DECL_FUTEX_LOCK_PI2_PRIVATE) && HAVE_DECL_FUTEX_LOCK_PI2_PRIVATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FUTEX_LOCK_PI2_PRIVATE) == ((FUTEX_LOCK_PI2 | FUTEX_PRIVATE_FLAG)), "FUTEX_LOCK_PI2_PRIVATE != (FUTEX_LOCK_PI2 | FUTEX_PRIVATE_FLAG)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FUTEX_LOCK_PI2_PRIVATE (FUTEX_LOCK_PI2 | FUTEX_PRIVATE_FLAG)
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat futexops in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data futexops_xdata[] = {
 XLAT(FUTEX_WAIT),
 #define XLAT_VAL_0 ((unsigned) (FUTEX_WAIT))
 #define XLAT_STR_0 STRINGIFY(FUTEX_WAIT)
 XLAT(FUTEX_WAKE),
 #define XLAT_VAL_1 ((unsigned) (FUTEX_WAKE))
 #define XLAT_STR_1 STRINGIFY(FUTEX_WAKE)
 XLAT(FUTEX_FD),
 #define XLAT_VAL_2 ((unsigned) (FUTEX_FD))
 #define XLAT_STR_2 STRINGIFY(FUTEX_FD)
 XLAT(FUTEX_REQUEUE),
 #define XLAT_VAL_3 ((unsigned) (FUTEX_REQUEUE))
 #define XLAT_STR_3 STRINGIFY(FUTEX_REQUEUE)
 XLAT(FUTEX_CMP_REQUEUE),
 #define XLAT_VAL_4 ((unsigned) (FUTEX_CMP_REQUEUE))
 #define XLAT_STR_4 STRINGIFY(FUTEX_CMP_REQUEUE)
 XLAT(FUTEX_WAKE_OP),
 #define XLAT_VAL_5 ((unsigned) (FUTEX_WAKE_OP))
 #define XLAT_STR_5 STRINGIFY(FUTEX_WAKE_OP)
 XLAT(FUTEX_LOCK_PI),
 #define XLAT_VAL_6 ((unsigned) (FUTEX_LOCK_PI))
 #define XLAT_STR_6 STRINGIFY(FUTEX_LOCK_PI)
 XLAT(FUTEX_UNLOCK_PI),
 #define XLAT_VAL_7 ((unsigned) (FUTEX_UNLOCK_PI))
 #define XLAT_STR_7 STRINGIFY(FUTEX_UNLOCK_PI)
 XLAT(FUTEX_TRYLOCK_PI),
 #define XLAT_VAL_8 ((unsigned) (FUTEX_TRYLOCK_PI))
 #define XLAT_STR_8 STRINGIFY(FUTEX_TRYLOCK_PI)
 XLAT(FUTEX_WAIT_BITSET),
 #define XLAT_VAL_9 ((unsigned) (FUTEX_WAIT_BITSET))
 #define XLAT_STR_9 STRINGIFY(FUTEX_WAIT_BITSET)
 XLAT(FUTEX_WAKE_BITSET),
 #define XLAT_VAL_10 ((unsigned) (FUTEX_WAKE_BITSET))
 #define XLAT_STR_10 STRINGIFY(FUTEX_WAKE_BITSET)
 XLAT(FUTEX_WAIT_REQUEUE_PI),
 #define XLAT_VAL_11 ((unsigned) (FUTEX_WAIT_REQUEUE_PI))
 #define XLAT_STR_11 STRINGIFY(FUTEX_WAIT_REQUEUE_PI)
 XLAT(FUTEX_CMP_REQUEUE_PI),
 #define XLAT_VAL_12 ((unsigned) (FUTEX_CMP_REQUEUE_PI))
 #define XLAT_STR_12 STRINGIFY(FUTEX_CMP_REQUEUE_PI)
 XLAT(FUTEX_LOCK_PI2),
 #define XLAT_VAL_13 ((unsigned) (FUTEX_LOCK_PI2))
 #define XLAT_STR_13 STRINGIFY(FUTEX_LOCK_PI2)
 XLAT(FUTEX_WAIT_PRIVATE),
 #define XLAT_VAL_14 ((unsigned) (FUTEX_WAIT_PRIVATE))
 #define XLAT_STR_14 STRINGIFY(FUTEX_WAIT_PRIVATE)
 XLAT(FUTEX_WAKE_PRIVATE),
 #define XLAT_VAL_15 ((unsigned) (FUTEX_WAKE_PRIVATE))
 #define XLAT_STR_15 STRINGIFY(FUTEX_WAKE_PRIVATE)
#if defined(FUTEX_FD) || (defined(HAVE_DECL_FUTEX_FD) && HAVE_DECL_FUTEX_FD)
  XLAT(FUTEX_FD|FUTEX_PRIVATE_FLAG),
 #define XLAT_VAL_16 ((unsigned) (FUTEX_FD|FUTEX_PRIVATE_FLAG))
 #define XLAT_STR_16 STRINGIFY(FUTEX_FD|FUTEX_PRIVATE_FLAG)
#endif
 XLAT(FUTEX_REQUEUE_PRIVATE),
 #define XLAT_VAL_17 ((unsigned) (FUTEX_REQUEUE_PRIVATE))
 #define XLAT_STR_17 STRINGIFY(FUTEX_REQUEUE_PRIVATE)
 XLAT(FUTEX_CMP_REQUEUE_PRIVATE),
 #define XLAT_VAL_18 ((unsigned) (FUTEX_CMP_REQUEUE_PRIVATE))
 #define XLAT_STR_18 STRINGIFY(FUTEX_CMP_REQUEUE_PRIVATE)
 XLAT(FUTEX_WAKE_OP_PRIVATE),
 #define XLAT_VAL_19 ((unsigned) (FUTEX_WAKE_OP_PRIVATE))
 #define XLAT_STR_19 STRINGIFY(FUTEX_WAKE_OP_PRIVATE)
 XLAT(FUTEX_LOCK_PI_PRIVATE),
 #define XLAT_VAL_20 ((unsigned) (FUTEX_LOCK_PI_PRIVATE))
 #define XLAT_STR_20 STRINGIFY(FUTEX_LOCK_PI_PRIVATE)
 XLAT(FUTEX_UNLOCK_PI_PRIVATE),
 #define XLAT_VAL_21 ((unsigned) (FUTEX_UNLOCK_PI_PRIVATE))
 #define XLAT_STR_21 STRINGIFY(FUTEX_UNLOCK_PI_PRIVATE)
 XLAT(FUTEX_TRYLOCK_PI_PRIVATE),
 #define XLAT_VAL_22 ((unsigned) (FUTEX_TRYLOCK_PI_PRIVATE))
 #define XLAT_STR_22 STRINGIFY(FUTEX_TRYLOCK_PI_PRIVATE)
 XLAT(FUTEX_WAIT_BITSET_PRIVATE),
 #define XLAT_VAL_23 ((unsigned) (FUTEX_WAIT_BITSET_PRIVATE))
 #define XLAT_STR_23 STRINGIFY(FUTEX_WAIT_BITSET_PRIVATE)
 XLAT(FUTEX_WAKE_BITSET_PRIVATE),
 #define XLAT_VAL_24 ((unsigned) (FUTEX_WAKE_BITSET_PRIVATE))
 #define XLAT_STR_24 STRINGIFY(FUTEX_WAKE_BITSET_PRIVATE)
 XLAT(FUTEX_WAIT_REQUEUE_PI_PRIVATE),
 #define XLAT_VAL_25 ((unsigned) (FUTEX_WAIT_REQUEUE_PI_PRIVATE))
 #define XLAT_STR_25 STRINGIFY(FUTEX_WAIT_REQUEUE_PI_PRIVATE)
 XLAT(FUTEX_CMP_REQUEUE_PI_PRIVATE),
 #define XLAT_VAL_26 ((unsigned) (FUTEX_CMP_REQUEUE_PI_PRIVATE))
 #define XLAT_STR_26 STRINGIFY(FUTEX_CMP_REQUEUE_PI_PRIVATE)
 XLAT(FUTEX_LOCK_PI2_PRIVATE),
 #define XLAT_VAL_27 ((unsigned) (FUTEX_LOCK_PI2_PRIVATE))
 #define XLAT_STR_27 STRINGIFY(FUTEX_LOCK_PI2_PRIVATE)
#if defined(FUTEX_WAIT) || (defined(HAVE_DECL_FUTEX_WAIT) && HAVE_DECL_FUTEX_WAIT)
  XLAT(FUTEX_WAIT|FUTEX_CLOCK_REALTIME),
 #define XLAT_VAL_28 ((unsigned) (FUTEX_WAIT|FUTEX_CLOCK_REALTIME))
 #define XLAT_STR_28 STRINGIFY(FUTEX_WAIT|FUTEX_CLOCK_REALTIME)
#endif
#if defined(FUTEX_WAIT_PRIVATE) || (defined(HAVE_DECL_FUTEX_WAIT_PRIVATE) && HAVE_DECL_FUTEX_WAIT_PRIVATE)
  XLAT(FUTEX_WAIT_PRIVATE|FUTEX_CLOCK_REALTIME),
 #define XLAT_VAL_29 ((unsigned) (FUTEX_WAIT_PRIVATE|FUTEX_CLOCK_REALTIME))
 #define XLAT_STR_29 STRINGIFY(FUTEX_WAIT_PRIVATE|FUTEX_CLOCK_REALTIME)
#endif
#if defined(FUTEX_WAIT_BITSET) || (defined(HAVE_DECL_FUTEX_WAIT_BITSET) && HAVE_DECL_FUTEX_WAIT_BITSET)
  XLAT(FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME),
 #define XLAT_VAL_30 ((unsigned) (FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME))
 #define XLAT_STR_30 STRINGIFY(FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME)
#endif
#if defined(FUTEX_WAIT_BITSET_PRIVATE) || (defined(HAVE_DECL_FUTEX_WAIT_BITSET_PRIVATE) && HAVE_DECL_FUTEX_WAIT_BITSET_PRIVATE)
  XLAT(FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME),
 #define XLAT_VAL_31 ((unsigned) (FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME))
 #define XLAT_STR_31 STRINGIFY(FUTEX_WAIT_BITSET_PRIVATE|FUTEX_CLOCK_REALTIME)
#endif
#if defined(FUTEX_WAIT_REQUEUE_PI) || (defined(HAVE_DECL_FUTEX_WAIT_REQUEUE_PI) && HAVE_DECL_FUTEX_WAIT_REQUEUE_PI)
  XLAT(FUTEX_WAIT_REQUEUE_PI|FUTEX_CLOCK_REALTIME),
 #define XLAT_VAL_32 ((unsigned) (FUTEX_WAIT_REQUEUE_PI|FUTEX_CLOCK_REALTIME))
 #define XLAT_STR_32 STRINGIFY(FUTEX_WAIT_REQUEUE_PI|FUTEX_CLOCK_REALTIME)
#endif
#if defined(FUTEX_WAIT_REQUEUE_PI_PRIVATE) || (defined(HAVE_DECL_FUTEX_WAIT_REQUEUE_PI_PRIVATE) && HAVE_DECL_FUTEX_WAIT_REQUEUE_PI_PRIVATE)
  XLAT(FUTEX_WAIT_REQUEUE_PI_PRIVATE|FUTEX_CLOCK_REALTIME),
 #define XLAT_VAL_33 ((unsigned) (FUTEX_WAIT_REQUEUE_PI_PRIVATE|FUTEX_CLOCK_REALTIME))
 #define XLAT_STR_33 STRINGIFY(FUTEX_WAIT_REQUEUE_PI_PRIVATE|FUTEX_CLOCK_REALTIME)
#endif
};
static
const struct xlat futexops[1] = { {
 .data = futexops_xdata,
 .size = ARRAY_SIZE(futexops_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
#  ifdef XLAT_VAL_22
  | XLAT_VAL_22
#  endif
#  ifdef XLAT_VAL_23
  | XLAT_VAL_23
#  endif
#  ifdef XLAT_VAL_24
  | XLAT_VAL_24
#  endif
#  ifdef XLAT_VAL_25
  | XLAT_VAL_25
#  endif
#  ifdef XLAT_VAL_26
  | XLAT_VAL_26
#  endif
#  ifdef XLAT_VAL_27
  | XLAT_VAL_27
#  endif
#  ifdef XLAT_VAL_28
  | XLAT_VAL_28
#  endif
#  ifdef XLAT_VAL_29
  | XLAT_VAL_29
#  endif
#  ifdef XLAT_VAL_30
  | XLAT_VAL_30
#  endif
#  ifdef XLAT_VAL_31
  | XLAT_VAL_31
#  endif
#  ifdef XLAT_VAL_32
  | XLAT_VAL_32
#  endif
#  ifdef XLAT_VAL_33
  | XLAT_VAL_33
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
#  ifdef XLAT_STR_22
  + sizeof(XLAT_STR_22)
#  endif
#  ifdef XLAT_STR_23
  + sizeof(XLAT_STR_23)
#  endif
#  ifdef XLAT_STR_24
  + sizeof(XLAT_STR_24)
#  endif
#  ifdef XLAT_STR_25
  + sizeof(XLAT_STR_25)
#  endif
#  ifdef XLAT_STR_26
  + sizeof(XLAT_STR_26)
#  endif
#  ifdef XLAT_STR_27
  + sizeof(XLAT_STR_27)
#  endif
#  ifdef XLAT_STR_28
  + sizeof(XLAT_STR_28)
#  endif
#  ifdef XLAT_STR_29
  + sizeof(XLAT_STR_29)
#  endif
#  ifdef XLAT_STR_30
  + sizeof(XLAT_STR_30)
#  endif
#  ifdef XLAT_STR_31
  + sizeof(XLAT_STR_31)
#  endif
#  ifdef XLAT_STR_32
  + sizeof(XLAT_STR_32)
#  endif
#  ifdef XLAT_STR_33
  + sizeof(XLAT_STR_33)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
#  undef XLAT_STR_22
#  undef XLAT_VAL_22
#  undef XLAT_STR_23
#  undef XLAT_VAL_23
#  undef XLAT_STR_24
#  undef XLAT_VAL_24
#  undef XLAT_STR_25
#  undef XLAT_VAL_25
#  undef XLAT_STR_26
#  undef XLAT_VAL_26
#  undef XLAT_STR_27
#  undef XLAT_VAL_27
#  undef XLAT_STR_28
#  undef XLAT_VAL_28
#  undef XLAT_STR_29
#  undef XLAT_VAL_29
#  undef XLAT_STR_30
#  undef XLAT_VAL_30
#  undef XLAT_STR_31
#  undef XLAT_VAL_31
#  undef XLAT_STR_32
#  undef XLAT_VAL_32
#  undef XLAT_STR_33
#  undef XLAT_VAL_33
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
