/* Generated by ./src/xlat/gen.sh from ./src/xlat/uffd_register_mode_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat uffd_register_mode_flags in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data uffd_register_mode_flags_xdata[] = {
 XLAT_TYPE(uint64_t, UFFDIO_REGISTER_MODE_MISSING),
 #define XLAT_VAL_0 ((uint64_t) (UFFDIO_REGISTER_MODE_MISSING))
 #define XLAT_STR_0 STRINGIFY(UFFDIO_REGISTER_MODE_MISSING)
 XLAT_TYPE(uint64_t, UFFDIO_REGISTER_MODE_WP),
 #define XLAT_VAL_1 ((uint64_t) (UFFDIO_REGISTER_MODE_WP))
 #define XLAT_STR_1 STRINGIFY(UFFDIO_REGISTER_MODE_WP)
 XLAT_TYPE(uint64_t, UFFDIO_REGISTER_MODE_MINOR),
 #define XLAT_VAL_2 ((uint64_t) (UFFDIO_REGISTER_MODE_MINOR))
 #define XLAT_STR_2 STRINGIFY(UFFDIO_REGISTER_MODE_MINOR)
};
static
const struct xlat uffd_register_mode_flags[1] = { {
 .data = uffd_register_mode_flags_xdata,
 .size = ARRAY_SIZE(uffd_register_mode_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
