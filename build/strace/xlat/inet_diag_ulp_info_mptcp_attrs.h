/* Generated by ./src/xlat/gen.sh from ./src/xlat/inet_diag_ulp_info_mptcp_attrs.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_UNSPEC) == (0), "MPTCP_SUBFLOW_ATTR_UNSPEC != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_TOKEN_REM) == (1), "MPTCP_SUBFLOW_ATTR_TOKEN_REM != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_TOKEN_LOC) == (2), "MPTCP_SUBFLOW_ATTR_TOKEN_LOC != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_RELWRITE_SEQ) == (3), "MPTCP_SUBFLOW_ATTR_RELWRITE_SEQ != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_MAP_SEQ) == (4), "MPTCP_SUBFLOW_ATTR_MAP_SEQ != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_MAP_SFSEQ) == (5), "MPTCP_SUBFLOW_ATTR_MAP_SFSEQ != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_SSN_OFFSET) == (6), "MPTCP_SUBFLOW_ATTR_SSN_OFFSET != 6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_MAP_DATALEN) == (7), "MPTCP_SUBFLOW_ATTR_MAP_DATALEN != 7");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_FLAGS) == (8), "MPTCP_SUBFLOW_ATTR_FLAGS != 8");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_ID_REM) == (9), "MPTCP_SUBFLOW_ATTR_ID_REM != 9");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_ID_LOC) == (10), "MPTCP_SUBFLOW_ATTR_ID_LOC != 10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPTCP_SUBFLOW_ATTR_PAD) == (11), "MPTCP_SUBFLOW_ATTR_PAD != 11");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat inet_diag_ulp_info_mptcp_attrs in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data inet_diag_ulp_info_mptcp_attrs_xdata[] = {
 [MPTCP_SUBFLOW_ATTR_UNSPEC] = XLAT(MPTCP_SUBFLOW_ATTR_UNSPEC),
 #define XLAT_VAL_0 ((unsigned) (MPTCP_SUBFLOW_ATTR_UNSPEC))
 #define XLAT_STR_0 STRINGIFY(MPTCP_SUBFLOW_ATTR_UNSPEC)
 [MPTCP_SUBFLOW_ATTR_TOKEN_REM] = XLAT(MPTCP_SUBFLOW_ATTR_TOKEN_REM),
 #define XLAT_VAL_1 ((unsigned) (MPTCP_SUBFLOW_ATTR_TOKEN_REM))
 #define XLAT_STR_1 STRINGIFY(MPTCP_SUBFLOW_ATTR_TOKEN_REM)
 [MPTCP_SUBFLOW_ATTR_TOKEN_LOC] = XLAT(MPTCP_SUBFLOW_ATTR_TOKEN_LOC),
 #define XLAT_VAL_2 ((unsigned) (MPTCP_SUBFLOW_ATTR_TOKEN_LOC))
 #define XLAT_STR_2 STRINGIFY(MPTCP_SUBFLOW_ATTR_TOKEN_LOC)
 [MPTCP_SUBFLOW_ATTR_RELWRITE_SEQ] = XLAT(MPTCP_SUBFLOW_ATTR_RELWRITE_SEQ),
 #define XLAT_VAL_3 ((unsigned) (MPTCP_SUBFLOW_ATTR_RELWRITE_SEQ))
 #define XLAT_STR_3 STRINGIFY(MPTCP_SUBFLOW_ATTR_RELWRITE_SEQ)
 [MPTCP_SUBFLOW_ATTR_MAP_SEQ] = XLAT(MPTCP_SUBFLOW_ATTR_MAP_SEQ),
 #define XLAT_VAL_4 ((unsigned) (MPTCP_SUBFLOW_ATTR_MAP_SEQ))
 #define XLAT_STR_4 STRINGIFY(MPTCP_SUBFLOW_ATTR_MAP_SEQ)
 [MPTCP_SUBFLOW_ATTR_MAP_SFSEQ] = XLAT(MPTCP_SUBFLOW_ATTR_MAP_SFSEQ),
 #define XLAT_VAL_5 ((unsigned) (MPTCP_SUBFLOW_ATTR_MAP_SFSEQ))
 #define XLAT_STR_5 STRINGIFY(MPTCP_SUBFLOW_ATTR_MAP_SFSEQ)
 [MPTCP_SUBFLOW_ATTR_SSN_OFFSET] = XLAT(MPTCP_SUBFLOW_ATTR_SSN_OFFSET),
 #define XLAT_VAL_6 ((unsigned) (MPTCP_SUBFLOW_ATTR_SSN_OFFSET))
 #define XLAT_STR_6 STRINGIFY(MPTCP_SUBFLOW_ATTR_SSN_OFFSET)
 [MPTCP_SUBFLOW_ATTR_MAP_DATALEN] = XLAT(MPTCP_SUBFLOW_ATTR_MAP_DATALEN),
 #define XLAT_VAL_7 ((unsigned) (MPTCP_SUBFLOW_ATTR_MAP_DATALEN))
 #define XLAT_STR_7 STRINGIFY(MPTCP_SUBFLOW_ATTR_MAP_DATALEN)
 [MPTCP_SUBFLOW_ATTR_FLAGS] = XLAT(MPTCP_SUBFLOW_ATTR_FLAGS),
 #define XLAT_VAL_8 ((unsigned) (MPTCP_SUBFLOW_ATTR_FLAGS))
 #define XLAT_STR_8 STRINGIFY(MPTCP_SUBFLOW_ATTR_FLAGS)
 [MPTCP_SUBFLOW_ATTR_ID_REM] = XLAT(MPTCP_SUBFLOW_ATTR_ID_REM),
 #define XLAT_VAL_9 ((unsigned) (MPTCP_SUBFLOW_ATTR_ID_REM))
 #define XLAT_STR_9 STRINGIFY(MPTCP_SUBFLOW_ATTR_ID_REM)
 [MPTCP_SUBFLOW_ATTR_ID_LOC] = XLAT(MPTCP_SUBFLOW_ATTR_ID_LOC),
 #define XLAT_VAL_10 ((unsigned) (MPTCP_SUBFLOW_ATTR_ID_LOC))
 #define XLAT_STR_10 STRINGIFY(MPTCP_SUBFLOW_ATTR_ID_LOC)
 [MPTCP_SUBFLOW_ATTR_PAD] = XLAT(MPTCP_SUBFLOW_ATTR_PAD),
 #define XLAT_VAL_11 ((unsigned) (MPTCP_SUBFLOW_ATTR_PAD))
 #define XLAT_STR_11 STRINGIFY(MPTCP_SUBFLOW_ATTR_PAD)
};
static
const struct xlat inet_diag_ulp_info_mptcp_attrs[1] = { {
 .data = inet_diag_ulp_info_mptcp_attrs_xdata,
 .size = ARRAY_SIZE(inet_diag_ulp_info_mptcp_attrs_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
