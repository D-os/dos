/* Generated by ./src/xlat/gen.sh from ./src/xlat/sparc_kern_features.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(KERN_FEATURE_MIXED_MODE_STACK) || (defined(HAVE_DECL_KERN_FEATURE_MIXED_MODE_STACK) && HAVE_DECL_KERN_FEATURE_MIXED_MODE_STACK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((KERN_FEATURE_MIXED_MODE_STACK) == (1), "KERN_FEATURE_MIXED_MODE_STACK != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define KERN_FEATURE_MIXED_MODE_STACK 1
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat sparc_kern_features in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data sparc_kern_features_xdata[] = {
 XLAT(KERN_FEATURE_MIXED_MODE_STACK),
 #define XLAT_VAL_0 ((unsigned) (KERN_FEATURE_MIXED_MODE_STACK))
 #define XLAT_STR_0 STRINGIFY(KERN_FEATURE_MIXED_MODE_STACK)
};
static
const struct xlat sparc_kern_features[1] = { {
 .data = sparc_kern_features_xdata,
 .size = ARRAY_SIZE(sparc_kern_features_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
