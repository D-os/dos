/* Generated by ./src/xlat/gen.sh from ./src/xlat/sockopt_txrehash_vals.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(SOCK_TXREHASH_DISABLED) || (defined(HAVE_DECL_SOCK_TXREHASH_DISABLED) && HAVE_DECL_SOCK_TXREHASH_DISABLED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SOCK_TXREHASH_DISABLED) == (0), "SOCK_TXREHASH_DISABLED != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SOCK_TXREHASH_DISABLED 0
#endif
#if defined(SOCK_TXREHASH_ENABLED) || (defined(HAVE_DECL_SOCK_TXREHASH_ENABLED) && HAVE_DECL_SOCK_TXREHASH_ENABLED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SOCK_TXREHASH_ENABLED) == (1), "SOCK_TXREHASH_ENABLED != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SOCK_TXREHASH_ENABLED 1
#endif
#if defined(SOCK_TXREHASH_DEFAULT) || (defined(HAVE_DECL_SOCK_TXREHASH_DEFAULT) && HAVE_DECL_SOCK_TXREHASH_DEFAULT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SOCK_TXREHASH_DEFAULT) == (255), "SOCK_TXREHASH_DEFAULT != 255");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SOCK_TXREHASH_DEFAULT 255
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat sockopt_txrehash_vals in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data sockopt_txrehash_vals_xdata[] = {
 XLAT(SOCK_TXREHASH_DISABLED),
 #define XLAT_VAL_0 ((unsigned) (SOCK_TXREHASH_DISABLED))
 #define XLAT_STR_0 STRINGIFY(SOCK_TXREHASH_DISABLED)
 XLAT(SOCK_TXREHASH_ENABLED),
 #define XLAT_VAL_1 ((unsigned) (SOCK_TXREHASH_ENABLED))
 #define XLAT_STR_1 STRINGIFY(SOCK_TXREHASH_ENABLED)
 XLAT(SOCK_TXREHASH_DEFAULT),
 #define XLAT_VAL_2 ((unsigned) (SOCK_TXREHASH_DEFAULT))
 #define XLAT_STR_2 STRINGIFY(SOCK_TXREHASH_DEFAULT)
};
static
const struct xlat sockopt_txrehash_vals[1] = { {
 .data = sockopt_txrehash_vals_xdata,
 .size = ARRAY_SIZE(sockopt_txrehash_vals_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
