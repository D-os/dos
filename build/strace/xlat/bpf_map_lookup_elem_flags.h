/* Generated by ./src/xlat/gen.sh from ./src/xlat/bpf_map_lookup_elem_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(BPF_ANY) || (defined(HAVE_DECL_BPF_ANY) && HAVE_DECL_BPF_ANY)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BPF_ANY) == (0), "BPF_ANY != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define BPF_ANY 0
#endif
#if defined(BPF_F_LOCK) || (defined(HAVE_DECL_BPF_F_LOCK) && HAVE_DECL_BPF_F_LOCK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BPF_F_LOCK) == (4), "BPF_F_LOCK != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define BPF_F_LOCK 4
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat bpf_map_lookup_elem_flags in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data bpf_map_lookup_elem_flags_xdata[] = {
 XLAT(BPF_ANY),
 #define XLAT_VAL_0 ((unsigned) (BPF_ANY))
 #define XLAT_STR_0 STRINGIFY(BPF_ANY)
 XLAT(BPF_F_LOCK),
 #define XLAT_VAL_1 ((unsigned) (BPF_F_LOCK))
 #define XLAT_STR_1 STRINGIFY(BPF_F_LOCK)
};
static
const struct xlat bpf_map_lookup_elem_flags[1] = { {
 .data = bpf_map_lookup_elem_flags_xdata,
 .size = ARRAY_SIZE(bpf_map_lookup_elem_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
