/* Generated by ./src/xlat/gen.sh from ./src/xlat/ip_type_of_services.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifndef IN_MPERS

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data ip_type_of_services_xdata[] = {
#if defined(IPTOS_LOWDELAY) || (defined(HAVE_DECL_IPTOS_LOWDELAY) && HAVE_DECL_IPTOS_LOWDELAY)
  XLAT(IPTOS_LOWDELAY),
 #define XLAT_VAL_0 ((unsigned) (IPTOS_LOWDELAY))
 #define XLAT_STR_0 STRINGIFY(IPTOS_LOWDELAY)
#endif
#if defined(IPTOS_THROUGHPUT) || (defined(HAVE_DECL_IPTOS_THROUGHPUT) && HAVE_DECL_IPTOS_THROUGHPUT)
  XLAT(IPTOS_THROUGHPUT),
 #define XLAT_VAL_1 ((unsigned) (IPTOS_THROUGHPUT))
 #define XLAT_STR_1 STRINGIFY(IPTOS_THROUGHPUT)
#endif
#if defined(IPTOS_RELIABILITY) || (defined(HAVE_DECL_IPTOS_RELIABILITY) && HAVE_DECL_IPTOS_RELIABILITY)
  XLAT(IPTOS_RELIABILITY),
 #define XLAT_VAL_2 ((unsigned) (IPTOS_RELIABILITY))
 #define XLAT_STR_2 STRINGIFY(IPTOS_RELIABILITY)
#endif
#if defined(IPTOS_MINCOST) || (defined(HAVE_DECL_IPTOS_MINCOST) && HAVE_DECL_IPTOS_MINCOST)
  XLAT(IPTOS_MINCOST),
 #define XLAT_VAL_3 ((unsigned) (IPTOS_MINCOST))
 #define XLAT_STR_3 STRINGIFY(IPTOS_MINCOST)
#endif
};
const struct xlat ip_type_of_services[1] = { {
 .data = ip_type_of_services_xdata,
 .size = ARRAY_SIZE(ip_type_of_services_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
