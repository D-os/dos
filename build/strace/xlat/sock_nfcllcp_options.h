/* Generated by ./src/xlat/gen.sh from ./src/xlat/sock_nfcllcp_options.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(NFC_LLCP_RW) || (defined(HAVE_DECL_NFC_LLCP_RW) && HAVE_DECL_NFC_LLCP_RW)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((NFC_LLCP_RW) == (0), "NFC_LLCP_RW != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define NFC_LLCP_RW 0
#endif
#if defined(NFC_LLCP_MIUX) || (defined(HAVE_DECL_NFC_LLCP_MIUX) && HAVE_DECL_NFC_LLCP_MIUX)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((NFC_LLCP_MIUX) == (1), "NFC_LLCP_MIUX != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define NFC_LLCP_MIUX 1
#endif
#if defined(NFC_LLCP_REMOTE_MIU) || (defined(HAVE_DECL_NFC_LLCP_REMOTE_MIU) && HAVE_DECL_NFC_LLCP_REMOTE_MIU)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((NFC_LLCP_REMOTE_MIU) == (2), "NFC_LLCP_REMOTE_MIU != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define NFC_LLCP_REMOTE_MIU 2
#endif
#if defined(NFC_LLCP_REMOTE_LTO) || (defined(HAVE_DECL_NFC_LLCP_REMOTE_LTO) && HAVE_DECL_NFC_LLCP_REMOTE_LTO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((NFC_LLCP_REMOTE_LTO) == (3), "NFC_LLCP_REMOTE_LTO != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define NFC_LLCP_REMOTE_LTO 3
#endif
#if defined(NFC_LLCP_REMOTE_RW) || (defined(HAVE_DECL_NFC_LLCP_REMOTE_RW) && HAVE_DECL_NFC_LLCP_REMOTE_RW)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((NFC_LLCP_REMOTE_RW) == (4), "NFC_LLCP_REMOTE_RW != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define NFC_LLCP_REMOTE_RW 4
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat sock_nfcllcp_options in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data sock_nfcllcp_options_xdata[] = {
 [NFC_LLCP_RW] = XLAT(NFC_LLCP_RW),
 #define XLAT_VAL_0 ((unsigned) (NFC_LLCP_RW))
 #define XLAT_STR_0 STRINGIFY(NFC_LLCP_RW)
 [NFC_LLCP_MIUX] = XLAT(NFC_LLCP_MIUX),
 #define XLAT_VAL_1 ((unsigned) (NFC_LLCP_MIUX))
 #define XLAT_STR_1 STRINGIFY(NFC_LLCP_MIUX)
 [NFC_LLCP_REMOTE_MIU] = XLAT(NFC_LLCP_REMOTE_MIU),
 #define XLAT_VAL_2 ((unsigned) (NFC_LLCP_REMOTE_MIU))
 #define XLAT_STR_2 STRINGIFY(NFC_LLCP_REMOTE_MIU)
 [NFC_LLCP_REMOTE_LTO] = XLAT(NFC_LLCP_REMOTE_LTO),
 #define XLAT_VAL_3 ((unsigned) (NFC_LLCP_REMOTE_LTO))
 #define XLAT_STR_3 STRINGIFY(NFC_LLCP_REMOTE_LTO)
 [NFC_LLCP_REMOTE_RW] = XLAT(NFC_LLCP_REMOTE_RW),
 #define XLAT_VAL_4 ((unsigned) (NFC_LLCP_REMOTE_RW))
 #define XLAT_STR_4 STRINGIFY(NFC_LLCP_REMOTE_RW)
};
static
const struct xlat sock_nfcllcp_options[1] = { {
 .data = sock_nfcllcp_options_xdata,
 .size = ARRAY_SIZE(sock_nfcllcp_options_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
