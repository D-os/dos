/* Generated by ./src/xlat/gen.sh from ./src/xlat/xattrflags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(XATTR_CREATE) || (defined(HAVE_DECL_XATTR_CREATE) && HAVE_DECL_XATTR_CREATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((XATTR_CREATE) == (1), "XATTR_CREATE != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define XATTR_CREATE 1
#endif
#if defined(XATTR_REPLACE) || (defined(HAVE_DECL_XATTR_REPLACE) && HAVE_DECL_XATTR_REPLACE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((XATTR_REPLACE) == (2), "XATTR_REPLACE != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define XATTR_REPLACE 2
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat xattrflags in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data xattrflags_xdata[] = {
 XLAT(XATTR_CREATE),
 #define XLAT_VAL_0 ((unsigned) (XATTR_CREATE))
 #define XLAT_STR_0 STRINGIFY(XATTR_CREATE)
 XLAT(XATTR_REPLACE),
 #define XLAT_VAL_1 ((unsigned) (XATTR_REPLACE))
 #define XLAT_STR_1 STRINGIFY(XATTR_REPLACE)
};
static
const struct xlat xattrflags[1] = { {
 .data = xattrflags_xdata,
 .size = ARRAY_SIZE(xattrflags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
