/* Generated by ./src/xlat/gen.sh from ./src/xlat/evdev_relative_axes.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat evdev_relative_axes in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data evdev_relative_axes_xdata[] = {
 [REL_X] = XLAT(REL_X),
 #define XLAT_VAL_0 ((unsigned) (REL_X))
 #define XLAT_STR_0 STRINGIFY(REL_X)
 [REL_Y] = XLAT(REL_Y),
 #define XLAT_VAL_1 ((unsigned) (REL_Y))
 #define XLAT_STR_1 STRINGIFY(REL_Y)
 [REL_Z] = XLAT(REL_Z),
 #define XLAT_VAL_2 ((unsigned) (REL_Z))
 #define XLAT_STR_2 STRINGIFY(REL_Z)
 [REL_RX] = XLAT(REL_RX),
 #define XLAT_VAL_3 ((unsigned) (REL_RX))
 #define XLAT_STR_3 STRINGIFY(REL_RX)
 [REL_RY] = XLAT(REL_RY),
 #define XLAT_VAL_4 ((unsigned) (REL_RY))
 #define XLAT_STR_4 STRINGIFY(REL_RY)
 [REL_RZ] = XLAT(REL_RZ),
 #define XLAT_VAL_5 ((unsigned) (REL_RZ))
 #define XLAT_STR_5 STRINGIFY(REL_RZ)
 [REL_HWHEEL] = XLAT(REL_HWHEEL),
 #define XLAT_VAL_6 ((unsigned) (REL_HWHEEL))
 #define XLAT_STR_6 STRINGIFY(REL_HWHEEL)
 [REL_DIAL] = XLAT(REL_DIAL),
 #define XLAT_VAL_7 ((unsigned) (REL_DIAL))
 #define XLAT_STR_7 STRINGIFY(REL_DIAL)
 [REL_WHEEL] = XLAT(REL_WHEEL),
 #define XLAT_VAL_8 ((unsigned) (REL_WHEEL))
 #define XLAT_STR_8 STRINGIFY(REL_WHEEL)
 [REL_MISC] = XLAT(REL_MISC),
 #define XLAT_VAL_9 ((unsigned) (REL_MISC))
 #define XLAT_STR_9 STRINGIFY(REL_MISC)
 [REL_RESERVED] = XLAT(REL_RESERVED),
 #define XLAT_VAL_10 ((unsigned) (REL_RESERVED))
 #define XLAT_STR_10 STRINGIFY(REL_RESERVED)
 [REL_WHEEL_HI_RES] = XLAT(REL_WHEEL_HI_RES),
 #define XLAT_VAL_11 ((unsigned) (REL_WHEEL_HI_RES))
 #define XLAT_STR_11 STRINGIFY(REL_WHEEL_HI_RES)
 [REL_HWHEEL_HI_RES] = XLAT(REL_HWHEEL_HI_RES),
 #define XLAT_VAL_12 ((unsigned) (REL_HWHEEL_HI_RES))
 #define XLAT_STR_12 STRINGIFY(REL_HWHEEL_HI_RES)
};
static
const struct xlat evdev_relative_axes[1] = { {
 .data = evdev_relative_axes_xdata,
 .size = ARRAY_SIZE(evdev_relative_axes_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
