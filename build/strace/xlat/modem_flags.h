/* Generated by ./src/xlat/gen.sh from ./src/xlat/modem_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat modem_flags in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data modem_flags_xdata[] = {
#if defined(TIOCM_LE) || (defined(HAVE_DECL_TIOCM_LE) && HAVE_DECL_TIOCM_LE)
  XLAT(TIOCM_LE),
 #define XLAT_VAL_0 ((unsigned) (TIOCM_LE))
 #define XLAT_STR_0 STRINGIFY(TIOCM_LE)
#endif
#if defined(TIOCM_DTR) || (defined(HAVE_DECL_TIOCM_DTR) && HAVE_DECL_TIOCM_DTR)
  XLAT(TIOCM_DTR),
 #define XLAT_VAL_1 ((unsigned) (TIOCM_DTR))
 #define XLAT_STR_1 STRINGIFY(TIOCM_DTR)
#endif
#if defined(TIOCM_RTS) || (defined(HAVE_DECL_TIOCM_RTS) && HAVE_DECL_TIOCM_RTS)
  XLAT(TIOCM_RTS),
 #define XLAT_VAL_2 ((unsigned) (TIOCM_RTS))
 #define XLAT_STR_2 STRINGIFY(TIOCM_RTS)
#endif
#if defined(TIOCM_ST) || (defined(HAVE_DECL_TIOCM_ST) && HAVE_DECL_TIOCM_ST)
  XLAT(TIOCM_ST),
 #define XLAT_VAL_3 ((unsigned) (TIOCM_ST))
 #define XLAT_STR_3 STRINGIFY(TIOCM_ST)
#endif
#if defined(TIOCM_SR) || (defined(HAVE_DECL_TIOCM_SR) && HAVE_DECL_TIOCM_SR)
  XLAT(TIOCM_SR),
 #define XLAT_VAL_4 ((unsigned) (TIOCM_SR))
 #define XLAT_STR_4 STRINGIFY(TIOCM_SR)
#endif
#if defined(TIOCM_CTS) || (defined(HAVE_DECL_TIOCM_CTS) && HAVE_DECL_TIOCM_CTS)
  XLAT(TIOCM_CTS),
 #define XLAT_VAL_5 ((unsigned) (TIOCM_CTS))
 #define XLAT_STR_5 STRINGIFY(TIOCM_CTS)
#endif
#if defined(TIOCM_CAR) || (defined(HAVE_DECL_TIOCM_CAR) && HAVE_DECL_TIOCM_CAR)
  XLAT(TIOCM_CAR),
 #define XLAT_VAL_6 ((unsigned) (TIOCM_CAR))
 #define XLAT_STR_6 STRINGIFY(TIOCM_CAR)
#endif
#if defined(TIOCM_CD) || (defined(HAVE_DECL_TIOCM_CD) && HAVE_DECL_TIOCM_CD)
  XLAT(TIOCM_CD),
 #define XLAT_VAL_7 ((unsigned) (TIOCM_CD))
 #define XLAT_STR_7 STRINGIFY(TIOCM_CD)
#endif
#if defined(TIOCM_RNG) || (defined(HAVE_DECL_TIOCM_RNG) && HAVE_DECL_TIOCM_RNG)
  XLAT(TIOCM_RNG),
 #define XLAT_VAL_8 ((unsigned) (TIOCM_RNG))
 #define XLAT_STR_8 STRINGIFY(TIOCM_RNG)
#endif
#if defined(TIOCM_RI) || (defined(HAVE_DECL_TIOCM_RI) && HAVE_DECL_TIOCM_RI)
  XLAT(TIOCM_RI),
 #define XLAT_VAL_9 ((unsigned) (TIOCM_RI))
 #define XLAT_STR_9 STRINGIFY(TIOCM_RI)
#endif
#if defined(TIOCM_DSR) || (defined(HAVE_DECL_TIOCM_DSR) && HAVE_DECL_TIOCM_DSR)
  XLAT(TIOCM_DSR),
 #define XLAT_VAL_10 ((unsigned) (TIOCM_DSR))
 #define XLAT_STR_10 STRINGIFY(TIOCM_DSR)
#endif
};
static
const struct xlat modem_flags[1] = { {
 .data = modem_flags_xdata,
 .size = ARRAY_SIZE(modem_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
