/* Generated by ./src/xlat/gen.sh from ./src/xlat/kd_meta_vals.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(K_METABIT) || (defined(HAVE_DECL_K_METABIT) && HAVE_DECL_K_METABIT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((K_METABIT) == (0x3), "K_METABIT != 0x3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define K_METABIT 0x3
#endif
#if defined(K_ESCPREFIX) || (defined(HAVE_DECL_K_ESCPREFIX) && HAVE_DECL_K_ESCPREFIX)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((K_ESCPREFIX) == (0x4), "K_ESCPREFIX != 0x4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define K_ESCPREFIX 0x4
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat kd_meta_vals in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data kd_meta_vals_xdata[] = {
 XLAT(K_METABIT),
 #define XLAT_VAL_0 ((unsigned) (K_METABIT))
 #define XLAT_STR_0 STRINGIFY(K_METABIT)
 XLAT(K_ESCPREFIX),
 #define XLAT_VAL_1 ((unsigned) (K_ESCPREFIX))
 #define XLAT_STR_1 STRINGIFY(K_ESCPREFIX)
};
static
const struct xlat kd_meta_vals[1] = { {
 .data = kd_meta_vals_xdata,
 .size = ARRAY_SIZE(kd_meta_vals_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
