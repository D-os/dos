/* Generated by ./src/xlat/gen.sh from ./src/xlat/pr_mce_kill.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(PR_MCE_KILL_CLEAR) || (defined(HAVE_DECL_PR_MCE_KILL_CLEAR) && HAVE_DECL_PR_MCE_KILL_CLEAR)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_MCE_KILL_CLEAR) == (0), "PR_MCE_KILL_CLEAR != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_MCE_KILL_CLEAR 0
#endif
#if defined(PR_MCE_KILL_SET) || (defined(HAVE_DECL_PR_MCE_KILL_SET) && HAVE_DECL_PR_MCE_KILL_SET)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_MCE_KILL_SET) == (1), "PR_MCE_KILL_SET != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_MCE_KILL_SET 1
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat pr_mce_kill in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data pr_mce_kill_xdata[] = {
 [PR_MCE_KILL_CLEAR] = XLAT(PR_MCE_KILL_CLEAR),
 #define XLAT_VAL_0 ((unsigned) (PR_MCE_KILL_CLEAR))
 #define XLAT_STR_0 STRINGIFY(PR_MCE_KILL_CLEAR)
 [PR_MCE_KILL_SET] = XLAT(PR_MCE_KILL_SET),
 #define XLAT_VAL_1 ((unsigned) (PR_MCE_KILL_SET))
 #define XLAT_STR_1 STRINGIFY(PR_MCE_KILL_SET)
};
static
const struct xlat pr_mce_kill[1] = { {
 .data = pr_mce_kill_xdata,
 .size = ARRAY_SIZE(pr_mce_kill_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
