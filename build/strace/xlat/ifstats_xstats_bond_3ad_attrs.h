/* Generated by ./src/xlat/gen.sh from ./src/xlat/ifstats_xstats_bond_3ad_attrs.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BOND_3AD_STAT_LACPDU_RX) == (0), "BOND_3AD_STAT_LACPDU_RX != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BOND_3AD_STAT_LACPDU_TX) == (1), "BOND_3AD_STAT_LACPDU_TX != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BOND_3AD_STAT_LACPDU_UNKNOWN_RX) == (2), "BOND_3AD_STAT_LACPDU_UNKNOWN_RX != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BOND_3AD_STAT_LACPDU_ILLEGAL_RX) == (3), "BOND_3AD_STAT_LACPDU_ILLEGAL_RX != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BOND_3AD_STAT_MARKER_RX) == (4), "BOND_3AD_STAT_MARKER_RX != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BOND_3AD_STAT_MARKER_TX) == (5), "BOND_3AD_STAT_MARKER_TX != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BOND_3AD_STAT_MARKER_RESP_RX) == (6), "BOND_3AD_STAT_MARKER_RESP_RX != 6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BOND_3AD_STAT_MARKER_RESP_TX) == (7), "BOND_3AD_STAT_MARKER_RESP_TX != 7");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BOND_3AD_STAT_MARKER_UNKNOWN_RX) == (8), "BOND_3AD_STAT_MARKER_UNKNOWN_RX != 8");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BOND_3AD_STAT_PAD) == (9), "BOND_3AD_STAT_PAD != 9");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat ifstats_xstats_bond_3ad_attrs in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data ifstats_xstats_bond_3ad_attrs_xdata[] = {
 [BOND_3AD_STAT_LACPDU_RX] = XLAT(BOND_3AD_STAT_LACPDU_RX),
 #define XLAT_VAL_0 ((unsigned) (BOND_3AD_STAT_LACPDU_RX))
 #define XLAT_STR_0 STRINGIFY(BOND_3AD_STAT_LACPDU_RX)
 [BOND_3AD_STAT_LACPDU_TX] = XLAT(BOND_3AD_STAT_LACPDU_TX),
 #define XLAT_VAL_1 ((unsigned) (BOND_3AD_STAT_LACPDU_TX))
 #define XLAT_STR_1 STRINGIFY(BOND_3AD_STAT_LACPDU_TX)
 [BOND_3AD_STAT_LACPDU_UNKNOWN_RX] = XLAT(BOND_3AD_STAT_LACPDU_UNKNOWN_RX),
 #define XLAT_VAL_2 ((unsigned) (BOND_3AD_STAT_LACPDU_UNKNOWN_RX))
 #define XLAT_STR_2 STRINGIFY(BOND_3AD_STAT_LACPDU_UNKNOWN_RX)
 [BOND_3AD_STAT_LACPDU_ILLEGAL_RX] = XLAT(BOND_3AD_STAT_LACPDU_ILLEGAL_RX),
 #define XLAT_VAL_3 ((unsigned) (BOND_3AD_STAT_LACPDU_ILLEGAL_RX))
 #define XLAT_STR_3 STRINGIFY(BOND_3AD_STAT_LACPDU_ILLEGAL_RX)
 [BOND_3AD_STAT_MARKER_RX] = XLAT(BOND_3AD_STAT_MARKER_RX),
 #define XLAT_VAL_4 ((unsigned) (BOND_3AD_STAT_MARKER_RX))
 #define XLAT_STR_4 STRINGIFY(BOND_3AD_STAT_MARKER_RX)
 [BOND_3AD_STAT_MARKER_TX] = XLAT(BOND_3AD_STAT_MARKER_TX),
 #define XLAT_VAL_5 ((unsigned) (BOND_3AD_STAT_MARKER_TX))
 #define XLAT_STR_5 STRINGIFY(BOND_3AD_STAT_MARKER_TX)
 [BOND_3AD_STAT_MARKER_RESP_RX] = XLAT(BOND_3AD_STAT_MARKER_RESP_RX),
 #define XLAT_VAL_6 ((unsigned) (BOND_3AD_STAT_MARKER_RESP_RX))
 #define XLAT_STR_6 STRINGIFY(BOND_3AD_STAT_MARKER_RESP_RX)
 [BOND_3AD_STAT_MARKER_RESP_TX] = XLAT(BOND_3AD_STAT_MARKER_RESP_TX),
 #define XLAT_VAL_7 ((unsigned) (BOND_3AD_STAT_MARKER_RESP_TX))
 #define XLAT_STR_7 STRINGIFY(BOND_3AD_STAT_MARKER_RESP_TX)
 [BOND_3AD_STAT_MARKER_UNKNOWN_RX] = XLAT(BOND_3AD_STAT_MARKER_UNKNOWN_RX),
 #define XLAT_VAL_8 ((unsigned) (BOND_3AD_STAT_MARKER_UNKNOWN_RX))
 #define XLAT_STR_8 STRINGIFY(BOND_3AD_STAT_MARKER_UNKNOWN_RX)
 [BOND_3AD_STAT_PAD] = XLAT(BOND_3AD_STAT_PAD),
 #define XLAT_VAL_9 ((unsigned) (BOND_3AD_STAT_PAD))
 #define XLAT_STR_9 STRINGIFY(BOND_3AD_STAT_PAD)
};
static
const struct xlat ifstats_xstats_bond_3ad_attrs[1] = { {
 .data = ifstats_xstats_bond_3ad_attrs_xdata,
 .size = ARRAY_SIZE(ifstats_xstats_bond_3ad_attrs_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
