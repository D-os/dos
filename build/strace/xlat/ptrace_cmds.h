/* Generated by ./src/xlat/gen.sh from ./src/xlat/ptrace_cmds.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(PTRACE_TRACEME) || (defined(HAVE_DECL_PTRACE_TRACEME) && HAVE_DECL_PTRACE_TRACEME)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_TRACEME) == (0), "PTRACE_TRACEME != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_TRACEME 0
#endif
#if defined(PTRACE_PEEKTEXT) || (defined(HAVE_DECL_PTRACE_PEEKTEXT) && HAVE_DECL_PTRACE_PEEKTEXT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKTEXT) == (0x1), "PTRACE_PEEKTEXT != 0x1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKTEXT 0x1
#endif
#if defined(PTRACE_PEEKDATA) || (defined(HAVE_DECL_PTRACE_PEEKDATA) && HAVE_DECL_PTRACE_PEEKDATA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKDATA) == (0x2), "PTRACE_PEEKDATA != 0x2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKDATA 0x2
#endif
#if defined(PTRACE_PEEKUSER) || (defined(HAVE_DECL_PTRACE_PEEKUSER) && HAVE_DECL_PTRACE_PEEKUSER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKUSER) == (0x3), "PTRACE_PEEKUSER != 0x3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKUSER 0x3
#endif
#if defined(PTRACE_POKETEXT) || (defined(HAVE_DECL_PTRACE_POKETEXT) && HAVE_DECL_PTRACE_POKETEXT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKETEXT) == (0x4), "PTRACE_POKETEXT != 0x4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKETEXT 0x4
#endif
#if defined(PTRACE_POKEDATA) || (defined(HAVE_DECL_PTRACE_POKEDATA) && HAVE_DECL_PTRACE_POKEDATA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEDATA) == (0x5), "PTRACE_POKEDATA != 0x5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEDATA 0x5
#endif
#if defined(PTRACE_POKEUSER) || (defined(HAVE_DECL_PTRACE_POKEUSER) && HAVE_DECL_PTRACE_POKEUSER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEUSER) == (0x6), "PTRACE_POKEUSER != 0x6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEUSER 0x6
#endif
#if defined(PTRACE_CONT) || (defined(HAVE_DECL_PTRACE_CONT) && HAVE_DECL_PTRACE_CONT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_CONT) == (0x7), "PTRACE_CONT != 0x7");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_CONT 0x7
#endif
#if defined(PTRACE_KILL) || (defined(HAVE_DECL_PTRACE_KILL) && HAVE_DECL_PTRACE_KILL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_KILL) == (0x8), "PTRACE_KILL != 0x8");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_KILL 0x8
#endif
#if defined(PTRACE_SINGLESTEP) || (defined(HAVE_DECL_PTRACE_SINGLESTEP) && HAVE_DECL_PTRACE_SINGLESTEP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SINGLESTEP) == (0x9), "PTRACE_SINGLESTEP != 0x9");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SINGLESTEP 0x9
#endif
#if defined(PTRACE_ATTACH) || (defined(HAVE_DECL_PTRACE_ATTACH) && HAVE_DECL_PTRACE_ATTACH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_ATTACH) == (0x10), "PTRACE_ATTACH != 0x10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_ATTACH 0x10
#endif
#if !defined __sparc__
#if defined(PTRACE_DETACH) || (defined(HAVE_DECL_PTRACE_DETACH) && HAVE_DECL_PTRACE_DETACH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_DETACH) == (0x11), "PTRACE_DETACH != 0x11");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_DETACH 0x11
#endif
#else
#endif
#if defined(PTRACE_SYSCALL) || (defined(HAVE_DECL_PTRACE_SYSCALL) && HAVE_DECL_PTRACE_SYSCALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SYSCALL) == (0x18), "PTRACE_SYSCALL != 0x18");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SYSCALL 0x18
#endif
#if defined(PTRACE_SETOPTIONS) || (defined(HAVE_DECL_PTRACE_SETOPTIONS) && HAVE_DECL_PTRACE_SETOPTIONS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETOPTIONS) == (0x4200), "PTRACE_SETOPTIONS != 0x4200");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETOPTIONS 0x4200
#endif
#if defined(PTRACE_GETEVENTMSG) || (defined(HAVE_DECL_PTRACE_GETEVENTMSG) && HAVE_DECL_PTRACE_GETEVENTMSG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETEVENTMSG) == (0x4201), "PTRACE_GETEVENTMSG != 0x4201");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETEVENTMSG 0x4201
#endif
#if defined(PTRACE_GETSIGINFO) || (defined(HAVE_DECL_PTRACE_GETSIGINFO) && HAVE_DECL_PTRACE_GETSIGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETSIGINFO) == (0x4202), "PTRACE_GETSIGINFO != 0x4202");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETSIGINFO 0x4202
#endif
#if defined(PTRACE_SETSIGINFO) || (defined(HAVE_DECL_PTRACE_SETSIGINFO) && HAVE_DECL_PTRACE_SETSIGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETSIGINFO) == (0x4203), "PTRACE_SETSIGINFO != 0x4203");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETSIGINFO 0x4203
#endif
#if defined(PTRACE_GETREGSET) || (defined(HAVE_DECL_PTRACE_GETREGSET) && HAVE_DECL_PTRACE_GETREGSET)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETREGSET) == (0x4204), "PTRACE_GETREGSET != 0x4204");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETREGSET 0x4204
#endif
#if defined(PTRACE_SETREGSET) || (defined(HAVE_DECL_PTRACE_SETREGSET) && HAVE_DECL_PTRACE_SETREGSET)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETREGSET) == (0x4205), "PTRACE_SETREGSET != 0x4205");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETREGSET 0x4205
#endif
#if defined(PTRACE_SEIZE) || (defined(HAVE_DECL_PTRACE_SEIZE) && HAVE_DECL_PTRACE_SEIZE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SEIZE) == (0x4206), "PTRACE_SEIZE != 0x4206");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SEIZE 0x4206
#endif
#if defined(PTRACE_INTERRUPT) || (defined(HAVE_DECL_PTRACE_INTERRUPT) && HAVE_DECL_PTRACE_INTERRUPT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_INTERRUPT) == (0x4207), "PTRACE_INTERRUPT != 0x4207");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_INTERRUPT 0x4207
#endif
#if defined(PTRACE_LISTEN) || (defined(HAVE_DECL_PTRACE_LISTEN) && HAVE_DECL_PTRACE_LISTEN)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_LISTEN) == (0x4208), "PTRACE_LISTEN != 0x4208");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_LISTEN 0x4208
#endif
#if defined(PTRACE_PEEKSIGINFO) || (defined(HAVE_DECL_PTRACE_PEEKSIGINFO) && HAVE_DECL_PTRACE_PEEKSIGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKSIGINFO) == (0x4209), "PTRACE_PEEKSIGINFO != 0x4209");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKSIGINFO 0x4209
#endif
#if defined(PTRACE_GETSIGMASK) || (defined(HAVE_DECL_PTRACE_GETSIGMASK) && HAVE_DECL_PTRACE_GETSIGMASK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETSIGMASK) == (0x420a), "PTRACE_GETSIGMASK != 0x420a");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETSIGMASK 0x420a
#endif
#if defined(PTRACE_SETSIGMASK) || (defined(HAVE_DECL_PTRACE_SETSIGMASK) && HAVE_DECL_PTRACE_SETSIGMASK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETSIGMASK) == (0x420b), "PTRACE_SETSIGMASK != 0x420b");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETSIGMASK 0x420b
#endif
#if defined(PTRACE_SECCOMP_GET_FILTER) || (defined(HAVE_DECL_PTRACE_SECCOMP_GET_FILTER) && HAVE_DECL_PTRACE_SECCOMP_GET_FILTER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SECCOMP_GET_FILTER) == (0x420c), "PTRACE_SECCOMP_GET_FILTER != 0x420c");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SECCOMP_GET_FILTER 0x420c
#endif
#if defined(PTRACE_SECCOMP_GET_METADATA) || (defined(HAVE_DECL_PTRACE_SECCOMP_GET_METADATA) && HAVE_DECL_PTRACE_SECCOMP_GET_METADATA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SECCOMP_GET_METADATA) == (0x420d), "PTRACE_SECCOMP_GET_METADATA != 0x420d");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SECCOMP_GET_METADATA 0x420d
#endif
#if defined(PTRACE_GET_SYSCALL_INFO) || (defined(HAVE_DECL_PTRACE_GET_SYSCALL_INFO) && HAVE_DECL_PTRACE_GET_SYSCALL_INFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_SYSCALL_INFO) == (0x420e), "PTRACE_GET_SYSCALL_INFO != 0x420e");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_SYSCALL_INFO 0x420e
#endif
#if defined(PTRACE_GET_RSEQ_CONFIGURATION) || (defined(HAVE_DECL_PTRACE_GET_RSEQ_CONFIGURATION) && HAVE_DECL_PTRACE_GET_RSEQ_CONFIGURATION)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_RSEQ_CONFIGURATION) == (0x420f), "PTRACE_GET_RSEQ_CONFIGURATION != 0x420f");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_RSEQ_CONFIGURATION 0x420f
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__ || defined __xtensa__
#if defined(PTRACE_GETREGS) || (defined(HAVE_DECL_PTRACE_GETREGS) && HAVE_DECL_PTRACE_GETREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETREGS) == (0xc), "PTRACE_GETREGS != 0xc");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETREGS 0xc
#endif
#elif defined __hppa__ || defined __ia64__
#if defined(PTRACE_GETREGS) || (defined(HAVE_DECL_PTRACE_GETREGS) && HAVE_DECL_PTRACE_GETREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETREGS) == (0x12), "PTRACE_GETREGS != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETREGS 0x12
#endif
#else
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__ || defined __xtensa__
#if defined(PTRACE_SETREGS) || (defined(HAVE_DECL_PTRACE_SETREGS) && HAVE_DECL_PTRACE_SETREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETREGS) == (0xd), "PTRACE_SETREGS != 0xd");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETREGS 0xd
#endif
#elif defined __hppa__ || defined __ia64__
#if defined(PTRACE_SETREGS) || (defined(HAVE_DECL_PTRACE_SETREGS) && HAVE_DECL_PTRACE_SETREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETREGS) == (0x13), "PTRACE_SETREGS != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETREGS 0x13
#endif
#else
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__ || defined __hppa__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_GETFPREGS) || (defined(HAVE_DECL_PTRACE_GETFPREGS) && HAVE_DECL_PTRACE_GETFPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETFPREGS) == (0xe), "PTRACE_GETFPREGS != 0xe");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETFPREGS 0xe
#endif
#else
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__ || defined __hppa__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_SETFPREGS) || (defined(HAVE_DECL_PTRACE_SETFPREGS) && HAVE_DECL_PTRACE_SETFPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETFPREGS) == (0xf), "PTRACE_SETFPREGS != 0xf");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETFPREGS 0xf
#endif
#else
#endif
#if defined __mips__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_GETFPXREGS) || (defined(HAVE_DECL_PTRACE_GETFPXREGS) && HAVE_DECL_PTRACE_GETFPXREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETFPXREGS) == (0x12), "PTRACE_GETFPXREGS != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETFPXREGS 0x12
#endif
#else
#endif
#if defined __mips__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_SETFPXREGS) || (defined(HAVE_DECL_PTRACE_SETFPXREGS) && HAVE_DECL_PTRACE_SETFPXREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETFPXREGS) == (0x13), "PTRACE_SETFPXREGS != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETFPXREGS 0x13
#endif
#else
#endif
#if defined __xtensa__
#if defined(PTRACE_GETHBPREGS) || (defined(HAVE_DECL_PTRACE_GETHBPREGS) && HAVE_DECL_PTRACE_GETHBPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETHBPREGS) == (0x14), "PTRACE_GETHBPREGS != 0x14");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETHBPREGS 0x14
#endif
#elif defined __arm__ || defined __arm64__ || defined __aarch64__
#if defined(PTRACE_GETHBPREGS) || (defined(HAVE_DECL_PTRACE_GETHBPREGS) && HAVE_DECL_PTRACE_GETHBPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETHBPREGS) == (0x1d), "PTRACE_GETHBPREGS != 0x1d");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETHBPREGS 0x1d
#endif
#else
#endif
#if defined __xtensa__
#if defined(PTRACE_SETHBPREGS) || (defined(HAVE_DECL_PTRACE_SETHBPREGS) && HAVE_DECL_PTRACE_SETHBPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETHBPREGS) == (0x15), "PTRACE_SETHBPREGS != 0x15");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETHBPREGS 0x15
#endif
#elif defined __arm__ || defined __arm64__ || defined __aarch64__
#if defined(PTRACE_SETHBPREGS) || (defined(HAVE_DECL_PTRACE_SETHBPREGS) && HAVE_DECL_PTRACE_SETHBPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETHBPREGS) == (0x1e), "PTRACE_SETHBPREGS != 0x1e");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETHBPREGS 0x1e
#endif
#else
#endif
#if defined __arm__ || defined __ia64__ || defined __mips__ || defined __s390__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_OLDSETOPTIONS) || (defined(HAVE_DECL_PTRACE_OLDSETOPTIONS) && HAVE_DECL_PTRACE_OLDSETOPTIONS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_OLDSETOPTIONS) == (0x15), "PTRACE_OLDSETOPTIONS != 0x15");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_OLDSETOPTIONS 0x15
#endif
#else
#endif
#if defined __powerpc__ || defined __sparc__
#if defined(PTRACE_GETREGS64) || (defined(HAVE_DECL_PTRACE_GETREGS64) && HAVE_DECL_PTRACE_GETREGS64)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETREGS64) == (0x16), "PTRACE_GETREGS64 != 0x16");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETREGS64 0x16
#endif
#else
#endif
#if defined __powerpc__ || defined __sparc__
#if defined(PTRACE_SETREGS64) || (defined(HAVE_DECL_PTRACE_SETREGS64) && HAVE_DECL_PTRACE_SETREGS64)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETREGS64) == (0x17), "PTRACE_SETREGS64 != 0x17");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETREGS64 0x17
#endif
#else
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__ || defined __unicore32__
#if defined(PTRACE_GET_THREAD_AREA) || (defined(HAVE_DECL_PTRACE_GET_THREAD_AREA) && HAVE_DECL_PTRACE_GET_THREAD_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_THREAD_AREA) == (0x16), "PTRACE_GET_THREAD_AREA != 0x16");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_THREAD_AREA 0x16
#endif
#elif defined __arc__ || defined __m68k__ || defined __mips__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_GET_THREAD_AREA) || (defined(HAVE_DECL_PTRACE_GET_THREAD_AREA) && HAVE_DECL_PTRACE_GET_THREAD_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_THREAD_AREA) == (0x19), "PTRACE_GET_THREAD_AREA != 0x19");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_THREAD_AREA 0x19
#endif
#else
#endif
#if defined __mips__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_SET_THREAD_AREA) || (defined(HAVE_DECL_PTRACE_SET_THREAD_AREA) && HAVE_DECL_PTRACE_SET_THREAD_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SET_THREAD_AREA) == (0x1a), "PTRACE_SET_THREAD_AREA != 0x1a");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SET_THREAD_AREA 0x1a
#endif
#else
#endif
#if defined __arm__ || defined __c6x__ || defined __sh__
#if defined(PTRACE_GETFDPIC) || (defined(HAVE_DECL_PTRACE_GETFDPIC) && HAVE_DECL_PTRACE_GETFDPIC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETFDPIC) == (0x1f), "PTRACE_GETFDPIC != 0x1f");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETFDPIC 0x1f
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SYSEMU) || (defined(HAVE_DECL_PTRACE_SYSEMU) && HAVE_DECL_PTRACE_SYSEMU)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SYSEMU) == (0x1d), "PTRACE_SYSEMU != 0x1d");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SYSEMU 0x1d
#endif
#elif defined __arm64__ || defined __aarch64__ || defined __x86_64__ || defined __i386__ || defined __s390__
#if defined(PTRACE_SYSEMU) || (defined(HAVE_DECL_PTRACE_SYSEMU) && HAVE_DECL_PTRACE_SYSEMU)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SYSEMU) == (0x1f), "PTRACE_SYSEMU != 0x1f");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SYSEMU 0x1f
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SYSEMU_SINGLESTEP) || (defined(HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP) && HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SYSEMU_SINGLESTEP) == (0x1e), "PTRACE_SYSEMU_SINGLESTEP != 0x1e");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SYSEMU_SINGLESTEP 0x1e
#endif
#elif defined __arm64__ || defined __aarch64__ || defined __x86_64__ || defined __i386__ || defined __s390__
#if defined(PTRACE_SYSEMU_SINGLESTEP) || (defined(HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP) && HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SYSEMU_SINGLESTEP) == (0x20), "PTRACE_SYSEMU_SINGLESTEP != 0x20");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SYSEMU_SINGLESTEP 0x20
#endif
#else
#endif
#if defined __hppa__ || defined __ia64__ || defined __s390__
#if defined(PTRACE_SINGLEBLOCK) || (defined(HAVE_DECL_PTRACE_SINGLEBLOCK) && HAVE_DECL_PTRACE_SINGLEBLOCK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SINGLEBLOCK) == (0xc), "PTRACE_SINGLEBLOCK != 0xc");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SINGLEBLOCK 0xc
#endif
#elif defined __m68k__ || defined __x86_64__ || defined __i386__
#if defined(PTRACE_SINGLEBLOCK) || (defined(HAVE_DECL_PTRACE_SINGLEBLOCK) && HAVE_DECL_PTRACE_SINGLEBLOCK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SINGLEBLOCK) == (0x21), "PTRACE_SINGLEBLOCK != 0x21");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SINGLEBLOCK 0x21
#endif
#elif defined __powerpc__
#if defined(PTRACE_SINGLEBLOCK) || (defined(HAVE_DECL_PTRACE_SINGLEBLOCK) && HAVE_DECL_PTRACE_SINGLEBLOCK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SINGLEBLOCK) == (0x100), "PTRACE_SINGLEBLOCK != 0x100");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SINGLEBLOCK 0x100
#endif
#else
#endif
#if defined __arm64__ || defined __aarch64__
#if defined(PTRACE_PEEKMTETAGS) || (defined(HAVE_DECL_PTRACE_PEEKMTETAGS) && HAVE_DECL_PTRACE_PEEKMTETAGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKMTETAGS) == (0x21), "PTRACE_PEEKMTETAGS != 0x21");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKMTETAGS 0x21
#endif
#else
#endif
#if defined __arm64__ || defined __aarch64__
#if defined(PTRACE_POKEMTETAGS) || (defined(HAVE_DECL_PTRACE_POKEMTETAGS) && HAVE_DECL_PTRACE_POKEMTETAGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEMTETAGS) == (0x22), "PTRACE_POKEMTETAGS != 0x22");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEMTETAGS 0x22
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_GETWMMXREGS) || (defined(HAVE_DECL_PTRACE_GETWMMXREGS) && HAVE_DECL_PTRACE_GETWMMXREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETWMMXREGS) == (0x12), "PTRACE_GETWMMXREGS != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETWMMXREGS 0x12
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_SETWMMXREGS) || (defined(HAVE_DECL_PTRACE_SETWMMXREGS) && HAVE_DECL_PTRACE_SETWMMXREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETWMMXREGS) == (0x13), "PTRACE_SETWMMXREGS != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETWMMXREGS 0x13
#endif
#else
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__
#if defined(PTRACE_SET_SYSCALL) || (defined(HAVE_DECL_PTRACE_SET_SYSCALL) && HAVE_DECL_PTRACE_SET_SYSCALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SET_SYSCALL) == (0x17), "PTRACE_SET_SYSCALL != 0x17");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SET_SYSCALL 0x17
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_GETCRUNCHREGS) || (defined(HAVE_DECL_PTRACE_GETCRUNCHREGS) && HAVE_DECL_PTRACE_GETCRUNCHREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETCRUNCHREGS) == (0x19), "PTRACE_GETCRUNCHREGS != 0x19");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETCRUNCHREGS 0x19
#endif
#else
#endif
#if defined __arm__
#if defined(PTRACE_SETCRUNCHREGS) || (defined(HAVE_DECL_PTRACE_SETCRUNCHREGS) && HAVE_DECL_PTRACE_SETCRUNCHREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETCRUNCHREGS) == (0x1a), "PTRACE_SETCRUNCHREGS != 0x1a");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETCRUNCHREGS 0x1a
#endif
#else
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__
#if defined(PTRACE_GETVFPREGS) || (defined(HAVE_DECL_PTRACE_GETVFPREGS) && HAVE_DECL_PTRACE_GETVFPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETVFPREGS) == (0x1b), "PTRACE_GETVFPREGS != 0x1b");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETVFPREGS 0x1b
#endif
#else
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__
#if defined(PTRACE_SETVFPREGS) || (defined(HAVE_DECL_PTRACE_SETVFPREGS) && HAVE_DECL_PTRACE_SETVFPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETVFPREGS) == (0x1c), "PTRACE_SETVFPREGS != 0x1c");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETVFPREGS 0x1c
#endif
#else
#endif
#if defined __ia64__
#if defined(PTRACE_OLD_GETSIGINFO) || (defined(HAVE_DECL_PTRACE_OLD_GETSIGINFO) && HAVE_DECL_PTRACE_OLD_GETSIGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_OLD_GETSIGINFO) == (0xd), "PTRACE_OLD_GETSIGINFO != 0xd");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_OLD_GETSIGINFO 0xd
#endif
#else
#endif
#if defined __ia64__
#if defined(PTRACE_OLD_SETSIGINFO) || (defined(HAVE_DECL_PTRACE_OLD_SETSIGINFO) && HAVE_DECL_PTRACE_OLD_SETSIGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_OLD_SETSIGINFO) == (0xe), "PTRACE_OLD_SETSIGINFO != 0xe");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_OLD_SETSIGINFO 0xe
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_PEEKTEXT_3264) || (defined(HAVE_DECL_PTRACE_PEEKTEXT_3264) && HAVE_DECL_PTRACE_PEEKTEXT_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKTEXT_3264) == (0xc0), "PTRACE_PEEKTEXT_3264 != 0xc0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKTEXT_3264 0xc0
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_PEEKDATA_3264) || (defined(HAVE_DECL_PTRACE_PEEKDATA_3264) && HAVE_DECL_PTRACE_PEEKDATA_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKDATA_3264) == (0xc1), "PTRACE_PEEKDATA_3264 != 0xc1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKDATA_3264 0xc1
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_POKETEXT_3264) || (defined(HAVE_DECL_PTRACE_POKETEXT_3264) && HAVE_DECL_PTRACE_POKETEXT_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKETEXT_3264) == (0xc2), "PTRACE_POKETEXT_3264 != 0xc2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKETEXT_3264 0xc2
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_POKEDATA_3264) || (defined(HAVE_DECL_PTRACE_POKEDATA_3264) && HAVE_DECL_PTRACE_POKEDATA_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEDATA_3264) == (0xc3), "PTRACE_POKEDATA_3264 != 0xc3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEDATA_3264 0xc3
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_GET_THREAD_AREA_3264) || (defined(HAVE_DECL_PTRACE_GET_THREAD_AREA_3264) && HAVE_DECL_PTRACE_GET_THREAD_AREA_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_THREAD_AREA_3264) == (0xc4), "PTRACE_GET_THREAD_AREA_3264 != 0xc4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_THREAD_AREA_3264 0xc4
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_GET_WATCH_REGS) || (defined(HAVE_DECL_PTRACE_GET_WATCH_REGS) && HAVE_DECL_PTRACE_GET_WATCH_REGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_WATCH_REGS) == (0xd0), "PTRACE_GET_WATCH_REGS != 0xd0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_WATCH_REGS 0xd0
#endif
#else
#endif
#if defined __mips__
#if defined(PTRACE_SET_WATCH_REGS) || (defined(HAVE_DECL_PTRACE_SET_WATCH_REGS) && HAVE_DECL_PTRACE_SET_WATCH_REGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SET_WATCH_REGS) == (0xd1), "PTRACE_SET_WATCH_REGS != 0xd1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SET_WATCH_REGS 0xd1
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_GETVRREGS) || (defined(HAVE_DECL_PTRACE_GETVRREGS) && HAVE_DECL_PTRACE_GETVRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETVRREGS) == (0x12), "PTRACE_GETVRREGS != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETVRREGS 0x12
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SETVRREGS) || (defined(HAVE_DECL_PTRACE_SETVRREGS) && HAVE_DECL_PTRACE_SETVRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETVRREGS) == (0x13), "PTRACE_SETVRREGS != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETVRREGS 0x13
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_GETEVRREGS) || (defined(HAVE_DECL_PTRACE_GETEVRREGS) && HAVE_DECL_PTRACE_GETEVRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETEVRREGS) == (0x14), "PTRACE_GETEVRREGS != 0x14");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETEVRREGS 0x14
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SETEVRREGS) || (defined(HAVE_DECL_PTRACE_SETEVRREGS) && HAVE_DECL_PTRACE_SETEVRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETEVRREGS) == (0x15), "PTRACE_SETEVRREGS != 0x15");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETEVRREGS 0x15
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_GETVSRREGS) || (defined(HAVE_DECL_PTRACE_GETVSRREGS) && HAVE_DECL_PTRACE_GETVSRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETVSRREGS) == (0x1b), "PTRACE_GETVSRREGS != 0x1b");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETVSRREGS 0x1b
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SETVSRREGS) || (defined(HAVE_DECL_PTRACE_SETVSRREGS) && HAVE_DECL_PTRACE_SETVSRREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETVSRREGS) == (0x1c), "PTRACE_SETVSRREGS != 0x1c");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETVSRREGS 0x1c
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_GET_DEBUGREG) || (defined(HAVE_DECL_PTRACE_GET_DEBUGREG) && HAVE_DECL_PTRACE_GET_DEBUGREG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_DEBUGREG) == (0x19), "PTRACE_GET_DEBUGREG != 0x19");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_DEBUGREG 0x19
#endif
#else
#endif
#if defined __powerpc__
#if defined(PTRACE_SET_DEBUGREG) || (defined(HAVE_DECL_PTRACE_SET_DEBUGREG) && HAVE_DECL_PTRACE_SET_DEBUGREG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SET_DEBUGREG) == (0x1a), "PTRACE_SET_DEBUGREG != 0x1a");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SET_DEBUGREG 0x1a
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_DELHWDEBUG) || (defined(HAVE_DECL_PPC_PTRACE_DELHWDEBUG) && HAVE_DECL_PPC_PTRACE_DELHWDEBUG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_DELHWDEBUG) == (0x87), "PPC_PTRACE_DELHWDEBUG != 0x87");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_DELHWDEBUG 0x87
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_SETHWDEBUG) || (defined(HAVE_DECL_PPC_PTRACE_SETHWDEBUG) && HAVE_DECL_PPC_PTRACE_SETHWDEBUG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_SETHWDEBUG) == (0x88), "PPC_PTRACE_SETHWDEBUG != 0x88");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_SETHWDEBUG 0x88
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_GETHWDBGINFO) || (defined(HAVE_DECL_PPC_PTRACE_GETHWDBGINFO) && HAVE_DECL_PPC_PTRACE_GETHWDBGINFO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_GETHWDBGINFO) == (0x89), "PPC_PTRACE_GETHWDBGINFO != 0x89");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_GETHWDBGINFO 0x89
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_POKEUSR_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKEUSR_3264) && HAVE_DECL_PPC_PTRACE_POKEUSR_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_POKEUSR_3264) == (0x90), "PPC_PTRACE_POKEUSR_3264 != 0x90");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_POKEUSR_3264 0x90
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_PEEKUSR_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKUSR_3264) && HAVE_DECL_PPC_PTRACE_PEEKUSR_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_PEEKUSR_3264) == (0x91), "PPC_PTRACE_PEEKUSR_3264 != 0x91");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_PEEKUSR_3264 0x91
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_POKEDATA_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKEDATA_3264) && HAVE_DECL_PPC_PTRACE_POKEDATA_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_POKEDATA_3264) == (0x92), "PPC_PTRACE_POKEDATA_3264 != 0x92");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_POKEDATA_3264 0x92
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_POKETEXT_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKETEXT_3264) && HAVE_DECL_PPC_PTRACE_POKETEXT_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_POKETEXT_3264) == (0x93), "PPC_PTRACE_POKETEXT_3264 != 0x93");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_POKETEXT_3264 0x93
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_PEEKDATA_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKDATA_3264) && HAVE_DECL_PPC_PTRACE_PEEKDATA_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_PEEKDATA_3264) == (0x94), "PPC_PTRACE_PEEKDATA_3264 != 0x94");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_PEEKDATA_3264 0x94
#endif
#else
#endif
#if defined __powerpc__
#if defined(PPC_PTRACE_PEEKTEXT_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKTEXT_3264) && HAVE_DECL_PPC_PTRACE_PEEKTEXT_3264)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PPC_PTRACE_PEEKTEXT_3264) == (0x95), "PPC_PTRACE_PEEKTEXT_3264 != 0x95");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PPC_PTRACE_PEEKTEXT_3264 0x95
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_PEEKUSR_AREA) || (defined(HAVE_DECL_PTRACE_PEEKUSR_AREA) && HAVE_DECL_PTRACE_PEEKUSR_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKUSR_AREA) == (0x5000), "PTRACE_PEEKUSR_AREA != 0x5000");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKUSR_AREA 0x5000
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_POKEUSR_AREA) || (defined(HAVE_DECL_PTRACE_POKEUSR_AREA) && HAVE_DECL_PTRACE_POKEUSR_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEUSR_AREA) == (0x5001), "PTRACE_POKEUSR_AREA != 0x5001");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEUSR_AREA 0x5001
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_PEEKTEXT_AREA) || (defined(HAVE_DECL_PTRACE_PEEKTEXT_AREA) && HAVE_DECL_PTRACE_PEEKTEXT_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKTEXT_AREA) == (0x5002), "PTRACE_PEEKTEXT_AREA != 0x5002");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKTEXT_AREA 0x5002
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_PEEKDATA_AREA) || (defined(HAVE_DECL_PTRACE_PEEKDATA_AREA) && HAVE_DECL_PTRACE_PEEKDATA_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEKDATA_AREA) == (0x5003), "PTRACE_PEEKDATA_AREA != 0x5003");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEKDATA_AREA 0x5003
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_POKETEXT_AREA) || (defined(HAVE_DECL_PTRACE_POKETEXT_AREA) && HAVE_DECL_PTRACE_POKETEXT_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKETEXT_AREA) == (0x5004), "PTRACE_POKETEXT_AREA != 0x5004");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKETEXT_AREA 0x5004
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_POKEDATA_AREA) || (defined(HAVE_DECL_PTRACE_POKEDATA_AREA) && HAVE_DECL_PTRACE_POKEDATA_AREA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKEDATA_AREA) == (0x5005), "PTRACE_POKEDATA_AREA != 0x5005");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKEDATA_AREA 0x5005
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_GET_LAST_BREAK) || (defined(HAVE_DECL_PTRACE_GET_LAST_BREAK) && HAVE_DECL_PTRACE_GET_LAST_BREAK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GET_LAST_BREAK) == (0x5006), "PTRACE_GET_LAST_BREAK != 0x5006");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GET_LAST_BREAK 0x5006
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_PEEK_SYSTEM_CALL) || (defined(HAVE_DECL_PTRACE_PEEK_SYSTEM_CALL) && HAVE_DECL_PTRACE_PEEK_SYSTEM_CALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_PEEK_SYSTEM_CALL) == (0x5007), "PTRACE_PEEK_SYSTEM_CALL != 0x5007");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_PEEK_SYSTEM_CALL 0x5007
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_POKE_SYSTEM_CALL) || (defined(HAVE_DECL_PTRACE_POKE_SYSTEM_CALL) && HAVE_DECL_PTRACE_POKE_SYSTEM_CALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_POKE_SYSTEM_CALL) == (0x5008), "PTRACE_POKE_SYSTEM_CALL != 0x5008");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_POKE_SYSTEM_CALL 0x5008
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_ENABLE_TE) || (defined(HAVE_DECL_PTRACE_ENABLE_TE) && HAVE_DECL_PTRACE_ENABLE_TE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_ENABLE_TE) == (0x5009), "PTRACE_ENABLE_TE != 0x5009");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_ENABLE_TE 0x5009
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_DISABLE_TE) || (defined(HAVE_DECL_PTRACE_DISABLE_TE) && HAVE_DECL_PTRACE_DISABLE_TE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_DISABLE_TE) == (0x5010), "PTRACE_DISABLE_TE != 0x5010");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_DISABLE_TE 0x5010
#endif
#else
#endif
#if defined __s390__
#if defined(PTRACE_TE_ABORT_RAND) || (defined(HAVE_DECL_PTRACE_TE_ABORT_RAND) && HAVE_DECL_PTRACE_TE_ABORT_RAND)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_TE_ABORT_RAND) == (0x5011), "PTRACE_TE_ABORT_RAND != 0x5011");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_TE_ABORT_RAND 0x5011
#endif
#else
#endif
#if defined __sh__
#if defined(PTRACE_GETDSPREGS) || (defined(HAVE_DECL_PTRACE_GETDSPREGS) && HAVE_DECL_PTRACE_GETDSPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETDSPREGS) == (0x37), "PTRACE_GETDSPREGS != 0x37");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETDSPREGS 0x37
#endif
#else
#endif
#if defined __sh__
#if defined(PTRACE_SETDSPREGS) || (defined(HAVE_DECL_PTRACE_SETDSPREGS) && HAVE_DECL_PTRACE_SETDSPREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETDSPREGS) == (0x38), "PTRACE_SETDSPREGS != 0x38");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETDSPREGS 0x38
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_SPARC_DETACH) || (defined(HAVE_DECL_PTRACE_SPARC_DETACH) && HAVE_DECL_PTRACE_SPARC_DETACH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SPARC_DETACH) == (0xb), "PTRACE_SPARC_DETACH != 0xb");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SPARC_DETACH 0xb
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_READDATA) || (defined(HAVE_DECL_PTRACE_READDATA) && HAVE_DECL_PTRACE_READDATA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_READDATA) == (0x10), "PTRACE_READDATA != 0x10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_READDATA 0x10
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_WRITEDATA) || (defined(HAVE_DECL_PTRACE_WRITEDATA) && HAVE_DECL_PTRACE_WRITEDATA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_WRITEDATA) == (0x11), "PTRACE_WRITEDATA != 0x11");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_WRITEDATA 0x11
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_READTEXT) || (defined(HAVE_DECL_PTRACE_READTEXT) && HAVE_DECL_PTRACE_READTEXT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_READTEXT) == (0x12), "PTRACE_READTEXT != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_READTEXT 0x12
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_WRITETEXT) || (defined(HAVE_DECL_PTRACE_WRITETEXT) && HAVE_DECL_PTRACE_WRITETEXT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_WRITETEXT) == (0x13), "PTRACE_WRITETEXT != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_WRITETEXT 0x13
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_GETFPAREGS) || (defined(HAVE_DECL_PTRACE_GETFPAREGS) && HAVE_DECL_PTRACE_GETFPAREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETFPAREGS) == (0x14), "PTRACE_GETFPAREGS != 0x14");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETFPAREGS 0x14
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_SETFPAREGS) || (defined(HAVE_DECL_PTRACE_SETFPAREGS) && HAVE_DECL_PTRACE_SETFPAREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETFPAREGS) == (0x15), "PTRACE_SETFPAREGS != 0x15");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETFPAREGS 0x15
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_GETFPREGS64) || (defined(HAVE_DECL_PTRACE_GETFPREGS64) && HAVE_DECL_PTRACE_GETFPREGS64)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETFPREGS64) == (0x19), "PTRACE_GETFPREGS64 != 0x19");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETFPREGS64 0x19
#endif
#else
#endif
#if defined __sparc__
#if defined(PTRACE_SETFPREGS64) || (defined(HAVE_DECL_PTRACE_SETFPREGS64) && HAVE_DECL_PTRACE_SETFPREGS64)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETFPREGS64) == (0x1a), "PTRACE_SETFPREGS64 != 0x1a");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETFPREGS64 0x1a
#endif
#else
#endif
#if defined __x86_64__ || defined __i386__
#if defined(PTRACE_ARCH_PRCTL) || (defined(HAVE_DECL_PTRACE_ARCH_PRCTL) && HAVE_DECL_PTRACE_ARCH_PRCTL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_ARCH_PRCTL) == (0x1e), "PTRACE_ARCH_PRCTL != 0x1e");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_ARCH_PRCTL 0x1e
#endif
#else
#endif
#if defined __xtensa__
#if defined(PTRACE_GETXTREGS) || (defined(HAVE_DECL_PTRACE_GETXTREGS) && HAVE_DECL_PTRACE_GETXTREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_GETXTREGS) == (0x12), "PTRACE_GETXTREGS != 0x12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_GETXTREGS 0x12
#endif
#else
#endif
#if defined __xtensa__
#if defined(PTRACE_SETXTREGS) || (defined(HAVE_DECL_PTRACE_SETXTREGS) && HAVE_DECL_PTRACE_SETXTREGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PTRACE_SETXTREGS) == (0x13), "PTRACE_SETXTREGS != 0x13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PTRACE_SETXTREGS 0x13
#endif
#else
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifndef IN_MPERS

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data ptrace_cmds_xdata[] = {

 XLAT(PTRACE_TRACEME),
 #define XLAT_VAL_0 ((unsigned) (PTRACE_TRACEME))
 #define XLAT_STR_0 STRINGIFY(PTRACE_TRACEME)
 XLAT(PTRACE_PEEKTEXT),
 #define XLAT_VAL_1 ((unsigned) (PTRACE_PEEKTEXT))
 #define XLAT_STR_1 STRINGIFY(PTRACE_PEEKTEXT)
 XLAT(PTRACE_PEEKDATA),
 #define XLAT_VAL_2 ((unsigned) (PTRACE_PEEKDATA))
 #define XLAT_STR_2 STRINGIFY(PTRACE_PEEKDATA)
 XLAT(PTRACE_PEEKUSER),
 #define XLAT_VAL_3 ((unsigned) (PTRACE_PEEKUSER))
 #define XLAT_STR_3 STRINGIFY(PTRACE_PEEKUSER)
 XLAT(PTRACE_POKETEXT),
 #define XLAT_VAL_4 ((unsigned) (PTRACE_POKETEXT))
 #define XLAT_STR_4 STRINGIFY(PTRACE_POKETEXT)
 XLAT(PTRACE_POKEDATA),
 #define XLAT_VAL_5 ((unsigned) (PTRACE_POKEDATA))
 #define XLAT_STR_5 STRINGIFY(PTRACE_POKEDATA)
 XLAT(PTRACE_POKEUSER),
 #define XLAT_VAL_6 ((unsigned) (PTRACE_POKEUSER))
 #define XLAT_STR_6 STRINGIFY(PTRACE_POKEUSER)
 XLAT(PTRACE_CONT),
 #define XLAT_VAL_7 ((unsigned) (PTRACE_CONT))
 #define XLAT_STR_7 STRINGIFY(PTRACE_CONT)
 XLAT(PTRACE_KILL),
 #define XLAT_VAL_8 ((unsigned) (PTRACE_KILL))
 #define XLAT_STR_8 STRINGIFY(PTRACE_KILL)
 XLAT(PTRACE_SINGLESTEP),
 #define XLAT_VAL_9 ((unsigned) (PTRACE_SINGLESTEP))
 #define XLAT_STR_9 STRINGIFY(PTRACE_SINGLESTEP)
 XLAT(PTRACE_ATTACH),
 #define XLAT_VAL_10 ((unsigned) (PTRACE_ATTACH))
 #define XLAT_STR_10 STRINGIFY(PTRACE_ATTACH)

/*
* On sparc, there is PTRACE_SPARC_DETACH (= 11) that is used instead
* of PTRACE_DETACH, as PTRACE_DETACH's number (0x11) is occupied
* by PTRACE_WRITEDATA.
*/
#if !defined __sparc__
 XLAT(PTRACE_DETACH),
 #define XLAT_VAL_11 ((unsigned) (PTRACE_DETACH))
 #define XLAT_STR_11 STRINGIFY(PTRACE_DETACH)
#else
#if defined(PTRACE_DETACH) || (defined(HAVE_DECL_PTRACE_DETACH) && HAVE_DECL_PTRACE_DETACH)
  XLAT(PTRACE_DETACH),
 #define XLAT_VAL_12 ((unsigned) (PTRACE_DETACH))
 #define XLAT_STR_12 STRINGIFY(PTRACE_DETACH)
#endif
#endif

 XLAT(PTRACE_SYSCALL),
 #define XLAT_VAL_13 ((unsigned) (PTRACE_SYSCALL))
 #define XLAT_STR_13 STRINGIFY(PTRACE_SYSCALL)

 XLAT(PTRACE_SETOPTIONS),
 #define XLAT_VAL_14 ((unsigned) (PTRACE_SETOPTIONS))
 #define XLAT_STR_14 STRINGIFY(PTRACE_SETOPTIONS)
 XLAT(PTRACE_GETEVENTMSG),
 #define XLAT_VAL_15 ((unsigned) (PTRACE_GETEVENTMSG))
 #define XLAT_STR_15 STRINGIFY(PTRACE_GETEVENTMSG)
 XLAT(PTRACE_GETSIGINFO),
 #define XLAT_VAL_16 ((unsigned) (PTRACE_GETSIGINFO))
 #define XLAT_STR_16 STRINGIFY(PTRACE_GETSIGINFO)
 XLAT(PTRACE_SETSIGINFO),
 #define XLAT_VAL_17 ((unsigned) (PTRACE_SETSIGINFO))
 #define XLAT_STR_17 STRINGIFY(PTRACE_SETSIGINFO)
 XLAT(PTRACE_GETREGSET),
 #define XLAT_VAL_18 ((unsigned) (PTRACE_GETREGSET))
 #define XLAT_STR_18 STRINGIFY(PTRACE_GETREGSET)
 XLAT(PTRACE_SETREGSET),
 #define XLAT_VAL_19 ((unsigned) (PTRACE_SETREGSET))
 #define XLAT_STR_19 STRINGIFY(PTRACE_SETREGSET)
 XLAT(PTRACE_SEIZE),
 #define XLAT_VAL_20 ((unsigned) (PTRACE_SEIZE))
 #define XLAT_STR_20 STRINGIFY(PTRACE_SEIZE)
 XLAT(PTRACE_INTERRUPT),
 #define XLAT_VAL_21 ((unsigned) (PTRACE_INTERRUPT))
 #define XLAT_STR_21 STRINGIFY(PTRACE_INTERRUPT)
 XLAT(PTRACE_LISTEN),
 #define XLAT_VAL_22 ((unsigned) (PTRACE_LISTEN))
 #define XLAT_STR_22 STRINGIFY(PTRACE_LISTEN)
 XLAT(PTRACE_PEEKSIGINFO),
 #define XLAT_VAL_23 ((unsigned) (PTRACE_PEEKSIGINFO))
 #define XLAT_STR_23 STRINGIFY(PTRACE_PEEKSIGINFO)
 XLAT(PTRACE_GETSIGMASK),
 #define XLAT_VAL_24 ((unsigned) (PTRACE_GETSIGMASK))
 #define XLAT_STR_24 STRINGIFY(PTRACE_GETSIGMASK)
 XLAT(PTRACE_SETSIGMASK),
 #define XLAT_VAL_25 ((unsigned) (PTRACE_SETSIGMASK))
 #define XLAT_STR_25 STRINGIFY(PTRACE_SETSIGMASK)
 XLAT(PTRACE_SECCOMP_GET_FILTER),
 #define XLAT_VAL_26 ((unsigned) (PTRACE_SECCOMP_GET_FILTER))
 #define XLAT_STR_26 STRINGIFY(PTRACE_SECCOMP_GET_FILTER)
 XLAT(PTRACE_SECCOMP_GET_METADATA),
 #define XLAT_VAL_27 ((unsigned) (PTRACE_SECCOMP_GET_METADATA))
 #define XLAT_STR_27 STRINGIFY(PTRACE_SECCOMP_GET_METADATA)
 XLAT(PTRACE_GET_SYSCALL_INFO),
 #define XLAT_VAL_28 ((unsigned) (PTRACE_GET_SYSCALL_INFO))
 #define XLAT_STR_28 STRINGIFY(PTRACE_GET_SYSCALL_INFO)
 XLAT(PTRACE_GET_RSEQ_CONFIGURATION),
 #define XLAT_VAL_29 ((unsigned) (PTRACE_GET_RSEQ_CONFIGURATION))
 #define XLAT_STR_29 STRINGIFY(PTRACE_GET_RSEQ_CONFIGURATION)


#if defined __arm__ || defined __arm64__ || defined __aarch64__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__ || defined __xtensa__
 XLAT(PTRACE_GETREGS),
 #define XLAT_VAL_30 ((unsigned) (PTRACE_GETREGS))
 #define XLAT_STR_30 STRINGIFY(PTRACE_GETREGS)
#elif defined __hppa__ || defined __ia64__
 XLAT(PTRACE_GETREGS),
 #define XLAT_VAL_31 ((unsigned) (PTRACE_GETREGS))
 #define XLAT_STR_31 STRINGIFY(PTRACE_GETREGS)
#else
#if defined(PTRACE_GETREGS) || (defined(HAVE_DECL_PTRACE_GETREGS) && HAVE_DECL_PTRACE_GETREGS)
  XLAT(PTRACE_GETREGS),
 #define XLAT_VAL_32 ((unsigned) (PTRACE_GETREGS))
 #define XLAT_STR_32 STRINGIFY(PTRACE_GETREGS)
#endif
#endif

#if defined __arm__ || defined __arm64__ || defined __aarch64__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__ || defined __xtensa__
 XLAT(PTRACE_SETREGS),
 #define XLAT_VAL_33 ((unsigned) (PTRACE_SETREGS))
 #define XLAT_STR_33 STRINGIFY(PTRACE_SETREGS)
#elif defined __hppa__ || defined __ia64__
 XLAT(PTRACE_SETREGS),
 #define XLAT_VAL_34 ((unsigned) (PTRACE_SETREGS))
 #define XLAT_STR_34 STRINGIFY(PTRACE_SETREGS)
#else
#if defined(PTRACE_SETREGS) || (defined(HAVE_DECL_PTRACE_SETREGS) && HAVE_DECL_PTRACE_SETREGS)
  XLAT(PTRACE_SETREGS),
 #define XLAT_VAL_35 ((unsigned) (PTRACE_SETREGS))
 #define XLAT_STR_35 STRINGIFY(PTRACE_SETREGS)
#endif
#endif

#if defined __arm__ || defined __arm64__ || defined __aarch64__ || defined __hppa__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_GETFPREGS),
 #define XLAT_VAL_36 ((unsigned) (PTRACE_GETFPREGS))
 #define XLAT_STR_36 STRINGIFY(PTRACE_GETFPREGS)
#else
#if defined(PTRACE_GETFPREGS) || (defined(HAVE_DECL_PTRACE_GETFPREGS) && HAVE_DECL_PTRACE_GETFPREGS)
  XLAT(PTRACE_GETFPREGS),
 #define XLAT_VAL_37 ((unsigned) (PTRACE_GETFPREGS))
 #define XLAT_STR_37 STRINGIFY(PTRACE_GETFPREGS)
#endif
#endif

#if defined __arm__ || defined __arm64__ || defined __aarch64__ || defined __hppa__ || defined __m68k__ || defined __mips__ || defined __powerpc__ || defined __sh__ || defined __sparc__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_SETFPREGS),
 #define XLAT_VAL_38 ((unsigned) (PTRACE_SETFPREGS))
 #define XLAT_STR_38 STRINGIFY(PTRACE_SETFPREGS)
#else
#if defined(PTRACE_SETFPREGS) || (defined(HAVE_DECL_PTRACE_SETFPREGS) && HAVE_DECL_PTRACE_SETFPREGS)
  XLAT(PTRACE_SETFPREGS),
 #define XLAT_VAL_39 ((unsigned) (PTRACE_SETFPREGS))
 #define XLAT_STR_39 STRINGIFY(PTRACE_SETFPREGS)
#endif
#endif

#if defined __mips__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_GETFPXREGS),
 #define XLAT_VAL_40 ((unsigned) (PTRACE_GETFPXREGS))
 #define XLAT_STR_40 STRINGIFY(PTRACE_GETFPXREGS)
#else
#if defined(PTRACE_GETFPXREGS) || (defined(HAVE_DECL_PTRACE_GETFPXREGS) && HAVE_DECL_PTRACE_GETFPXREGS)
  XLAT(PTRACE_GETFPXREGS),
 #define XLAT_VAL_41 ((unsigned) (PTRACE_GETFPXREGS))
 #define XLAT_STR_41 STRINGIFY(PTRACE_GETFPXREGS)
#endif
#endif

#if defined __mips__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_SETFPXREGS),
 #define XLAT_VAL_42 ((unsigned) (PTRACE_SETFPXREGS))
 #define XLAT_STR_42 STRINGIFY(PTRACE_SETFPXREGS)
#else
#if defined(PTRACE_SETFPXREGS) || (defined(HAVE_DECL_PTRACE_SETFPXREGS) && HAVE_DECL_PTRACE_SETFPXREGS)
  XLAT(PTRACE_SETFPXREGS),
 #define XLAT_VAL_43 ((unsigned) (PTRACE_SETFPXREGS))
 #define XLAT_STR_43 STRINGIFY(PTRACE_SETFPXREGS)
#endif
#endif

#if defined __xtensa__
 XLAT(PTRACE_GETHBPREGS),
 #define XLAT_VAL_44 ((unsigned) (PTRACE_GETHBPREGS))
 #define XLAT_STR_44 STRINGIFY(PTRACE_GETHBPREGS)
#elif defined __arm__ || defined __arm64__ || defined __aarch64__
 XLAT(PTRACE_GETHBPREGS),
 #define XLAT_VAL_45 ((unsigned) (PTRACE_GETHBPREGS))
 #define XLAT_STR_45 STRINGIFY(PTRACE_GETHBPREGS)
#else
#if defined(PTRACE_GETHBPREGS) || (defined(HAVE_DECL_PTRACE_GETHBPREGS) && HAVE_DECL_PTRACE_GETHBPREGS)
  XLAT(PTRACE_GETHBPREGS),
 #define XLAT_VAL_46 ((unsigned) (PTRACE_GETHBPREGS))
 #define XLAT_STR_46 STRINGIFY(PTRACE_GETHBPREGS)
#endif
#endif

#if defined __xtensa__
 XLAT(PTRACE_SETHBPREGS),
 #define XLAT_VAL_47 ((unsigned) (PTRACE_SETHBPREGS))
 #define XLAT_STR_47 STRINGIFY(PTRACE_SETHBPREGS)
#elif defined __arm__ || defined __arm64__ || defined __aarch64__
 XLAT(PTRACE_SETHBPREGS),
 #define XLAT_VAL_48 ((unsigned) (PTRACE_SETHBPREGS))
 #define XLAT_STR_48 STRINGIFY(PTRACE_SETHBPREGS)
#else
#if defined(PTRACE_SETHBPREGS) || (defined(HAVE_DECL_PTRACE_SETHBPREGS) && HAVE_DECL_PTRACE_SETHBPREGS)
  XLAT(PTRACE_SETHBPREGS),
 #define XLAT_VAL_49 ((unsigned) (PTRACE_SETHBPREGS))
 #define XLAT_STR_49 STRINGIFY(PTRACE_SETHBPREGS)
#endif
#endif

#if defined __arm__ || defined __ia64__ || defined __mips__ || defined __s390__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_OLDSETOPTIONS),
 #define XLAT_VAL_50 ((unsigned) (PTRACE_OLDSETOPTIONS))
 #define XLAT_STR_50 STRINGIFY(PTRACE_OLDSETOPTIONS)
#else
#if defined(PTRACE_OLDSETOPTIONS) || (defined(HAVE_DECL_PTRACE_OLDSETOPTIONS) && HAVE_DECL_PTRACE_OLDSETOPTIONS)
  XLAT(PTRACE_OLDSETOPTIONS),
 #define XLAT_VAL_51 ((unsigned) (PTRACE_OLDSETOPTIONS))
 #define XLAT_STR_51 STRINGIFY(PTRACE_OLDSETOPTIONS)
#endif
#endif

#if defined __powerpc__ || defined __sparc__
 XLAT(PTRACE_GETREGS64),
 #define XLAT_VAL_52 ((unsigned) (PTRACE_GETREGS64))
 #define XLAT_STR_52 STRINGIFY(PTRACE_GETREGS64)
#else
#if defined(PTRACE_GETREGS64) || (defined(HAVE_DECL_PTRACE_GETREGS64) && HAVE_DECL_PTRACE_GETREGS64)
  XLAT(PTRACE_GETREGS64),
 #define XLAT_VAL_53 ((unsigned) (PTRACE_GETREGS64))
 #define XLAT_STR_53 STRINGIFY(PTRACE_GETREGS64)
#endif
#endif
#if defined __powerpc__ || defined __sparc__
 XLAT(PTRACE_SETREGS64),
 #define XLAT_VAL_54 ((unsigned) (PTRACE_SETREGS64))
 #define XLAT_STR_54 STRINGIFY(PTRACE_SETREGS64)
#else
#if defined(PTRACE_SETREGS64) || (defined(HAVE_DECL_PTRACE_SETREGS64) && HAVE_DECL_PTRACE_SETREGS64)
  XLAT(PTRACE_SETREGS64),
 #define XLAT_VAL_55 ((unsigned) (PTRACE_SETREGS64))
 #define XLAT_STR_55 STRINGIFY(PTRACE_SETREGS64)
#endif
#endif

#if defined __arm__ || defined __arm64__ || defined __aarch64__ || defined __unicore32__
 XLAT(PTRACE_GET_THREAD_AREA),
 #define XLAT_VAL_56 ((unsigned) (PTRACE_GET_THREAD_AREA))
 #define XLAT_STR_56 STRINGIFY(PTRACE_GET_THREAD_AREA)
#elif defined __arc__ || defined __m68k__ || defined __mips__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_GET_THREAD_AREA),
 #define XLAT_VAL_57 ((unsigned) (PTRACE_GET_THREAD_AREA))
 #define XLAT_STR_57 STRINGIFY(PTRACE_GET_THREAD_AREA)
#else
#if defined(PTRACE_GET_THREAD_AREA) || (defined(HAVE_DECL_PTRACE_GET_THREAD_AREA) && HAVE_DECL_PTRACE_GET_THREAD_AREA)
  XLAT(PTRACE_GET_THREAD_AREA),
 #define XLAT_VAL_58 ((unsigned) (PTRACE_GET_THREAD_AREA))
 #define XLAT_STR_58 STRINGIFY(PTRACE_GET_THREAD_AREA)
#endif
#endif

#if defined __mips__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_SET_THREAD_AREA),
 #define XLAT_VAL_59 ((unsigned) (PTRACE_SET_THREAD_AREA))
 #define XLAT_STR_59 STRINGIFY(PTRACE_SET_THREAD_AREA)
#else
#if defined(PTRACE_SET_THREAD_AREA) || (defined(HAVE_DECL_PTRACE_SET_THREAD_AREA) && HAVE_DECL_PTRACE_SET_THREAD_AREA)
  XLAT(PTRACE_SET_THREAD_AREA),
 #define XLAT_VAL_60 ((unsigned) (PTRACE_SET_THREAD_AREA))
 #define XLAT_STR_60 STRINGIFY(PTRACE_SET_THREAD_AREA)
#endif
#endif

#if defined __arm__ || defined __c6x__ || defined __sh__
 XLAT(PTRACE_GETFDPIC),
 #define XLAT_VAL_61 ((unsigned) (PTRACE_GETFDPIC))
 #define XLAT_STR_61 STRINGIFY(PTRACE_GETFDPIC)
#else
#if defined(PTRACE_GETFDPIC) || (defined(HAVE_DECL_PTRACE_GETFDPIC) && HAVE_DECL_PTRACE_GETFDPIC)
  XLAT(PTRACE_GETFDPIC),
 #define XLAT_VAL_62 ((unsigned) (PTRACE_GETFDPIC))
 #define XLAT_STR_62 STRINGIFY(PTRACE_GETFDPIC)
#endif
#endif

#if defined __powerpc__
 XLAT(PTRACE_SYSEMU),
 #define XLAT_VAL_63 ((unsigned) (PTRACE_SYSEMU))
 #define XLAT_STR_63 STRINGIFY(PTRACE_SYSEMU)
#elif defined __arm64__ || defined __aarch64__ || defined __x86_64__ || defined __i386__ || defined __s390__
 XLAT(PTRACE_SYSEMU),
 #define XLAT_VAL_64 ((unsigned) (PTRACE_SYSEMU))
 #define XLAT_STR_64 STRINGIFY(PTRACE_SYSEMU)
#else
#if defined(PTRACE_SYSEMU) || (defined(HAVE_DECL_PTRACE_SYSEMU) && HAVE_DECL_PTRACE_SYSEMU)
  XLAT(PTRACE_SYSEMU),
 #define XLAT_VAL_65 ((unsigned) (PTRACE_SYSEMU))
 #define XLAT_STR_65 STRINGIFY(PTRACE_SYSEMU)
#endif
#endif

#if defined __powerpc__
 XLAT(PTRACE_SYSEMU_SINGLESTEP),
 #define XLAT_VAL_66 ((unsigned) (PTRACE_SYSEMU_SINGLESTEP))
 #define XLAT_STR_66 STRINGIFY(PTRACE_SYSEMU_SINGLESTEP)
#elif defined __arm64__ || defined __aarch64__ || defined __x86_64__ || defined __i386__ || defined __s390__
 XLAT(PTRACE_SYSEMU_SINGLESTEP),
 #define XLAT_VAL_67 ((unsigned) (PTRACE_SYSEMU_SINGLESTEP))
 #define XLAT_STR_67 STRINGIFY(PTRACE_SYSEMU_SINGLESTEP)
#else
#if defined(PTRACE_SYSEMU_SINGLESTEP) || (defined(HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP) && HAVE_DECL_PTRACE_SYSEMU_SINGLESTEP)
  XLAT(PTRACE_SYSEMU_SINGLESTEP),
 #define XLAT_VAL_68 ((unsigned) (PTRACE_SYSEMU_SINGLESTEP))
 #define XLAT_STR_68 STRINGIFY(PTRACE_SYSEMU_SINGLESTEP)
#endif
#endif

#if defined __hppa__ || defined __ia64__ || defined __s390__
 XLAT(PTRACE_SINGLEBLOCK),
 #define XLAT_VAL_69 ((unsigned) (PTRACE_SINGLEBLOCK))
 #define XLAT_STR_69 STRINGIFY(PTRACE_SINGLEBLOCK)
#elif defined __m68k__ || defined __x86_64__ || defined __i386__
 XLAT(PTRACE_SINGLEBLOCK),
 #define XLAT_VAL_70 ((unsigned) (PTRACE_SINGLEBLOCK))
 #define XLAT_STR_70 STRINGIFY(PTRACE_SINGLEBLOCK)
#elif defined __powerpc__
 XLAT(PTRACE_SINGLEBLOCK),
 #define XLAT_VAL_71 ((unsigned) (PTRACE_SINGLEBLOCK))
 #define XLAT_STR_71 STRINGIFY(PTRACE_SINGLEBLOCK)
#else
#if defined(PTRACE_SINGLEBLOCK) || (defined(HAVE_DECL_PTRACE_SINGLEBLOCK) && HAVE_DECL_PTRACE_SINGLEBLOCK)
  XLAT(PTRACE_SINGLEBLOCK),
 #define XLAT_VAL_72 ((unsigned) (PTRACE_SINGLEBLOCK))
 #define XLAT_STR_72 STRINGIFY(PTRACE_SINGLEBLOCK)
#endif
#endif


#if defined __arm64__ || defined __aarch64__
 XLAT(PTRACE_PEEKMTETAGS),
 #define XLAT_VAL_73 ((unsigned) (PTRACE_PEEKMTETAGS))
 #define XLAT_STR_73 STRINGIFY(PTRACE_PEEKMTETAGS)
#else
#if defined(PTRACE_PEEKMTETAGS) || (defined(HAVE_DECL_PTRACE_PEEKMTETAGS) && HAVE_DECL_PTRACE_PEEKMTETAGS)
  XLAT(PTRACE_PEEKMTETAGS),
 #define XLAT_VAL_74 ((unsigned) (PTRACE_PEEKMTETAGS))
 #define XLAT_STR_74 STRINGIFY(PTRACE_PEEKMTETAGS)
#endif
#endif
#if defined __arm64__ || defined __aarch64__
 XLAT(PTRACE_POKEMTETAGS),
 #define XLAT_VAL_75 ((unsigned) (PTRACE_POKEMTETAGS))
 #define XLAT_STR_75 STRINGIFY(PTRACE_POKEMTETAGS)
#else
#if defined(PTRACE_POKEMTETAGS) || (defined(HAVE_DECL_PTRACE_POKEMTETAGS) && HAVE_DECL_PTRACE_POKEMTETAGS)
  XLAT(PTRACE_POKEMTETAGS),
 #define XLAT_VAL_76 ((unsigned) (PTRACE_POKEMTETAGS))
 #define XLAT_STR_76 STRINGIFY(PTRACE_POKEMTETAGS)
#endif
#endif


#if defined __arm__
 XLAT(PTRACE_GETWMMXREGS),
 #define XLAT_VAL_77 ((unsigned) (PTRACE_GETWMMXREGS))
 #define XLAT_STR_77 STRINGIFY(PTRACE_GETWMMXREGS)
#else
#if defined(PTRACE_GETWMMXREGS) || (defined(HAVE_DECL_PTRACE_GETWMMXREGS) && HAVE_DECL_PTRACE_GETWMMXREGS)
  XLAT(PTRACE_GETWMMXREGS),
 #define XLAT_VAL_78 ((unsigned) (PTRACE_GETWMMXREGS))
 #define XLAT_STR_78 STRINGIFY(PTRACE_GETWMMXREGS)
#endif
#endif
#if defined __arm__
 XLAT(PTRACE_SETWMMXREGS),
 #define XLAT_VAL_79 ((unsigned) (PTRACE_SETWMMXREGS))
 #define XLAT_STR_79 STRINGIFY(PTRACE_SETWMMXREGS)
#else
#if defined(PTRACE_SETWMMXREGS) || (defined(HAVE_DECL_PTRACE_SETWMMXREGS) && HAVE_DECL_PTRACE_SETWMMXREGS)
  XLAT(PTRACE_SETWMMXREGS),
 #define XLAT_VAL_80 ((unsigned) (PTRACE_SETWMMXREGS))
 #define XLAT_STR_80 STRINGIFY(PTRACE_SETWMMXREGS)
#endif
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__
 XLAT(PTRACE_SET_SYSCALL),
 #define XLAT_VAL_81 ((unsigned) (PTRACE_SET_SYSCALL))
 #define XLAT_STR_81 STRINGIFY(PTRACE_SET_SYSCALL)
#else
#if defined(PTRACE_SET_SYSCALL) || (defined(HAVE_DECL_PTRACE_SET_SYSCALL) && HAVE_DECL_PTRACE_SET_SYSCALL)
  XLAT(PTRACE_SET_SYSCALL),
 #define XLAT_VAL_82 ((unsigned) (PTRACE_SET_SYSCALL))
 #define XLAT_STR_82 STRINGIFY(PTRACE_SET_SYSCALL)
#endif
#endif
#if defined __arm__
 XLAT(PTRACE_GETCRUNCHREGS),
 #define XLAT_VAL_83 ((unsigned) (PTRACE_GETCRUNCHREGS))
 #define XLAT_STR_83 STRINGIFY(PTRACE_GETCRUNCHREGS)
#else
#if defined(PTRACE_GETCRUNCHREGS) || (defined(HAVE_DECL_PTRACE_GETCRUNCHREGS) && HAVE_DECL_PTRACE_GETCRUNCHREGS)
  XLAT(PTRACE_GETCRUNCHREGS),
 #define XLAT_VAL_84 ((unsigned) (PTRACE_GETCRUNCHREGS))
 #define XLAT_STR_84 STRINGIFY(PTRACE_GETCRUNCHREGS)
#endif
#endif
#if defined __arm__
 XLAT(PTRACE_SETCRUNCHREGS),
 #define XLAT_VAL_85 ((unsigned) (PTRACE_SETCRUNCHREGS))
 #define XLAT_STR_85 STRINGIFY(PTRACE_SETCRUNCHREGS)
#else
#if defined(PTRACE_SETCRUNCHREGS) || (defined(HAVE_DECL_PTRACE_SETCRUNCHREGS) && HAVE_DECL_PTRACE_SETCRUNCHREGS)
  XLAT(PTRACE_SETCRUNCHREGS),
 #define XLAT_VAL_86 ((unsigned) (PTRACE_SETCRUNCHREGS))
 #define XLAT_STR_86 STRINGIFY(PTRACE_SETCRUNCHREGS)
#endif
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__
 XLAT(PTRACE_GETVFPREGS),
 #define XLAT_VAL_87 ((unsigned) (PTRACE_GETVFPREGS))
 #define XLAT_STR_87 STRINGIFY(PTRACE_GETVFPREGS)
#else
#if defined(PTRACE_GETVFPREGS) || (defined(HAVE_DECL_PTRACE_GETVFPREGS) && HAVE_DECL_PTRACE_GETVFPREGS)
  XLAT(PTRACE_GETVFPREGS),
 #define XLAT_VAL_88 ((unsigned) (PTRACE_GETVFPREGS))
 #define XLAT_STR_88 STRINGIFY(PTRACE_GETVFPREGS)
#endif
#endif
#if defined __arm__ || defined __arm64__ || defined __aarch64__
 XLAT(PTRACE_SETVFPREGS),
 #define XLAT_VAL_89 ((unsigned) (PTRACE_SETVFPREGS))
 #define XLAT_STR_89 STRINGIFY(PTRACE_SETVFPREGS)
#else
#if defined(PTRACE_SETVFPREGS) || (defined(HAVE_DECL_PTRACE_SETVFPREGS) && HAVE_DECL_PTRACE_SETVFPREGS)
  XLAT(PTRACE_SETVFPREGS),
 #define XLAT_VAL_90 ((unsigned) (PTRACE_SETVFPREGS))
 #define XLAT_STR_90 STRINGIFY(PTRACE_SETVFPREGS)
#endif
#endif


#if defined __ia64__
 XLAT(PTRACE_OLD_GETSIGINFO),
 #define XLAT_VAL_91 ((unsigned) (PTRACE_OLD_GETSIGINFO))
 #define XLAT_STR_91 STRINGIFY(PTRACE_OLD_GETSIGINFO)
#else
#if defined(PTRACE_OLD_GETSIGINFO) || (defined(HAVE_DECL_PTRACE_OLD_GETSIGINFO) && HAVE_DECL_PTRACE_OLD_GETSIGINFO)
  XLAT(PTRACE_OLD_GETSIGINFO),
 #define XLAT_VAL_92 ((unsigned) (PTRACE_OLD_GETSIGINFO))
 #define XLAT_STR_92 STRINGIFY(PTRACE_OLD_GETSIGINFO)
#endif
#endif
#if defined __ia64__
 XLAT(PTRACE_OLD_SETSIGINFO),
 #define XLAT_VAL_93 ((unsigned) (PTRACE_OLD_SETSIGINFO))
 #define XLAT_STR_93 STRINGIFY(PTRACE_OLD_SETSIGINFO)
#else
#if defined(PTRACE_OLD_SETSIGINFO) || (defined(HAVE_DECL_PTRACE_OLD_SETSIGINFO) && HAVE_DECL_PTRACE_OLD_SETSIGINFO)
  XLAT(PTRACE_OLD_SETSIGINFO),
 #define XLAT_VAL_94 ((unsigned) (PTRACE_OLD_SETSIGINFO))
 #define XLAT_STR_94 STRINGIFY(PTRACE_OLD_SETSIGINFO)
#endif
#endif


#if defined __mips__
 XLAT(PTRACE_PEEKTEXT_3264),
 #define XLAT_VAL_95 ((unsigned) (PTRACE_PEEKTEXT_3264))
 #define XLAT_STR_95 STRINGIFY(PTRACE_PEEKTEXT_3264)
#else
#if defined(PTRACE_PEEKTEXT_3264) || (defined(HAVE_DECL_PTRACE_PEEKTEXT_3264) && HAVE_DECL_PTRACE_PEEKTEXT_3264)
  XLAT(PTRACE_PEEKTEXT_3264),
 #define XLAT_VAL_96 ((unsigned) (PTRACE_PEEKTEXT_3264))
 #define XLAT_STR_96 STRINGIFY(PTRACE_PEEKTEXT_3264)
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_PEEKDATA_3264),
 #define XLAT_VAL_97 ((unsigned) (PTRACE_PEEKDATA_3264))
 #define XLAT_STR_97 STRINGIFY(PTRACE_PEEKDATA_3264)
#else
#if defined(PTRACE_PEEKDATA_3264) || (defined(HAVE_DECL_PTRACE_PEEKDATA_3264) && HAVE_DECL_PTRACE_PEEKDATA_3264)
  XLAT(PTRACE_PEEKDATA_3264),
 #define XLAT_VAL_98 ((unsigned) (PTRACE_PEEKDATA_3264))
 #define XLAT_STR_98 STRINGIFY(PTRACE_PEEKDATA_3264)
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_POKETEXT_3264),
 #define XLAT_VAL_99 ((unsigned) (PTRACE_POKETEXT_3264))
 #define XLAT_STR_99 STRINGIFY(PTRACE_POKETEXT_3264)
#else
#if defined(PTRACE_POKETEXT_3264) || (defined(HAVE_DECL_PTRACE_POKETEXT_3264) && HAVE_DECL_PTRACE_POKETEXT_3264)
  XLAT(PTRACE_POKETEXT_3264),
 #define XLAT_VAL_100 ((unsigned) (PTRACE_POKETEXT_3264))
 #define XLAT_STR_100 STRINGIFY(PTRACE_POKETEXT_3264)
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_POKEDATA_3264),
 #define XLAT_VAL_101 ((unsigned) (PTRACE_POKEDATA_3264))
 #define XLAT_STR_101 STRINGIFY(PTRACE_POKEDATA_3264)
#else
#if defined(PTRACE_POKEDATA_3264) || (defined(HAVE_DECL_PTRACE_POKEDATA_3264) && HAVE_DECL_PTRACE_POKEDATA_3264)
  XLAT(PTRACE_POKEDATA_3264),
 #define XLAT_VAL_102 ((unsigned) (PTRACE_POKEDATA_3264))
 #define XLAT_STR_102 STRINGIFY(PTRACE_POKEDATA_3264)
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_GET_THREAD_AREA_3264),
 #define XLAT_VAL_103 ((unsigned) (PTRACE_GET_THREAD_AREA_3264))
 #define XLAT_STR_103 STRINGIFY(PTRACE_GET_THREAD_AREA_3264)
#else
#if defined(PTRACE_GET_THREAD_AREA_3264) || (defined(HAVE_DECL_PTRACE_GET_THREAD_AREA_3264) && HAVE_DECL_PTRACE_GET_THREAD_AREA_3264)
  XLAT(PTRACE_GET_THREAD_AREA_3264),
 #define XLAT_VAL_104 ((unsigned) (PTRACE_GET_THREAD_AREA_3264))
 #define XLAT_STR_104 STRINGIFY(PTRACE_GET_THREAD_AREA_3264)
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_GET_WATCH_REGS),
 #define XLAT_VAL_105 ((unsigned) (PTRACE_GET_WATCH_REGS))
 #define XLAT_STR_105 STRINGIFY(PTRACE_GET_WATCH_REGS)
#else
#if defined(PTRACE_GET_WATCH_REGS) || (defined(HAVE_DECL_PTRACE_GET_WATCH_REGS) && HAVE_DECL_PTRACE_GET_WATCH_REGS)
  XLAT(PTRACE_GET_WATCH_REGS),
 #define XLAT_VAL_106 ((unsigned) (PTRACE_GET_WATCH_REGS))
 #define XLAT_STR_106 STRINGIFY(PTRACE_GET_WATCH_REGS)
#endif
#endif
#if defined __mips__
 XLAT(PTRACE_SET_WATCH_REGS),
 #define XLAT_VAL_107 ((unsigned) (PTRACE_SET_WATCH_REGS))
 #define XLAT_STR_107 STRINGIFY(PTRACE_SET_WATCH_REGS)
#else
#if defined(PTRACE_SET_WATCH_REGS) || (defined(HAVE_DECL_PTRACE_SET_WATCH_REGS) && HAVE_DECL_PTRACE_SET_WATCH_REGS)
  XLAT(PTRACE_SET_WATCH_REGS),
 #define XLAT_VAL_108 ((unsigned) (PTRACE_SET_WATCH_REGS))
 #define XLAT_STR_108 STRINGIFY(PTRACE_SET_WATCH_REGS)
#endif
#endif


#if defined __powerpc__
 XLAT(PTRACE_GETVRREGS),
 #define XLAT_VAL_109 ((unsigned) (PTRACE_GETVRREGS))
 #define XLAT_STR_109 STRINGIFY(PTRACE_GETVRREGS)
#else
#if defined(PTRACE_GETVRREGS) || (defined(HAVE_DECL_PTRACE_GETVRREGS) && HAVE_DECL_PTRACE_GETVRREGS)
  XLAT(PTRACE_GETVRREGS),
 #define XLAT_VAL_110 ((unsigned) (PTRACE_GETVRREGS))
 #define XLAT_STR_110 STRINGIFY(PTRACE_GETVRREGS)
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_SETVRREGS),
 #define XLAT_VAL_111 ((unsigned) (PTRACE_SETVRREGS))
 #define XLAT_STR_111 STRINGIFY(PTRACE_SETVRREGS)
#else
#if defined(PTRACE_SETVRREGS) || (defined(HAVE_DECL_PTRACE_SETVRREGS) && HAVE_DECL_PTRACE_SETVRREGS)
  XLAT(PTRACE_SETVRREGS),
 #define XLAT_VAL_112 ((unsigned) (PTRACE_SETVRREGS))
 #define XLAT_STR_112 STRINGIFY(PTRACE_SETVRREGS)
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_GETEVRREGS),
 #define XLAT_VAL_113 ((unsigned) (PTRACE_GETEVRREGS))
 #define XLAT_STR_113 STRINGIFY(PTRACE_GETEVRREGS)
#else
#if defined(PTRACE_GETEVRREGS) || (defined(HAVE_DECL_PTRACE_GETEVRREGS) && HAVE_DECL_PTRACE_GETEVRREGS)
  XLAT(PTRACE_GETEVRREGS),
 #define XLAT_VAL_114 ((unsigned) (PTRACE_GETEVRREGS))
 #define XLAT_STR_114 STRINGIFY(PTRACE_GETEVRREGS)
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_SETEVRREGS),
 #define XLAT_VAL_115 ((unsigned) (PTRACE_SETEVRREGS))
 #define XLAT_STR_115 STRINGIFY(PTRACE_SETEVRREGS)
#else
#if defined(PTRACE_SETEVRREGS) || (defined(HAVE_DECL_PTRACE_SETEVRREGS) && HAVE_DECL_PTRACE_SETEVRREGS)
  XLAT(PTRACE_SETEVRREGS),
 #define XLAT_VAL_116 ((unsigned) (PTRACE_SETEVRREGS))
 #define XLAT_STR_116 STRINGIFY(PTRACE_SETEVRREGS)
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_GETVSRREGS),
 #define XLAT_VAL_117 ((unsigned) (PTRACE_GETVSRREGS))
 #define XLAT_STR_117 STRINGIFY(PTRACE_GETVSRREGS)
#else
#if defined(PTRACE_GETVSRREGS) || (defined(HAVE_DECL_PTRACE_GETVSRREGS) && HAVE_DECL_PTRACE_GETVSRREGS)
  XLAT(PTRACE_GETVSRREGS),
 #define XLAT_VAL_118 ((unsigned) (PTRACE_GETVSRREGS))
 #define XLAT_STR_118 STRINGIFY(PTRACE_GETVSRREGS)
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_SETVSRREGS),
 #define XLAT_VAL_119 ((unsigned) (PTRACE_SETVSRREGS))
 #define XLAT_STR_119 STRINGIFY(PTRACE_SETVSRREGS)
#else
#if defined(PTRACE_SETVSRREGS) || (defined(HAVE_DECL_PTRACE_SETVSRREGS) && HAVE_DECL_PTRACE_SETVSRREGS)
  XLAT(PTRACE_SETVSRREGS),
 #define XLAT_VAL_120 ((unsigned) (PTRACE_SETVSRREGS))
 #define XLAT_STR_120 STRINGIFY(PTRACE_SETVSRREGS)
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_GET_DEBUGREG),
 #define XLAT_VAL_121 ((unsigned) (PTRACE_GET_DEBUGREG))
 #define XLAT_STR_121 STRINGIFY(PTRACE_GET_DEBUGREG)
#else
#if defined(PTRACE_GET_DEBUGREG) || (defined(HAVE_DECL_PTRACE_GET_DEBUGREG) && HAVE_DECL_PTRACE_GET_DEBUGREG)
  XLAT(PTRACE_GET_DEBUGREG),
 #define XLAT_VAL_122 ((unsigned) (PTRACE_GET_DEBUGREG))
 #define XLAT_STR_122 STRINGIFY(PTRACE_GET_DEBUGREG)
#endif
#endif
#if defined __powerpc__
 XLAT(PTRACE_SET_DEBUGREG),
 #define XLAT_VAL_123 ((unsigned) (PTRACE_SET_DEBUGREG))
 #define XLAT_STR_123 STRINGIFY(PTRACE_SET_DEBUGREG)
#else
#if defined(PTRACE_SET_DEBUGREG) || (defined(HAVE_DECL_PTRACE_SET_DEBUGREG) && HAVE_DECL_PTRACE_SET_DEBUGREG)
  XLAT(PTRACE_SET_DEBUGREG),
 #define XLAT_VAL_124 ((unsigned) (PTRACE_SET_DEBUGREG))
 #define XLAT_STR_124 STRINGIFY(PTRACE_SET_DEBUGREG)
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_DELHWDEBUG),
 #define XLAT_VAL_125 ((unsigned) (PPC_PTRACE_DELHWDEBUG))
 #define XLAT_STR_125 STRINGIFY(PPC_PTRACE_DELHWDEBUG)
#else
#if defined(PPC_PTRACE_DELHWDEBUG) || (defined(HAVE_DECL_PPC_PTRACE_DELHWDEBUG) && HAVE_DECL_PPC_PTRACE_DELHWDEBUG)
  XLAT(PPC_PTRACE_DELHWDEBUG),
 #define XLAT_VAL_126 ((unsigned) (PPC_PTRACE_DELHWDEBUG))
 #define XLAT_STR_126 STRINGIFY(PPC_PTRACE_DELHWDEBUG)
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_SETHWDEBUG),
 #define XLAT_VAL_127 ((unsigned) (PPC_PTRACE_SETHWDEBUG))
 #define XLAT_STR_127 STRINGIFY(PPC_PTRACE_SETHWDEBUG)
#else
#if defined(PPC_PTRACE_SETHWDEBUG) || (defined(HAVE_DECL_PPC_PTRACE_SETHWDEBUG) && HAVE_DECL_PPC_PTRACE_SETHWDEBUG)
  XLAT(PPC_PTRACE_SETHWDEBUG),
 #define XLAT_VAL_128 ((unsigned) (PPC_PTRACE_SETHWDEBUG))
 #define XLAT_STR_128 STRINGIFY(PPC_PTRACE_SETHWDEBUG)
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_GETHWDBGINFO),
 #define XLAT_VAL_129 ((unsigned) (PPC_PTRACE_GETHWDBGINFO))
 #define XLAT_STR_129 STRINGIFY(PPC_PTRACE_GETHWDBGINFO)
#else
#if defined(PPC_PTRACE_GETHWDBGINFO) || (defined(HAVE_DECL_PPC_PTRACE_GETHWDBGINFO) && HAVE_DECL_PPC_PTRACE_GETHWDBGINFO)
  XLAT(PPC_PTRACE_GETHWDBGINFO),
 #define XLAT_VAL_130 ((unsigned) (PPC_PTRACE_GETHWDBGINFO))
 #define XLAT_STR_130 STRINGIFY(PPC_PTRACE_GETHWDBGINFO)
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_POKEUSR_3264),
 #define XLAT_VAL_131 ((unsigned) (PPC_PTRACE_POKEUSR_3264))
 #define XLAT_STR_131 STRINGIFY(PPC_PTRACE_POKEUSR_3264)
#else
#if defined(PPC_PTRACE_POKEUSR_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKEUSR_3264) && HAVE_DECL_PPC_PTRACE_POKEUSR_3264)
  XLAT(PPC_PTRACE_POKEUSR_3264),
 #define XLAT_VAL_132 ((unsigned) (PPC_PTRACE_POKEUSR_3264))
 #define XLAT_STR_132 STRINGIFY(PPC_PTRACE_POKEUSR_3264)
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_PEEKUSR_3264),
 #define XLAT_VAL_133 ((unsigned) (PPC_PTRACE_PEEKUSR_3264))
 #define XLAT_STR_133 STRINGIFY(PPC_PTRACE_PEEKUSR_3264)
#else
#if defined(PPC_PTRACE_PEEKUSR_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKUSR_3264) && HAVE_DECL_PPC_PTRACE_PEEKUSR_3264)
  XLAT(PPC_PTRACE_PEEKUSR_3264),
 #define XLAT_VAL_134 ((unsigned) (PPC_PTRACE_PEEKUSR_3264))
 #define XLAT_STR_134 STRINGIFY(PPC_PTRACE_PEEKUSR_3264)
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_POKEDATA_3264),
 #define XLAT_VAL_135 ((unsigned) (PPC_PTRACE_POKEDATA_3264))
 #define XLAT_STR_135 STRINGIFY(PPC_PTRACE_POKEDATA_3264)
#else
#if defined(PPC_PTRACE_POKEDATA_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKEDATA_3264) && HAVE_DECL_PPC_PTRACE_POKEDATA_3264)
  XLAT(PPC_PTRACE_POKEDATA_3264),
 #define XLAT_VAL_136 ((unsigned) (PPC_PTRACE_POKEDATA_3264))
 #define XLAT_STR_136 STRINGIFY(PPC_PTRACE_POKEDATA_3264)
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_POKETEXT_3264),
 #define XLAT_VAL_137 ((unsigned) (PPC_PTRACE_POKETEXT_3264))
 #define XLAT_STR_137 STRINGIFY(PPC_PTRACE_POKETEXT_3264)
#else
#if defined(PPC_PTRACE_POKETEXT_3264) || (defined(HAVE_DECL_PPC_PTRACE_POKETEXT_3264) && HAVE_DECL_PPC_PTRACE_POKETEXT_3264)
  XLAT(PPC_PTRACE_POKETEXT_3264),
 #define XLAT_VAL_138 ((unsigned) (PPC_PTRACE_POKETEXT_3264))
 #define XLAT_STR_138 STRINGIFY(PPC_PTRACE_POKETEXT_3264)
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_PEEKDATA_3264),
 #define XLAT_VAL_139 ((unsigned) (PPC_PTRACE_PEEKDATA_3264))
 #define XLAT_STR_139 STRINGIFY(PPC_PTRACE_PEEKDATA_3264)
#else
#if defined(PPC_PTRACE_PEEKDATA_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKDATA_3264) && HAVE_DECL_PPC_PTRACE_PEEKDATA_3264)
  XLAT(PPC_PTRACE_PEEKDATA_3264),
 #define XLAT_VAL_140 ((unsigned) (PPC_PTRACE_PEEKDATA_3264))
 #define XLAT_STR_140 STRINGIFY(PPC_PTRACE_PEEKDATA_3264)
#endif
#endif
#if defined __powerpc__
 XLAT(PPC_PTRACE_PEEKTEXT_3264),
 #define XLAT_VAL_141 ((unsigned) (PPC_PTRACE_PEEKTEXT_3264))
 #define XLAT_STR_141 STRINGIFY(PPC_PTRACE_PEEKTEXT_3264)
#else
#if defined(PPC_PTRACE_PEEKTEXT_3264) || (defined(HAVE_DECL_PPC_PTRACE_PEEKTEXT_3264) && HAVE_DECL_PPC_PTRACE_PEEKTEXT_3264)
  XLAT(PPC_PTRACE_PEEKTEXT_3264),
 #define XLAT_VAL_142 ((unsigned) (PPC_PTRACE_PEEKTEXT_3264))
 #define XLAT_STR_142 STRINGIFY(PPC_PTRACE_PEEKTEXT_3264)
#endif
#endif


#if defined __s390__
 XLAT(PTRACE_PEEKUSR_AREA),
 #define XLAT_VAL_143 ((unsigned) (PTRACE_PEEKUSR_AREA))
 #define XLAT_STR_143 STRINGIFY(PTRACE_PEEKUSR_AREA)
#else
#if defined(PTRACE_PEEKUSR_AREA) || (defined(HAVE_DECL_PTRACE_PEEKUSR_AREA) && HAVE_DECL_PTRACE_PEEKUSR_AREA)
  XLAT(PTRACE_PEEKUSR_AREA),
 #define XLAT_VAL_144 ((unsigned) (PTRACE_PEEKUSR_AREA))
 #define XLAT_STR_144 STRINGIFY(PTRACE_PEEKUSR_AREA)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_POKEUSR_AREA),
 #define XLAT_VAL_145 ((unsigned) (PTRACE_POKEUSR_AREA))
 #define XLAT_STR_145 STRINGIFY(PTRACE_POKEUSR_AREA)
#else
#if defined(PTRACE_POKEUSR_AREA) || (defined(HAVE_DECL_PTRACE_POKEUSR_AREA) && HAVE_DECL_PTRACE_POKEUSR_AREA)
  XLAT(PTRACE_POKEUSR_AREA),
 #define XLAT_VAL_146 ((unsigned) (PTRACE_POKEUSR_AREA))
 #define XLAT_STR_146 STRINGIFY(PTRACE_POKEUSR_AREA)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_PEEKTEXT_AREA),
 #define XLAT_VAL_147 ((unsigned) (PTRACE_PEEKTEXT_AREA))
 #define XLAT_STR_147 STRINGIFY(PTRACE_PEEKTEXT_AREA)
#else
#if defined(PTRACE_PEEKTEXT_AREA) || (defined(HAVE_DECL_PTRACE_PEEKTEXT_AREA) && HAVE_DECL_PTRACE_PEEKTEXT_AREA)
  XLAT(PTRACE_PEEKTEXT_AREA),
 #define XLAT_VAL_148 ((unsigned) (PTRACE_PEEKTEXT_AREA))
 #define XLAT_STR_148 STRINGIFY(PTRACE_PEEKTEXT_AREA)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_PEEKDATA_AREA),
 #define XLAT_VAL_149 ((unsigned) (PTRACE_PEEKDATA_AREA))
 #define XLAT_STR_149 STRINGIFY(PTRACE_PEEKDATA_AREA)
#else
#if defined(PTRACE_PEEKDATA_AREA) || (defined(HAVE_DECL_PTRACE_PEEKDATA_AREA) && HAVE_DECL_PTRACE_PEEKDATA_AREA)
  XLAT(PTRACE_PEEKDATA_AREA),
 #define XLAT_VAL_150 ((unsigned) (PTRACE_PEEKDATA_AREA))
 #define XLAT_STR_150 STRINGIFY(PTRACE_PEEKDATA_AREA)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_POKETEXT_AREA),
 #define XLAT_VAL_151 ((unsigned) (PTRACE_POKETEXT_AREA))
 #define XLAT_STR_151 STRINGIFY(PTRACE_POKETEXT_AREA)
#else
#if defined(PTRACE_POKETEXT_AREA) || (defined(HAVE_DECL_PTRACE_POKETEXT_AREA) && HAVE_DECL_PTRACE_POKETEXT_AREA)
  XLAT(PTRACE_POKETEXT_AREA),
 #define XLAT_VAL_152 ((unsigned) (PTRACE_POKETEXT_AREA))
 #define XLAT_STR_152 STRINGIFY(PTRACE_POKETEXT_AREA)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_POKEDATA_AREA),
 #define XLAT_VAL_153 ((unsigned) (PTRACE_POKEDATA_AREA))
 #define XLAT_STR_153 STRINGIFY(PTRACE_POKEDATA_AREA)
#else
#if defined(PTRACE_POKEDATA_AREA) || (defined(HAVE_DECL_PTRACE_POKEDATA_AREA) && HAVE_DECL_PTRACE_POKEDATA_AREA)
  XLAT(PTRACE_POKEDATA_AREA),
 #define XLAT_VAL_154 ((unsigned) (PTRACE_POKEDATA_AREA))
 #define XLAT_STR_154 STRINGIFY(PTRACE_POKEDATA_AREA)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_GET_LAST_BREAK),
 #define XLAT_VAL_155 ((unsigned) (PTRACE_GET_LAST_BREAK))
 #define XLAT_STR_155 STRINGIFY(PTRACE_GET_LAST_BREAK)
#else
#if defined(PTRACE_GET_LAST_BREAK) || (defined(HAVE_DECL_PTRACE_GET_LAST_BREAK) && HAVE_DECL_PTRACE_GET_LAST_BREAK)
  XLAT(PTRACE_GET_LAST_BREAK),
 #define XLAT_VAL_156 ((unsigned) (PTRACE_GET_LAST_BREAK))
 #define XLAT_STR_156 STRINGIFY(PTRACE_GET_LAST_BREAK)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_PEEK_SYSTEM_CALL),
 #define XLAT_VAL_157 ((unsigned) (PTRACE_PEEK_SYSTEM_CALL))
 #define XLAT_STR_157 STRINGIFY(PTRACE_PEEK_SYSTEM_CALL)
#else
#if defined(PTRACE_PEEK_SYSTEM_CALL) || (defined(HAVE_DECL_PTRACE_PEEK_SYSTEM_CALL) && HAVE_DECL_PTRACE_PEEK_SYSTEM_CALL)
  XLAT(PTRACE_PEEK_SYSTEM_CALL),
 #define XLAT_VAL_158 ((unsigned) (PTRACE_PEEK_SYSTEM_CALL))
 #define XLAT_STR_158 STRINGIFY(PTRACE_PEEK_SYSTEM_CALL)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_POKE_SYSTEM_CALL),
 #define XLAT_VAL_159 ((unsigned) (PTRACE_POKE_SYSTEM_CALL))
 #define XLAT_STR_159 STRINGIFY(PTRACE_POKE_SYSTEM_CALL)
#else
#if defined(PTRACE_POKE_SYSTEM_CALL) || (defined(HAVE_DECL_PTRACE_POKE_SYSTEM_CALL) && HAVE_DECL_PTRACE_POKE_SYSTEM_CALL)
  XLAT(PTRACE_POKE_SYSTEM_CALL),
 #define XLAT_VAL_160 ((unsigned) (PTRACE_POKE_SYSTEM_CALL))
 #define XLAT_STR_160 STRINGIFY(PTRACE_POKE_SYSTEM_CALL)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_ENABLE_TE),
 #define XLAT_VAL_161 ((unsigned) (PTRACE_ENABLE_TE))
 #define XLAT_STR_161 STRINGIFY(PTRACE_ENABLE_TE)
#else
#if defined(PTRACE_ENABLE_TE) || (defined(HAVE_DECL_PTRACE_ENABLE_TE) && HAVE_DECL_PTRACE_ENABLE_TE)
  XLAT(PTRACE_ENABLE_TE),
 #define XLAT_VAL_162 ((unsigned) (PTRACE_ENABLE_TE))
 #define XLAT_STR_162 STRINGIFY(PTRACE_ENABLE_TE)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_DISABLE_TE),
 #define XLAT_VAL_163 ((unsigned) (PTRACE_DISABLE_TE))
 #define XLAT_STR_163 STRINGIFY(PTRACE_DISABLE_TE)
#else
#if defined(PTRACE_DISABLE_TE) || (defined(HAVE_DECL_PTRACE_DISABLE_TE) && HAVE_DECL_PTRACE_DISABLE_TE)
  XLAT(PTRACE_DISABLE_TE),
 #define XLAT_VAL_164 ((unsigned) (PTRACE_DISABLE_TE))
 #define XLAT_STR_164 STRINGIFY(PTRACE_DISABLE_TE)
#endif
#endif
#if defined __s390__
 XLAT(PTRACE_TE_ABORT_RAND),
 #define XLAT_VAL_165 ((unsigned) (PTRACE_TE_ABORT_RAND))
 #define XLAT_STR_165 STRINGIFY(PTRACE_TE_ABORT_RAND)
#else
#if defined(PTRACE_TE_ABORT_RAND) || (defined(HAVE_DECL_PTRACE_TE_ABORT_RAND) && HAVE_DECL_PTRACE_TE_ABORT_RAND)
  XLAT(PTRACE_TE_ABORT_RAND),
 #define XLAT_VAL_166 ((unsigned) (PTRACE_TE_ABORT_RAND))
 #define XLAT_STR_166 STRINGIFY(PTRACE_TE_ABORT_RAND)
#endif
#endif


#if defined __sh__
 XLAT(PTRACE_GETDSPREGS),
 #define XLAT_VAL_167 ((unsigned) (PTRACE_GETDSPREGS))
 #define XLAT_STR_167 STRINGIFY(PTRACE_GETDSPREGS)
#else
#if defined(PTRACE_GETDSPREGS) || (defined(HAVE_DECL_PTRACE_GETDSPREGS) && HAVE_DECL_PTRACE_GETDSPREGS)
  XLAT(PTRACE_GETDSPREGS),
 #define XLAT_VAL_168 ((unsigned) (PTRACE_GETDSPREGS))
 #define XLAT_STR_168 STRINGIFY(PTRACE_GETDSPREGS)
#endif
#endif
#if defined __sh__
 XLAT(PTRACE_SETDSPREGS),
 #define XLAT_VAL_169 ((unsigned) (PTRACE_SETDSPREGS))
 #define XLAT_STR_169 STRINGIFY(PTRACE_SETDSPREGS)
#else
#if defined(PTRACE_SETDSPREGS) || (defined(HAVE_DECL_PTRACE_SETDSPREGS) && HAVE_DECL_PTRACE_SETDSPREGS)
  XLAT(PTRACE_SETDSPREGS),
 #define XLAT_VAL_170 ((unsigned) (PTRACE_SETDSPREGS))
 #define XLAT_STR_170 STRINGIFY(PTRACE_SETDSPREGS)
#endif
#endif


#if defined __sparc__
 XLAT(PTRACE_SPARC_DETACH),
 #define XLAT_VAL_171 ((unsigned) (PTRACE_SPARC_DETACH))
 #define XLAT_STR_171 STRINGIFY(PTRACE_SPARC_DETACH)
#else
#if defined(PTRACE_SPARC_DETACH) || (defined(HAVE_DECL_PTRACE_SPARC_DETACH) && HAVE_DECL_PTRACE_SPARC_DETACH)
  XLAT(PTRACE_SPARC_DETACH),
 #define XLAT_VAL_172 ((unsigned) (PTRACE_SPARC_DETACH))
 #define XLAT_STR_172 STRINGIFY(PTRACE_SPARC_DETACH)
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_READDATA),
 #define XLAT_VAL_173 ((unsigned) (PTRACE_READDATA))
 #define XLAT_STR_173 STRINGIFY(PTRACE_READDATA)
#else
#if defined(PTRACE_READDATA) || (defined(HAVE_DECL_PTRACE_READDATA) && HAVE_DECL_PTRACE_READDATA)
  XLAT(PTRACE_READDATA),
 #define XLAT_VAL_174 ((unsigned) (PTRACE_READDATA))
 #define XLAT_STR_174 STRINGIFY(PTRACE_READDATA)
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_WRITEDATA),
 #define XLAT_VAL_175 ((unsigned) (PTRACE_WRITEDATA))
 #define XLAT_STR_175 STRINGIFY(PTRACE_WRITEDATA)
#else
#if defined(PTRACE_WRITEDATA) || (defined(HAVE_DECL_PTRACE_WRITEDATA) && HAVE_DECL_PTRACE_WRITEDATA)
  XLAT(PTRACE_WRITEDATA),
 #define XLAT_VAL_176 ((unsigned) (PTRACE_WRITEDATA))
 #define XLAT_STR_176 STRINGIFY(PTRACE_WRITEDATA)
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_READTEXT),
 #define XLAT_VAL_177 ((unsigned) (PTRACE_READTEXT))
 #define XLAT_STR_177 STRINGIFY(PTRACE_READTEXT)
#else
#if defined(PTRACE_READTEXT) || (defined(HAVE_DECL_PTRACE_READTEXT) && HAVE_DECL_PTRACE_READTEXT)
  XLAT(PTRACE_READTEXT),
 #define XLAT_VAL_178 ((unsigned) (PTRACE_READTEXT))
 #define XLAT_STR_178 STRINGIFY(PTRACE_READTEXT)
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_WRITETEXT),
 #define XLAT_VAL_179 ((unsigned) (PTRACE_WRITETEXT))
 #define XLAT_STR_179 STRINGIFY(PTRACE_WRITETEXT)
#else
#if defined(PTRACE_WRITETEXT) || (defined(HAVE_DECL_PTRACE_WRITETEXT) && HAVE_DECL_PTRACE_WRITETEXT)
  XLAT(PTRACE_WRITETEXT),
 #define XLAT_VAL_180 ((unsigned) (PTRACE_WRITETEXT))
 #define XLAT_STR_180 STRINGIFY(PTRACE_WRITETEXT)
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_GETFPAREGS),
 #define XLAT_VAL_181 ((unsigned) (PTRACE_GETFPAREGS))
 #define XLAT_STR_181 STRINGIFY(PTRACE_GETFPAREGS)
#else
#if defined(PTRACE_GETFPAREGS) || (defined(HAVE_DECL_PTRACE_GETFPAREGS) && HAVE_DECL_PTRACE_GETFPAREGS)
  XLAT(PTRACE_GETFPAREGS),
 #define XLAT_VAL_182 ((unsigned) (PTRACE_GETFPAREGS))
 #define XLAT_STR_182 STRINGIFY(PTRACE_GETFPAREGS)
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_SETFPAREGS),
 #define XLAT_VAL_183 ((unsigned) (PTRACE_SETFPAREGS))
 #define XLAT_STR_183 STRINGIFY(PTRACE_SETFPAREGS)
#else
#if defined(PTRACE_SETFPAREGS) || (defined(HAVE_DECL_PTRACE_SETFPAREGS) && HAVE_DECL_PTRACE_SETFPAREGS)
  XLAT(PTRACE_SETFPAREGS),
 #define XLAT_VAL_184 ((unsigned) (PTRACE_SETFPAREGS))
 #define XLAT_STR_184 STRINGIFY(PTRACE_SETFPAREGS)
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_GETFPREGS64),
 #define XLAT_VAL_185 ((unsigned) (PTRACE_GETFPREGS64))
 #define XLAT_STR_185 STRINGIFY(PTRACE_GETFPREGS64)
#else
#if defined(PTRACE_GETFPREGS64) || (defined(HAVE_DECL_PTRACE_GETFPREGS64) && HAVE_DECL_PTRACE_GETFPREGS64)
  XLAT(PTRACE_GETFPREGS64),
 #define XLAT_VAL_186 ((unsigned) (PTRACE_GETFPREGS64))
 #define XLAT_STR_186 STRINGIFY(PTRACE_GETFPREGS64)
#endif
#endif
#if defined __sparc__
 XLAT(PTRACE_SETFPREGS64),
 #define XLAT_VAL_187 ((unsigned) (PTRACE_SETFPREGS64))
 #define XLAT_STR_187 STRINGIFY(PTRACE_SETFPREGS64)
#else
#if defined(PTRACE_SETFPREGS64) || (defined(HAVE_DECL_PTRACE_SETFPREGS64) && HAVE_DECL_PTRACE_SETFPREGS64)
  XLAT(PTRACE_SETFPREGS64),
 #define XLAT_VAL_188 ((unsigned) (PTRACE_SETFPREGS64))
 #define XLAT_STR_188 STRINGIFY(PTRACE_SETFPREGS64)
#endif
#endif


#if defined __x86_64__ || defined __i386__
 XLAT(PTRACE_ARCH_PRCTL),
 #define XLAT_VAL_189 ((unsigned) (PTRACE_ARCH_PRCTL))
 #define XLAT_STR_189 STRINGIFY(PTRACE_ARCH_PRCTL)
#else
#if defined(PTRACE_ARCH_PRCTL) || (defined(HAVE_DECL_PTRACE_ARCH_PRCTL) && HAVE_DECL_PTRACE_ARCH_PRCTL)
  XLAT(PTRACE_ARCH_PRCTL),
 #define XLAT_VAL_190 ((unsigned) (PTRACE_ARCH_PRCTL))
 #define XLAT_STR_190 STRINGIFY(PTRACE_ARCH_PRCTL)
#endif
#endif


#if defined __xtensa__
 XLAT(PTRACE_GETXTREGS),
 #define XLAT_VAL_191 ((unsigned) (PTRACE_GETXTREGS))
 #define XLAT_STR_191 STRINGIFY(PTRACE_GETXTREGS)
#else
#if defined(PTRACE_GETXTREGS) || (defined(HAVE_DECL_PTRACE_GETXTREGS) && HAVE_DECL_PTRACE_GETXTREGS)
  XLAT(PTRACE_GETXTREGS),
 #define XLAT_VAL_192 ((unsigned) (PTRACE_GETXTREGS))
 #define XLAT_STR_192 STRINGIFY(PTRACE_GETXTREGS)
#endif
#endif
#if defined __xtensa__
 XLAT(PTRACE_SETXTREGS),
 #define XLAT_VAL_193 ((unsigned) (PTRACE_SETXTREGS))
 #define XLAT_STR_193 STRINGIFY(PTRACE_SETXTREGS)
#else
#if defined(PTRACE_SETXTREGS) || (defined(HAVE_DECL_PTRACE_SETXTREGS) && HAVE_DECL_PTRACE_SETXTREGS)
  XLAT(PTRACE_SETXTREGS),
 #define XLAT_VAL_194 ((unsigned) (PTRACE_SETXTREGS))
 #define XLAT_STR_194 STRINGIFY(PTRACE_SETXTREGS)
#endif
#endif
};
const struct xlat ptrace_cmds[1] = { {
 .data = ptrace_cmds_xdata,
 .size = ARRAY_SIZE(ptrace_cmds_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
#  ifdef XLAT_VAL_22
  | XLAT_VAL_22
#  endif
#  ifdef XLAT_VAL_23
  | XLAT_VAL_23
#  endif
#  ifdef XLAT_VAL_24
  | XLAT_VAL_24
#  endif
#  ifdef XLAT_VAL_25
  | XLAT_VAL_25
#  endif
#  ifdef XLAT_VAL_26
  | XLAT_VAL_26
#  endif
#  ifdef XLAT_VAL_27
  | XLAT_VAL_27
#  endif
#  ifdef XLAT_VAL_28
  | XLAT_VAL_28
#  endif
#  ifdef XLAT_VAL_29
  | XLAT_VAL_29
#  endif
#  ifdef XLAT_VAL_30
  | XLAT_VAL_30
#  endif
#  ifdef XLAT_VAL_31
  | XLAT_VAL_31
#  endif
#  ifdef XLAT_VAL_32
  | XLAT_VAL_32
#  endif
#  ifdef XLAT_VAL_33
  | XLAT_VAL_33
#  endif
#  ifdef XLAT_VAL_34
  | XLAT_VAL_34
#  endif
#  ifdef XLAT_VAL_35
  | XLAT_VAL_35
#  endif
#  ifdef XLAT_VAL_36
  | XLAT_VAL_36
#  endif
#  ifdef XLAT_VAL_37
  | XLAT_VAL_37
#  endif
#  ifdef XLAT_VAL_38
  | XLAT_VAL_38
#  endif
#  ifdef XLAT_VAL_39
  | XLAT_VAL_39
#  endif
#  ifdef XLAT_VAL_40
  | XLAT_VAL_40
#  endif
#  ifdef XLAT_VAL_41
  | XLAT_VAL_41
#  endif
#  ifdef XLAT_VAL_42
  | XLAT_VAL_42
#  endif
#  ifdef XLAT_VAL_43
  | XLAT_VAL_43
#  endif
#  ifdef XLAT_VAL_44
  | XLAT_VAL_44
#  endif
#  ifdef XLAT_VAL_45
  | XLAT_VAL_45
#  endif
#  ifdef XLAT_VAL_46
  | XLAT_VAL_46
#  endif
#  ifdef XLAT_VAL_47
  | XLAT_VAL_47
#  endif
#  ifdef XLAT_VAL_48
  | XLAT_VAL_48
#  endif
#  ifdef XLAT_VAL_49
  | XLAT_VAL_49
#  endif
#  ifdef XLAT_VAL_50
  | XLAT_VAL_50
#  endif
#  ifdef XLAT_VAL_51
  | XLAT_VAL_51
#  endif
#  ifdef XLAT_VAL_52
  | XLAT_VAL_52
#  endif
#  ifdef XLAT_VAL_53
  | XLAT_VAL_53
#  endif
#  ifdef XLAT_VAL_54
  | XLAT_VAL_54
#  endif
#  ifdef XLAT_VAL_55
  | XLAT_VAL_55
#  endif
#  ifdef XLAT_VAL_56
  | XLAT_VAL_56
#  endif
#  ifdef XLAT_VAL_57
  | XLAT_VAL_57
#  endif
#  ifdef XLAT_VAL_58
  | XLAT_VAL_58
#  endif
#  ifdef XLAT_VAL_59
  | XLAT_VAL_59
#  endif
#  ifdef XLAT_VAL_60
  | XLAT_VAL_60
#  endif
#  ifdef XLAT_VAL_61
  | XLAT_VAL_61
#  endif
#  ifdef XLAT_VAL_62
  | XLAT_VAL_62
#  endif
#  ifdef XLAT_VAL_63
  | XLAT_VAL_63
#  endif
#  ifdef XLAT_VAL_64
  | XLAT_VAL_64
#  endif
#  ifdef XLAT_VAL_65
  | XLAT_VAL_65
#  endif
#  ifdef XLAT_VAL_66
  | XLAT_VAL_66
#  endif
#  ifdef XLAT_VAL_67
  | XLAT_VAL_67
#  endif
#  ifdef XLAT_VAL_68
  | XLAT_VAL_68
#  endif
#  ifdef XLAT_VAL_69
  | XLAT_VAL_69
#  endif
#  ifdef XLAT_VAL_70
  | XLAT_VAL_70
#  endif
#  ifdef XLAT_VAL_71
  | XLAT_VAL_71
#  endif
#  ifdef XLAT_VAL_72
  | XLAT_VAL_72
#  endif
#  ifdef XLAT_VAL_73
  | XLAT_VAL_73
#  endif
#  ifdef XLAT_VAL_74
  | XLAT_VAL_74
#  endif
#  ifdef XLAT_VAL_75
  | XLAT_VAL_75
#  endif
#  ifdef XLAT_VAL_76
  | XLAT_VAL_76
#  endif
#  ifdef XLAT_VAL_77
  | XLAT_VAL_77
#  endif
#  ifdef XLAT_VAL_78
  | XLAT_VAL_78
#  endif
#  ifdef XLAT_VAL_79
  | XLAT_VAL_79
#  endif
#  ifdef XLAT_VAL_80
  | XLAT_VAL_80
#  endif
#  ifdef XLAT_VAL_81
  | XLAT_VAL_81
#  endif
#  ifdef XLAT_VAL_82
  | XLAT_VAL_82
#  endif
#  ifdef XLAT_VAL_83
  | XLAT_VAL_83
#  endif
#  ifdef XLAT_VAL_84
  | XLAT_VAL_84
#  endif
#  ifdef XLAT_VAL_85
  | XLAT_VAL_85
#  endif
#  ifdef XLAT_VAL_86
  | XLAT_VAL_86
#  endif
#  ifdef XLAT_VAL_87
  | XLAT_VAL_87
#  endif
#  ifdef XLAT_VAL_88
  | XLAT_VAL_88
#  endif
#  ifdef XLAT_VAL_89
  | XLAT_VAL_89
#  endif
#  ifdef XLAT_VAL_90
  | XLAT_VAL_90
#  endif
#  ifdef XLAT_VAL_91
  | XLAT_VAL_91
#  endif
#  ifdef XLAT_VAL_92
  | XLAT_VAL_92
#  endif
#  ifdef XLAT_VAL_93
  | XLAT_VAL_93
#  endif
#  ifdef XLAT_VAL_94
  | XLAT_VAL_94
#  endif
#  ifdef XLAT_VAL_95
  | XLAT_VAL_95
#  endif
#  ifdef XLAT_VAL_96
  | XLAT_VAL_96
#  endif
#  ifdef XLAT_VAL_97
  | XLAT_VAL_97
#  endif
#  ifdef XLAT_VAL_98
  | XLAT_VAL_98
#  endif
#  ifdef XLAT_VAL_99
  | XLAT_VAL_99
#  endif
#  ifdef XLAT_VAL_100
  | XLAT_VAL_100
#  endif
#  ifdef XLAT_VAL_101
  | XLAT_VAL_101
#  endif
#  ifdef XLAT_VAL_102
  | XLAT_VAL_102
#  endif
#  ifdef XLAT_VAL_103
  | XLAT_VAL_103
#  endif
#  ifdef XLAT_VAL_104
  | XLAT_VAL_104
#  endif
#  ifdef XLAT_VAL_105
  | XLAT_VAL_105
#  endif
#  ifdef XLAT_VAL_106
  | XLAT_VAL_106
#  endif
#  ifdef XLAT_VAL_107
  | XLAT_VAL_107
#  endif
#  ifdef XLAT_VAL_108
  | XLAT_VAL_108
#  endif
#  ifdef XLAT_VAL_109
  | XLAT_VAL_109
#  endif
#  ifdef XLAT_VAL_110
  | XLAT_VAL_110
#  endif
#  ifdef XLAT_VAL_111
  | XLAT_VAL_111
#  endif
#  ifdef XLAT_VAL_112
  | XLAT_VAL_112
#  endif
#  ifdef XLAT_VAL_113
  | XLAT_VAL_113
#  endif
#  ifdef XLAT_VAL_114
  | XLAT_VAL_114
#  endif
#  ifdef XLAT_VAL_115
  | XLAT_VAL_115
#  endif
#  ifdef XLAT_VAL_116
  | XLAT_VAL_116
#  endif
#  ifdef XLAT_VAL_117
  | XLAT_VAL_117
#  endif
#  ifdef XLAT_VAL_118
  | XLAT_VAL_118
#  endif
#  ifdef XLAT_VAL_119
  | XLAT_VAL_119
#  endif
#  ifdef XLAT_VAL_120
  | XLAT_VAL_120
#  endif
#  ifdef XLAT_VAL_121
  | XLAT_VAL_121
#  endif
#  ifdef XLAT_VAL_122
  | XLAT_VAL_122
#  endif
#  ifdef XLAT_VAL_123
  | XLAT_VAL_123
#  endif
#  ifdef XLAT_VAL_124
  | XLAT_VAL_124
#  endif
#  ifdef XLAT_VAL_125
  | XLAT_VAL_125
#  endif
#  ifdef XLAT_VAL_126
  | XLAT_VAL_126
#  endif
#  ifdef XLAT_VAL_127
  | XLAT_VAL_127
#  endif
#  ifdef XLAT_VAL_128
  | XLAT_VAL_128
#  endif
#  ifdef XLAT_VAL_129
  | XLAT_VAL_129
#  endif
#  ifdef XLAT_VAL_130
  | XLAT_VAL_130
#  endif
#  ifdef XLAT_VAL_131
  | XLAT_VAL_131
#  endif
#  ifdef XLAT_VAL_132
  | XLAT_VAL_132
#  endif
#  ifdef XLAT_VAL_133
  | XLAT_VAL_133
#  endif
#  ifdef XLAT_VAL_134
  | XLAT_VAL_134
#  endif
#  ifdef XLAT_VAL_135
  | XLAT_VAL_135
#  endif
#  ifdef XLAT_VAL_136
  | XLAT_VAL_136
#  endif
#  ifdef XLAT_VAL_137
  | XLAT_VAL_137
#  endif
#  ifdef XLAT_VAL_138
  | XLAT_VAL_138
#  endif
#  ifdef XLAT_VAL_139
  | XLAT_VAL_139
#  endif
#  ifdef XLAT_VAL_140
  | XLAT_VAL_140
#  endif
#  ifdef XLAT_VAL_141
  | XLAT_VAL_141
#  endif
#  ifdef XLAT_VAL_142
  | XLAT_VAL_142
#  endif
#  ifdef XLAT_VAL_143
  | XLAT_VAL_143
#  endif
#  ifdef XLAT_VAL_144
  | XLAT_VAL_144
#  endif
#  ifdef XLAT_VAL_145
  | XLAT_VAL_145
#  endif
#  ifdef XLAT_VAL_146
  | XLAT_VAL_146
#  endif
#  ifdef XLAT_VAL_147
  | XLAT_VAL_147
#  endif
#  ifdef XLAT_VAL_148
  | XLAT_VAL_148
#  endif
#  ifdef XLAT_VAL_149
  | XLAT_VAL_149
#  endif
#  ifdef XLAT_VAL_150
  | XLAT_VAL_150
#  endif
#  ifdef XLAT_VAL_151
  | XLAT_VAL_151
#  endif
#  ifdef XLAT_VAL_152
  | XLAT_VAL_152
#  endif
#  ifdef XLAT_VAL_153
  | XLAT_VAL_153
#  endif
#  ifdef XLAT_VAL_154
  | XLAT_VAL_154
#  endif
#  ifdef XLAT_VAL_155
  | XLAT_VAL_155
#  endif
#  ifdef XLAT_VAL_156
  | XLAT_VAL_156
#  endif
#  ifdef XLAT_VAL_157
  | XLAT_VAL_157
#  endif
#  ifdef XLAT_VAL_158
  | XLAT_VAL_158
#  endif
#  ifdef XLAT_VAL_159
  | XLAT_VAL_159
#  endif
#  ifdef XLAT_VAL_160
  | XLAT_VAL_160
#  endif
#  ifdef XLAT_VAL_161
  | XLAT_VAL_161
#  endif
#  ifdef XLAT_VAL_162
  | XLAT_VAL_162
#  endif
#  ifdef XLAT_VAL_163
  | XLAT_VAL_163
#  endif
#  ifdef XLAT_VAL_164
  | XLAT_VAL_164
#  endif
#  ifdef XLAT_VAL_165
  | XLAT_VAL_165
#  endif
#  ifdef XLAT_VAL_166
  | XLAT_VAL_166
#  endif
#  ifdef XLAT_VAL_167
  | XLAT_VAL_167
#  endif
#  ifdef XLAT_VAL_168
  | XLAT_VAL_168
#  endif
#  ifdef XLAT_VAL_169
  | XLAT_VAL_169
#  endif
#  ifdef XLAT_VAL_170
  | XLAT_VAL_170
#  endif
#  ifdef XLAT_VAL_171
  | XLAT_VAL_171
#  endif
#  ifdef XLAT_VAL_172
  | XLAT_VAL_172
#  endif
#  ifdef XLAT_VAL_173
  | XLAT_VAL_173
#  endif
#  ifdef XLAT_VAL_174
  | XLAT_VAL_174
#  endif
#  ifdef XLAT_VAL_175
  | XLAT_VAL_175
#  endif
#  ifdef XLAT_VAL_176
  | XLAT_VAL_176
#  endif
#  ifdef XLAT_VAL_177
  | XLAT_VAL_177
#  endif
#  ifdef XLAT_VAL_178
  | XLAT_VAL_178
#  endif
#  ifdef XLAT_VAL_179
  | XLAT_VAL_179
#  endif
#  ifdef XLAT_VAL_180
  | XLAT_VAL_180
#  endif
#  ifdef XLAT_VAL_181
  | XLAT_VAL_181
#  endif
#  ifdef XLAT_VAL_182
  | XLAT_VAL_182
#  endif
#  ifdef XLAT_VAL_183
  | XLAT_VAL_183
#  endif
#  ifdef XLAT_VAL_184
  | XLAT_VAL_184
#  endif
#  ifdef XLAT_VAL_185
  | XLAT_VAL_185
#  endif
#  ifdef XLAT_VAL_186
  | XLAT_VAL_186
#  endif
#  ifdef XLAT_VAL_187
  | XLAT_VAL_187
#  endif
#  ifdef XLAT_VAL_188
  | XLAT_VAL_188
#  endif
#  ifdef XLAT_VAL_189
  | XLAT_VAL_189
#  endif
#  ifdef XLAT_VAL_190
  | XLAT_VAL_190
#  endif
#  ifdef XLAT_VAL_191
  | XLAT_VAL_191
#  endif
#  ifdef XLAT_VAL_192
  | XLAT_VAL_192
#  endif
#  ifdef XLAT_VAL_193
  | XLAT_VAL_193
#  endif
#  ifdef XLAT_VAL_194
  | XLAT_VAL_194
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
#  ifdef XLAT_STR_22
  + sizeof(XLAT_STR_22)
#  endif
#  ifdef XLAT_STR_23
  + sizeof(XLAT_STR_23)
#  endif
#  ifdef XLAT_STR_24
  + sizeof(XLAT_STR_24)
#  endif
#  ifdef XLAT_STR_25
  + sizeof(XLAT_STR_25)
#  endif
#  ifdef XLAT_STR_26
  + sizeof(XLAT_STR_26)
#  endif
#  ifdef XLAT_STR_27
  + sizeof(XLAT_STR_27)
#  endif
#  ifdef XLAT_STR_28
  + sizeof(XLAT_STR_28)
#  endif
#  ifdef XLAT_STR_29
  + sizeof(XLAT_STR_29)
#  endif
#  ifdef XLAT_STR_30
  + sizeof(XLAT_STR_30)
#  endif
#  ifdef XLAT_STR_31
  + sizeof(XLAT_STR_31)
#  endif
#  ifdef XLAT_STR_32
  + sizeof(XLAT_STR_32)
#  endif
#  ifdef XLAT_STR_33
  + sizeof(XLAT_STR_33)
#  endif
#  ifdef XLAT_STR_34
  + sizeof(XLAT_STR_34)
#  endif
#  ifdef XLAT_STR_35
  + sizeof(XLAT_STR_35)
#  endif
#  ifdef XLAT_STR_36
  + sizeof(XLAT_STR_36)
#  endif
#  ifdef XLAT_STR_37
  + sizeof(XLAT_STR_37)
#  endif
#  ifdef XLAT_STR_38
  + sizeof(XLAT_STR_38)
#  endif
#  ifdef XLAT_STR_39
  + sizeof(XLAT_STR_39)
#  endif
#  ifdef XLAT_STR_40
  + sizeof(XLAT_STR_40)
#  endif
#  ifdef XLAT_STR_41
  + sizeof(XLAT_STR_41)
#  endif
#  ifdef XLAT_STR_42
  + sizeof(XLAT_STR_42)
#  endif
#  ifdef XLAT_STR_43
  + sizeof(XLAT_STR_43)
#  endif
#  ifdef XLAT_STR_44
  + sizeof(XLAT_STR_44)
#  endif
#  ifdef XLAT_STR_45
  + sizeof(XLAT_STR_45)
#  endif
#  ifdef XLAT_STR_46
  + sizeof(XLAT_STR_46)
#  endif
#  ifdef XLAT_STR_47
  + sizeof(XLAT_STR_47)
#  endif
#  ifdef XLAT_STR_48
  + sizeof(XLAT_STR_48)
#  endif
#  ifdef XLAT_STR_49
  + sizeof(XLAT_STR_49)
#  endif
#  ifdef XLAT_STR_50
  + sizeof(XLAT_STR_50)
#  endif
#  ifdef XLAT_STR_51
  + sizeof(XLAT_STR_51)
#  endif
#  ifdef XLAT_STR_52
  + sizeof(XLAT_STR_52)
#  endif
#  ifdef XLAT_STR_53
  + sizeof(XLAT_STR_53)
#  endif
#  ifdef XLAT_STR_54
  + sizeof(XLAT_STR_54)
#  endif
#  ifdef XLAT_STR_55
  + sizeof(XLAT_STR_55)
#  endif
#  ifdef XLAT_STR_56
  + sizeof(XLAT_STR_56)
#  endif
#  ifdef XLAT_STR_57
  + sizeof(XLAT_STR_57)
#  endif
#  ifdef XLAT_STR_58
  + sizeof(XLAT_STR_58)
#  endif
#  ifdef XLAT_STR_59
  + sizeof(XLAT_STR_59)
#  endif
#  ifdef XLAT_STR_60
  + sizeof(XLAT_STR_60)
#  endif
#  ifdef XLAT_STR_61
  + sizeof(XLAT_STR_61)
#  endif
#  ifdef XLAT_STR_62
  + sizeof(XLAT_STR_62)
#  endif
#  ifdef XLAT_STR_63
  + sizeof(XLAT_STR_63)
#  endif
#  ifdef XLAT_STR_64
  + sizeof(XLAT_STR_64)
#  endif
#  ifdef XLAT_STR_65
  + sizeof(XLAT_STR_65)
#  endif
#  ifdef XLAT_STR_66
  + sizeof(XLAT_STR_66)
#  endif
#  ifdef XLAT_STR_67
  + sizeof(XLAT_STR_67)
#  endif
#  ifdef XLAT_STR_68
  + sizeof(XLAT_STR_68)
#  endif
#  ifdef XLAT_STR_69
  + sizeof(XLAT_STR_69)
#  endif
#  ifdef XLAT_STR_70
  + sizeof(XLAT_STR_70)
#  endif
#  ifdef XLAT_STR_71
  + sizeof(XLAT_STR_71)
#  endif
#  ifdef XLAT_STR_72
  + sizeof(XLAT_STR_72)
#  endif
#  ifdef XLAT_STR_73
  + sizeof(XLAT_STR_73)
#  endif
#  ifdef XLAT_STR_74
  + sizeof(XLAT_STR_74)
#  endif
#  ifdef XLAT_STR_75
  + sizeof(XLAT_STR_75)
#  endif
#  ifdef XLAT_STR_76
  + sizeof(XLAT_STR_76)
#  endif
#  ifdef XLAT_STR_77
  + sizeof(XLAT_STR_77)
#  endif
#  ifdef XLAT_STR_78
  + sizeof(XLAT_STR_78)
#  endif
#  ifdef XLAT_STR_79
  + sizeof(XLAT_STR_79)
#  endif
#  ifdef XLAT_STR_80
  + sizeof(XLAT_STR_80)
#  endif
#  ifdef XLAT_STR_81
  + sizeof(XLAT_STR_81)
#  endif
#  ifdef XLAT_STR_82
  + sizeof(XLAT_STR_82)
#  endif
#  ifdef XLAT_STR_83
  + sizeof(XLAT_STR_83)
#  endif
#  ifdef XLAT_STR_84
  + sizeof(XLAT_STR_84)
#  endif
#  ifdef XLAT_STR_85
  + sizeof(XLAT_STR_85)
#  endif
#  ifdef XLAT_STR_86
  + sizeof(XLAT_STR_86)
#  endif
#  ifdef XLAT_STR_87
  + sizeof(XLAT_STR_87)
#  endif
#  ifdef XLAT_STR_88
  + sizeof(XLAT_STR_88)
#  endif
#  ifdef XLAT_STR_89
  + sizeof(XLAT_STR_89)
#  endif
#  ifdef XLAT_STR_90
  + sizeof(XLAT_STR_90)
#  endif
#  ifdef XLAT_STR_91
  + sizeof(XLAT_STR_91)
#  endif
#  ifdef XLAT_STR_92
  + sizeof(XLAT_STR_92)
#  endif
#  ifdef XLAT_STR_93
  + sizeof(XLAT_STR_93)
#  endif
#  ifdef XLAT_STR_94
  + sizeof(XLAT_STR_94)
#  endif
#  ifdef XLAT_STR_95
  + sizeof(XLAT_STR_95)
#  endif
#  ifdef XLAT_STR_96
  + sizeof(XLAT_STR_96)
#  endif
#  ifdef XLAT_STR_97
  + sizeof(XLAT_STR_97)
#  endif
#  ifdef XLAT_STR_98
  + sizeof(XLAT_STR_98)
#  endif
#  ifdef XLAT_STR_99
  + sizeof(XLAT_STR_99)
#  endif
#  ifdef XLAT_STR_100
  + sizeof(XLAT_STR_100)
#  endif
#  ifdef XLAT_STR_101
  + sizeof(XLAT_STR_101)
#  endif
#  ifdef XLAT_STR_102
  + sizeof(XLAT_STR_102)
#  endif
#  ifdef XLAT_STR_103
  + sizeof(XLAT_STR_103)
#  endif
#  ifdef XLAT_STR_104
  + sizeof(XLAT_STR_104)
#  endif
#  ifdef XLAT_STR_105
  + sizeof(XLAT_STR_105)
#  endif
#  ifdef XLAT_STR_106
  + sizeof(XLAT_STR_106)
#  endif
#  ifdef XLAT_STR_107
  + sizeof(XLAT_STR_107)
#  endif
#  ifdef XLAT_STR_108
  + sizeof(XLAT_STR_108)
#  endif
#  ifdef XLAT_STR_109
  + sizeof(XLAT_STR_109)
#  endif
#  ifdef XLAT_STR_110
  + sizeof(XLAT_STR_110)
#  endif
#  ifdef XLAT_STR_111
  + sizeof(XLAT_STR_111)
#  endif
#  ifdef XLAT_STR_112
  + sizeof(XLAT_STR_112)
#  endif
#  ifdef XLAT_STR_113
  + sizeof(XLAT_STR_113)
#  endif
#  ifdef XLAT_STR_114
  + sizeof(XLAT_STR_114)
#  endif
#  ifdef XLAT_STR_115
  + sizeof(XLAT_STR_115)
#  endif
#  ifdef XLAT_STR_116
  + sizeof(XLAT_STR_116)
#  endif
#  ifdef XLAT_STR_117
  + sizeof(XLAT_STR_117)
#  endif
#  ifdef XLAT_STR_118
  + sizeof(XLAT_STR_118)
#  endif
#  ifdef XLAT_STR_119
  + sizeof(XLAT_STR_119)
#  endif
#  ifdef XLAT_STR_120
  + sizeof(XLAT_STR_120)
#  endif
#  ifdef XLAT_STR_121
  + sizeof(XLAT_STR_121)
#  endif
#  ifdef XLAT_STR_122
  + sizeof(XLAT_STR_122)
#  endif
#  ifdef XLAT_STR_123
  + sizeof(XLAT_STR_123)
#  endif
#  ifdef XLAT_STR_124
  + sizeof(XLAT_STR_124)
#  endif
#  ifdef XLAT_STR_125
  + sizeof(XLAT_STR_125)
#  endif
#  ifdef XLAT_STR_126
  + sizeof(XLAT_STR_126)
#  endif
#  ifdef XLAT_STR_127
  + sizeof(XLAT_STR_127)
#  endif
#  ifdef XLAT_STR_128
  + sizeof(XLAT_STR_128)
#  endif
#  ifdef XLAT_STR_129
  + sizeof(XLAT_STR_129)
#  endif
#  ifdef XLAT_STR_130
  + sizeof(XLAT_STR_130)
#  endif
#  ifdef XLAT_STR_131
  + sizeof(XLAT_STR_131)
#  endif
#  ifdef XLAT_STR_132
  + sizeof(XLAT_STR_132)
#  endif
#  ifdef XLAT_STR_133
  + sizeof(XLAT_STR_133)
#  endif
#  ifdef XLAT_STR_134
  + sizeof(XLAT_STR_134)
#  endif
#  ifdef XLAT_STR_135
  + sizeof(XLAT_STR_135)
#  endif
#  ifdef XLAT_STR_136
  + sizeof(XLAT_STR_136)
#  endif
#  ifdef XLAT_STR_137
  + sizeof(XLAT_STR_137)
#  endif
#  ifdef XLAT_STR_138
  + sizeof(XLAT_STR_138)
#  endif
#  ifdef XLAT_STR_139
  + sizeof(XLAT_STR_139)
#  endif
#  ifdef XLAT_STR_140
  + sizeof(XLAT_STR_140)
#  endif
#  ifdef XLAT_STR_141
  + sizeof(XLAT_STR_141)
#  endif
#  ifdef XLAT_STR_142
  + sizeof(XLAT_STR_142)
#  endif
#  ifdef XLAT_STR_143
  + sizeof(XLAT_STR_143)
#  endif
#  ifdef XLAT_STR_144
  + sizeof(XLAT_STR_144)
#  endif
#  ifdef XLAT_STR_145
  + sizeof(XLAT_STR_145)
#  endif
#  ifdef XLAT_STR_146
  + sizeof(XLAT_STR_146)
#  endif
#  ifdef XLAT_STR_147
  + sizeof(XLAT_STR_147)
#  endif
#  ifdef XLAT_STR_148
  + sizeof(XLAT_STR_148)
#  endif
#  ifdef XLAT_STR_149
  + sizeof(XLAT_STR_149)
#  endif
#  ifdef XLAT_STR_150
  + sizeof(XLAT_STR_150)
#  endif
#  ifdef XLAT_STR_151
  + sizeof(XLAT_STR_151)
#  endif
#  ifdef XLAT_STR_152
  + sizeof(XLAT_STR_152)
#  endif
#  ifdef XLAT_STR_153
  + sizeof(XLAT_STR_153)
#  endif
#  ifdef XLAT_STR_154
  + sizeof(XLAT_STR_154)
#  endif
#  ifdef XLAT_STR_155
  + sizeof(XLAT_STR_155)
#  endif
#  ifdef XLAT_STR_156
  + sizeof(XLAT_STR_156)
#  endif
#  ifdef XLAT_STR_157
  + sizeof(XLAT_STR_157)
#  endif
#  ifdef XLAT_STR_158
  + sizeof(XLAT_STR_158)
#  endif
#  ifdef XLAT_STR_159
  + sizeof(XLAT_STR_159)
#  endif
#  ifdef XLAT_STR_160
  + sizeof(XLAT_STR_160)
#  endif
#  ifdef XLAT_STR_161
  + sizeof(XLAT_STR_161)
#  endif
#  ifdef XLAT_STR_162
  + sizeof(XLAT_STR_162)
#  endif
#  ifdef XLAT_STR_163
  + sizeof(XLAT_STR_163)
#  endif
#  ifdef XLAT_STR_164
  + sizeof(XLAT_STR_164)
#  endif
#  ifdef XLAT_STR_165
  + sizeof(XLAT_STR_165)
#  endif
#  ifdef XLAT_STR_166
  + sizeof(XLAT_STR_166)
#  endif
#  ifdef XLAT_STR_167
  + sizeof(XLAT_STR_167)
#  endif
#  ifdef XLAT_STR_168
  + sizeof(XLAT_STR_168)
#  endif
#  ifdef XLAT_STR_169
  + sizeof(XLAT_STR_169)
#  endif
#  ifdef XLAT_STR_170
  + sizeof(XLAT_STR_170)
#  endif
#  ifdef XLAT_STR_171
  + sizeof(XLAT_STR_171)
#  endif
#  ifdef XLAT_STR_172
  + sizeof(XLAT_STR_172)
#  endif
#  ifdef XLAT_STR_173
  + sizeof(XLAT_STR_173)
#  endif
#  ifdef XLAT_STR_174
  + sizeof(XLAT_STR_174)
#  endif
#  ifdef XLAT_STR_175
  + sizeof(XLAT_STR_175)
#  endif
#  ifdef XLAT_STR_176
  + sizeof(XLAT_STR_176)
#  endif
#  ifdef XLAT_STR_177
  + sizeof(XLAT_STR_177)
#  endif
#  ifdef XLAT_STR_178
  + sizeof(XLAT_STR_178)
#  endif
#  ifdef XLAT_STR_179
  + sizeof(XLAT_STR_179)
#  endif
#  ifdef XLAT_STR_180
  + sizeof(XLAT_STR_180)
#  endif
#  ifdef XLAT_STR_181
  + sizeof(XLAT_STR_181)
#  endif
#  ifdef XLAT_STR_182
  + sizeof(XLAT_STR_182)
#  endif
#  ifdef XLAT_STR_183
  + sizeof(XLAT_STR_183)
#  endif
#  ifdef XLAT_STR_184
  + sizeof(XLAT_STR_184)
#  endif
#  ifdef XLAT_STR_185
  + sizeof(XLAT_STR_185)
#  endif
#  ifdef XLAT_STR_186
  + sizeof(XLAT_STR_186)
#  endif
#  ifdef XLAT_STR_187
  + sizeof(XLAT_STR_187)
#  endif
#  ifdef XLAT_STR_188
  + sizeof(XLAT_STR_188)
#  endif
#  ifdef XLAT_STR_189
  + sizeof(XLAT_STR_189)
#  endif
#  ifdef XLAT_STR_190
  + sizeof(XLAT_STR_190)
#  endif
#  ifdef XLAT_STR_191
  + sizeof(XLAT_STR_191)
#  endif
#  ifdef XLAT_STR_192
  + sizeof(XLAT_STR_192)
#  endif
#  ifdef XLAT_STR_193
  + sizeof(XLAT_STR_193)
#  endif
#  ifdef XLAT_STR_194
  + sizeof(XLAT_STR_194)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
#  undef XLAT_STR_22
#  undef XLAT_VAL_22
#  undef XLAT_STR_23
#  undef XLAT_VAL_23
#  undef XLAT_STR_24
#  undef XLAT_VAL_24
#  undef XLAT_STR_25
#  undef XLAT_VAL_25
#  undef XLAT_STR_26
#  undef XLAT_VAL_26
#  undef XLAT_STR_27
#  undef XLAT_VAL_27
#  undef XLAT_STR_28
#  undef XLAT_VAL_28
#  undef XLAT_STR_29
#  undef XLAT_VAL_29
#  undef XLAT_STR_30
#  undef XLAT_VAL_30
#  undef XLAT_STR_31
#  undef XLAT_VAL_31
#  undef XLAT_STR_32
#  undef XLAT_VAL_32
#  undef XLAT_STR_33
#  undef XLAT_VAL_33
#  undef XLAT_STR_34
#  undef XLAT_VAL_34
#  undef XLAT_STR_35
#  undef XLAT_VAL_35
#  undef XLAT_STR_36
#  undef XLAT_VAL_36
#  undef XLAT_STR_37
#  undef XLAT_VAL_37
#  undef XLAT_STR_38
#  undef XLAT_VAL_38
#  undef XLAT_STR_39
#  undef XLAT_VAL_39
#  undef XLAT_STR_40
#  undef XLAT_VAL_40
#  undef XLAT_STR_41
#  undef XLAT_VAL_41
#  undef XLAT_STR_42
#  undef XLAT_VAL_42
#  undef XLAT_STR_43
#  undef XLAT_VAL_43
#  undef XLAT_STR_44
#  undef XLAT_VAL_44
#  undef XLAT_STR_45
#  undef XLAT_VAL_45
#  undef XLAT_STR_46
#  undef XLAT_VAL_46
#  undef XLAT_STR_47
#  undef XLAT_VAL_47
#  undef XLAT_STR_48
#  undef XLAT_VAL_48
#  undef XLAT_STR_49
#  undef XLAT_VAL_49
#  undef XLAT_STR_50
#  undef XLAT_VAL_50
#  undef XLAT_STR_51
#  undef XLAT_VAL_51
#  undef XLAT_STR_52
#  undef XLAT_VAL_52
#  undef XLAT_STR_53
#  undef XLAT_VAL_53
#  undef XLAT_STR_54
#  undef XLAT_VAL_54
#  undef XLAT_STR_55
#  undef XLAT_VAL_55
#  undef XLAT_STR_56
#  undef XLAT_VAL_56
#  undef XLAT_STR_57
#  undef XLAT_VAL_57
#  undef XLAT_STR_58
#  undef XLAT_VAL_58
#  undef XLAT_STR_59
#  undef XLAT_VAL_59
#  undef XLAT_STR_60
#  undef XLAT_VAL_60
#  undef XLAT_STR_61
#  undef XLAT_VAL_61
#  undef XLAT_STR_62
#  undef XLAT_VAL_62
#  undef XLAT_STR_63
#  undef XLAT_VAL_63
#  undef XLAT_STR_64
#  undef XLAT_VAL_64
#  undef XLAT_STR_65
#  undef XLAT_VAL_65
#  undef XLAT_STR_66
#  undef XLAT_VAL_66
#  undef XLAT_STR_67
#  undef XLAT_VAL_67
#  undef XLAT_STR_68
#  undef XLAT_VAL_68
#  undef XLAT_STR_69
#  undef XLAT_VAL_69
#  undef XLAT_STR_70
#  undef XLAT_VAL_70
#  undef XLAT_STR_71
#  undef XLAT_VAL_71
#  undef XLAT_STR_72
#  undef XLAT_VAL_72
#  undef XLAT_STR_73
#  undef XLAT_VAL_73
#  undef XLAT_STR_74
#  undef XLAT_VAL_74
#  undef XLAT_STR_75
#  undef XLAT_VAL_75
#  undef XLAT_STR_76
#  undef XLAT_VAL_76
#  undef XLAT_STR_77
#  undef XLAT_VAL_77
#  undef XLAT_STR_78
#  undef XLAT_VAL_78
#  undef XLAT_STR_79
#  undef XLAT_VAL_79
#  undef XLAT_STR_80
#  undef XLAT_VAL_80
#  undef XLAT_STR_81
#  undef XLAT_VAL_81
#  undef XLAT_STR_82
#  undef XLAT_VAL_82
#  undef XLAT_STR_83
#  undef XLAT_VAL_83
#  undef XLAT_STR_84
#  undef XLAT_VAL_84
#  undef XLAT_STR_85
#  undef XLAT_VAL_85
#  undef XLAT_STR_86
#  undef XLAT_VAL_86
#  undef XLAT_STR_87
#  undef XLAT_VAL_87
#  undef XLAT_STR_88
#  undef XLAT_VAL_88
#  undef XLAT_STR_89
#  undef XLAT_VAL_89
#  undef XLAT_STR_90
#  undef XLAT_VAL_90
#  undef XLAT_STR_91
#  undef XLAT_VAL_91
#  undef XLAT_STR_92
#  undef XLAT_VAL_92
#  undef XLAT_STR_93
#  undef XLAT_VAL_93
#  undef XLAT_STR_94
#  undef XLAT_VAL_94
#  undef XLAT_STR_95
#  undef XLAT_VAL_95
#  undef XLAT_STR_96
#  undef XLAT_VAL_96
#  undef XLAT_STR_97
#  undef XLAT_VAL_97
#  undef XLAT_STR_98
#  undef XLAT_VAL_98
#  undef XLAT_STR_99
#  undef XLAT_VAL_99
#  undef XLAT_STR_100
#  undef XLAT_VAL_100
#  undef XLAT_STR_101
#  undef XLAT_VAL_101
#  undef XLAT_STR_102
#  undef XLAT_VAL_102
#  undef XLAT_STR_103
#  undef XLAT_VAL_103
#  undef XLAT_STR_104
#  undef XLAT_VAL_104
#  undef XLAT_STR_105
#  undef XLAT_VAL_105
#  undef XLAT_STR_106
#  undef XLAT_VAL_106
#  undef XLAT_STR_107
#  undef XLAT_VAL_107
#  undef XLAT_STR_108
#  undef XLAT_VAL_108
#  undef XLAT_STR_109
#  undef XLAT_VAL_109
#  undef XLAT_STR_110
#  undef XLAT_VAL_110
#  undef XLAT_STR_111
#  undef XLAT_VAL_111
#  undef XLAT_STR_112
#  undef XLAT_VAL_112
#  undef XLAT_STR_113
#  undef XLAT_VAL_113
#  undef XLAT_STR_114
#  undef XLAT_VAL_114
#  undef XLAT_STR_115
#  undef XLAT_VAL_115
#  undef XLAT_STR_116
#  undef XLAT_VAL_116
#  undef XLAT_STR_117
#  undef XLAT_VAL_117
#  undef XLAT_STR_118
#  undef XLAT_VAL_118
#  undef XLAT_STR_119
#  undef XLAT_VAL_119
#  undef XLAT_STR_120
#  undef XLAT_VAL_120
#  undef XLAT_STR_121
#  undef XLAT_VAL_121
#  undef XLAT_STR_122
#  undef XLAT_VAL_122
#  undef XLAT_STR_123
#  undef XLAT_VAL_123
#  undef XLAT_STR_124
#  undef XLAT_VAL_124
#  undef XLAT_STR_125
#  undef XLAT_VAL_125
#  undef XLAT_STR_126
#  undef XLAT_VAL_126
#  undef XLAT_STR_127
#  undef XLAT_VAL_127
#  undef XLAT_STR_128
#  undef XLAT_VAL_128
#  undef XLAT_STR_129
#  undef XLAT_VAL_129
#  undef XLAT_STR_130
#  undef XLAT_VAL_130
#  undef XLAT_STR_131
#  undef XLAT_VAL_131
#  undef XLAT_STR_132
#  undef XLAT_VAL_132
#  undef XLAT_STR_133
#  undef XLAT_VAL_133
#  undef XLAT_STR_134
#  undef XLAT_VAL_134
#  undef XLAT_STR_135
#  undef XLAT_VAL_135
#  undef XLAT_STR_136
#  undef XLAT_VAL_136
#  undef XLAT_STR_137
#  undef XLAT_VAL_137
#  undef XLAT_STR_138
#  undef XLAT_VAL_138
#  undef XLAT_STR_139
#  undef XLAT_VAL_139
#  undef XLAT_STR_140
#  undef XLAT_VAL_140
#  undef XLAT_STR_141
#  undef XLAT_VAL_141
#  undef XLAT_STR_142
#  undef XLAT_VAL_142
#  undef XLAT_STR_143
#  undef XLAT_VAL_143
#  undef XLAT_STR_144
#  undef XLAT_VAL_144
#  undef XLAT_STR_145
#  undef XLAT_VAL_145
#  undef XLAT_STR_146
#  undef XLAT_VAL_146
#  undef XLAT_STR_147
#  undef XLAT_VAL_147
#  undef XLAT_STR_148
#  undef XLAT_VAL_148
#  undef XLAT_STR_149
#  undef XLAT_VAL_149
#  undef XLAT_STR_150
#  undef XLAT_VAL_150
#  undef XLAT_STR_151
#  undef XLAT_VAL_151
#  undef XLAT_STR_152
#  undef XLAT_VAL_152
#  undef XLAT_STR_153
#  undef XLAT_VAL_153
#  undef XLAT_STR_154
#  undef XLAT_VAL_154
#  undef XLAT_STR_155
#  undef XLAT_VAL_155
#  undef XLAT_STR_156
#  undef XLAT_VAL_156
#  undef XLAT_STR_157
#  undef XLAT_VAL_157
#  undef XLAT_STR_158
#  undef XLAT_VAL_158
#  undef XLAT_STR_159
#  undef XLAT_VAL_159
#  undef XLAT_STR_160
#  undef XLAT_VAL_160
#  undef XLAT_STR_161
#  undef XLAT_VAL_161
#  undef XLAT_STR_162
#  undef XLAT_VAL_162
#  undef XLAT_STR_163
#  undef XLAT_VAL_163
#  undef XLAT_STR_164
#  undef XLAT_VAL_164
#  undef XLAT_STR_165
#  undef XLAT_VAL_165
#  undef XLAT_STR_166
#  undef XLAT_VAL_166
#  undef XLAT_STR_167
#  undef XLAT_VAL_167
#  undef XLAT_STR_168
#  undef XLAT_VAL_168
#  undef XLAT_STR_169
#  undef XLAT_VAL_169
#  undef XLAT_STR_170
#  undef XLAT_VAL_170
#  undef XLAT_STR_171
#  undef XLAT_VAL_171
#  undef XLAT_STR_172
#  undef XLAT_VAL_172
#  undef XLAT_STR_173
#  undef XLAT_VAL_173
#  undef XLAT_STR_174
#  undef XLAT_VAL_174
#  undef XLAT_STR_175
#  undef XLAT_VAL_175
#  undef XLAT_STR_176
#  undef XLAT_VAL_176
#  undef XLAT_STR_177
#  undef XLAT_VAL_177
#  undef XLAT_STR_178
#  undef XLAT_VAL_178
#  undef XLAT_STR_179
#  undef XLAT_VAL_179
#  undef XLAT_STR_180
#  undef XLAT_VAL_180
#  undef XLAT_STR_181
#  undef XLAT_VAL_181
#  undef XLAT_STR_182
#  undef XLAT_VAL_182
#  undef XLAT_STR_183
#  undef XLAT_VAL_183
#  undef XLAT_STR_184
#  undef XLAT_VAL_184
#  undef XLAT_STR_185
#  undef XLAT_VAL_185
#  undef XLAT_STR_186
#  undef XLAT_VAL_186
#  undef XLAT_STR_187
#  undef XLAT_VAL_187
#  undef XLAT_STR_188
#  undef XLAT_VAL_188
#  undef XLAT_STR_189
#  undef XLAT_VAL_189
#  undef XLAT_STR_190
#  undef XLAT_VAL_190
#  undef XLAT_STR_191
#  undef XLAT_VAL_191
#  undef XLAT_STR_192
#  undef XLAT_VAL_192
#  undef XLAT_STR_193
#  undef XLAT_VAL_193
#  undef XLAT_STR_194
#  undef XLAT_VAL_194
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
