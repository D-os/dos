/* Generated by ./src/xlat/gen.sh from ./src/xlat/open_mode_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifndef IN_MPERS

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data open_mode_flags_xdata[] = {
 XLAT(O_CREAT),
 #define XLAT_VAL_0 ((unsigned) (O_CREAT))
 #define XLAT_STR_0 STRINGIFY(O_CREAT)
 XLAT(O_EXCL),
 #define XLAT_VAL_1 ((unsigned) (O_EXCL))
 #define XLAT_STR_1 STRINGIFY(O_EXCL)
 XLAT(O_NOCTTY),
 #define XLAT_VAL_2 ((unsigned) (O_NOCTTY))
 #define XLAT_STR_2 STRINGIFY(O_NOCTTY)
 XLAT(O_TRUNC),
 #define XLAT_VAL_3 ((unsigned) (O_TRUNC))
 #define XLAT_STR_3 STRINGIFY(O_TRUNC)
 XLAT(O_APPEND),
 #define XLAT_VAL_4 ((unsigned) (O_APPEND))
 #define XLAT_STR_4 STRINGIFY(O_APPEND)
 XLAT(O_NONBLOCK),
 #define XLAT_VAL_5 ((unsigned) (O_NONBLOCK))
 #define XLAT_STR_5 STRINGIFY(O_NONBLOCK)

 XLAT(O_SYNC),
 #define XLAT_VAL_6 ((unsigned) (O_SYNC))
 #define XLAT_STR_6 STRINGIFY(O_SYNC)
 XLAT(__O_SYNC),
 #define XLAT_VAL_7 ((unsigned) (__O_SYNC))
 #define XLAT_STR_7 STRINGIFY(__O_SYNC)
 XLAT(O_DSYNC),
 #define XLAT_VAL_8 ((unsigned) (O_DSYNC))
 #define XLAT_STR_8 STRINGIFY(O_DSYNC)
 XLAT(O_DIRECT),
 #define XLAT_VAL_9 ((unsigned) (O_DIRECT))
 #define XLAT_STR_9 STRINGIFY(O_DIRECT)
 XLAT(O_LARGEFILE),
 #define XLAT_VAL_10 ((unsigned) (O_LARGEFILE))
 #define XLAT_STR_10 STRINGIFY(O_LARGEFILE)
 XLAT(O_NOFOLLOW),
 #define XLAT_VAL_11 ((unsigned) (O_NOFOLLOW))
 #define XLAT_STR_11 STRINGIFY(O_NOFOLLOW)
 XLAT(O_NOATIME),
 #define XLAT_VAL_12 ((unsigned) (O_NOATIME))
 #define XLAT_STR_12 STRINGIFY(O_NOATIME)
 XLAT(O_CLOEXEC),
 #define XLAT_VAL_13 ((unsigned) (O_CLOEXEC))
 #define XLAT_STR_13 STRINGIFY(O_CLOEXEC)
 XLAT(O_PATH),
 #define XLAT_VAL_14 ((unsigned) (O_PATH))
 #define XLAT_STR_14 STRINGIFY(O_PATH)

 XLAT(O_TMPFILE),
 #define XLAT_VAL_15 ((unsigned) (O_TMPFILE))
 #define XLAT_STR_15 STRINGIFY(O_TMPFILE)
 XLAT(__O_TMPFILE),
 #define XLAT_VAL_16 ((unsigned) (__O_TMPFILE))
 #define XLAT_STR_16 STRINGIFY(__O_TMPFILE)
 XLAT(O_DIRECTORY),
 #define XLAT_VAL_17 ((unsigned) (O_DIRECTORY))
 #define XLAT_STR_17 STRINGIFY(O_DIRECTORY)
 XLAT(FASYNC),
 #define XLAT_VAL_18 ((unsigned) (FASYNC))
 #define XLAT_STR_18 STRINGIFY(FASYNC)
};
const struct xlat open_mode_flags[1] = { {
 .data = open_mode_flags_xdata,
 .size = ARRAY_SIZE(open_mode_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
