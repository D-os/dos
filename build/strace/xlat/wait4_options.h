/* Generated by ./src/xlat/gen.sh from ./src/xlat/wait4_options.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#ifndef WSTOPPED
#endif
#if defined(__WCLONE) || (defined(HAVE_DECL___WCLONE) && HAVE_DECL___WCLONE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((__WCLONE) == (0x80000000), "__WCLONE != 0x80000000");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define __WCLONE 0x80000000
#endif
#if defined(__WALL) || (defined(HAVE_DECL___WALL) && HAVE_DECL___WALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((__WALL) == (0x40000000), "__WALL != 0x40000000");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define __WALL 0x40000000
#endif
#if defined(__WNOTHREAD) || (defined(HAVE_DECL___WNOTHREAD) && HAVE_DECL___WNOTHREAD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((__WNOTHREAD) == (0x20000000), "__WNOTHREAD != 0x20000000");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define __WNOTHREAD 0x20000000
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat wait4_options in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data wait4_options_xdata[] = {
#if defined(WNOHANG) || (defined(HAVE_DECL_WNOHANG) && HAVE_DECL_WNOHANG)
  XLAT(WNOHANG),
 #define XLAT_VAL_0 ((unsigned) (WNOHANG))
 #define XLAT_STR_0 STRINGIFY(WNOHANG)
#endif
#ifndef WSTOPPED
#if defined(WUNTRACED) || (defined(HAVE_DECL_WUNTRACED) && HAVE_DECL_WUNTRACED)
  XLAT(WUNTRACED),
 #define XLAT_VAL_1 ((unsigned) (WUNTRACED))
 #define XLAT_STR_1 STRINGIFY(WUNTRACED)
#endif
#endif
#if defined(WEXITED) || (defined(HAVE_DECL_WEXITED) && HAVE_DECL_WEXITED)
  XLAT(WEXITED),
 #define XLAT_VAL_2 ((unsigned) (WEXITED))
 #define XLAT_STR_2 STRINGIFY(WEXITED)
#endif
#if defined(WTRAPPED) || (defined(HAVE_DECL_WTRAPPED) && HAVE_DECL_WTRAPPED)
  XLAT(WTRAPPED),
 #define XLAT_VAL_3 ((unsigned) (WTRAPPED))
 #define XLAT_STR_3 STRINGIFY(WTRAPPED)
#endif
#if defined(WSTOPPED) || (defined(HAVE_DECL_WSTOPPED) && HAVE_DECL_WSTOPPED)
  XLAT(WSTOPPED),
 #define XLAT_VAL_4 ((unsigned) (WSTOPPED))
 #define XLAT_STR_4 STRINGIFY(WSTOPPED)
#endif
#if defined(WCONTINUED) || (defined(HAVE_DECL_WCONTINUED) && HAVE_DECL_WCONTINUED)
  XLAT(WCONTINUED),
 #define XLAT_VAL_5 ((unsigned) (WCONTINUED))
 #define XLAT_STR_5 STRINGIFY(WCONTINUED)
#endif
#if defined(WNOWAIT) || (defined(HAVE_DECL_WNOWAIT) && HAVE_DECL_WNOWAIT)
  XLAT(WNOWAIT),
 #define XLAT_VAL_6 ((unsigned) (WNOWAIT))
 #define XLAT_STR_6 STRINGIFY(WNOWAIT)
#endif
 XLAT(__WCLONE),
 #define XLAT_VAL_7 ((unsigned) (__WCLONE))
 #define XLAT_STR_7 STRINGIFY(__WCLONE)
 XLAT(__WALL),
 #define XLAT_VAL_8 ((unsigned) (__WALL))
 #define XLAT_STR_8 STRINGIFY(__WALL)
 XLAT(__WNOTHREAD),
 #define XLAT_VAL_9 ((unsigned) (__WNOTHREAD))
 #define XLAT_STR_9 STRINGIFY(__WNOTHREAD)
};
static
const struct xlat wait4_options[1] = { {
 .data = wait4_options_xdata,
 .size = ARRAY_SIZE(wait4_options_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
