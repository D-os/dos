/* Generated by ./src/xlat/gen.sh from ./src/xlat/fib_rule_actions.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat fib_rule_actions in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data fib_rule_actions_xdata[] = {
 [FR_ACT_UNSPEC] = XLAT(FR_ACT_UNSPEC),
 #define XLAT_VAL_0 ((unsigned) (FR_ACT_UNSPEC))
 #define XLAT_STR_0 STRINGIFY(FR_ACT_UNSPEC)
 [FR_ACT_TO_TBL] = XLAT(FR_ACT_TO_TBL),
 #define XLAT_VAL_1 ((unsigned) (FR_ACT_TO_TBL))
 #define XLAT_STR_1 STRINGIFY(FR_ACT_TO_TBL)
 [FR_ACT_GOTO] = XLAT(FR_ACT_GOTO),
 #define XLAT_VAL_2 ((unsigned) (FR_ACT_GOTO))
 #define XLAT_STR_2 STRINGIFY(FR_ACT_GOTO)
 [FR_ACT_NOP] = XLAT(FR_ACT_NOP),
 #define XLAT_VAL_3 ((unsigned) (FR_ACT_NOP))
 #define XLAT_STR_3 STRINGIFY(FR_ACT_NOP)
 [FR_ACT_RES3] = XLAT(FR_ACT_RES3),
 #define XLAT_VAL_4 ((unsigned) (FR_ACT_RES3))
 #define XLAT_STR_4 STRINGIFY(FR_ACT_RES3)
 [FR_ACT_RES4] = XLAT(FR_ACT_RES4),
 #define XLAT_VAL_5 ((unsigned) (FR_ACT_RES4))
 #define XLAT_STR_5 STRINGIFY(FR_ACT_RES4)
 [FR_ACT_BLACKHOLE] = XLAT(FR_ACT_BLACKHOLE),
 #define XLAT_VAL_6 ((unsigned) (FR_ACT_BLACKHOLE))
 #define XLAT_STR_6 STRINGIFY(FR_ACT_BLACKHOLE)
 [FR_ACT_UNREACHABLE] = XLAT(FR_ACT_UNREACHABLE),
 #define XLAT_VAL_7 ((unsigned) (FR_ACT_UNREACHABLE))
 #define XLAT_STR_7 STRINGIFY(FR_ACT_UNREACHABLE)
 [FR_ACT_PROHIBIT] = XLAT(FR_ACT_PROHIBIT),
 #define XLAT_VAL_8 ((unsigned) (FR_ACT_PROHIBIT))
 #define XLAT_STR_8 STRINGIFY(FR_ACT_PROHIBIT)
};
static
const struct xlat fib_rule_actions[1] = { {
 .data = fib_rule_actions_xdata,
 .size = ARRAY_SIZE(fib_rule_actions_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
