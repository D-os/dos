/* Generated by ./src/xlat/gen.sh from ./src/xlat/counter_ioctl_component_types.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((COUNTER_COMPONENT_NONE) == (0), "COUNTER_COMPONENT_NONE != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((COUNTER_COMPONENT_SIGNAL) == (1), "COUNTER_COMPONENT_SIGNAL != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((COUNTER_COMPONENT_COUNT) == (2), "COUNTER_COMPONENT_COUNT != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((COUNTER_COMPONENT_FUNCTION) == (3), "COUNTER_COMPONENT_FUNCTION != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((COUNTER_COMPONENT_SYNAPSE_ACTION) == (4), "COUNTER_COMPONENT_SYNAPSE_ACTION != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((COUNTER_COMPONENT_EXTENSION) == (5), "COUNTER_COMPONENT_EXTENSION != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat counter_ioctl_component_types in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data counter_ioctl_component_types_xdata[] = {
 [COUNTER_COMPONENT_NONE] = XLAT(COUNTER_COMPONENT_NONE),
 #define XLAT_VAL_0 ((unsigned) (COUNTER_COMPONENT_NONE))
 #define XLAT_STR_0 STRINGIFY(COUNTER_COMPONENT_NONE)
 [COUNTER_COMPONENT_SIGNAL] = XLAT(COUNTER_COMPONENT_SIGNAL),
 #define XLAT_VAL_1 ((unsigned) (COUNTER_COMPONENT_SIGNAL))
 #define XLAT_STR_1 STRINGIFY(COUNTER_COMPONENT_SIGNAL)
 [COUNTER_COMPONENT_COUNT] = XLAT(COUNTER_COMPONENT_COUNT),
 #define XLAT_VAL_2 ((unsigned) (COUNTER_COMPONENT_COUNT))
 #define XLAT_STR_2 STRINGIFY(COUNTER_COMPONENT_COUNT)
 [COUNTER_COMPONENT_FUNCTION] = XLAT(COUNTER_COMPONENT_FUNCTION),
 #define XLAT_VAL_3 ((unsigned) (COUNTER_COMPONENT_FUNCTION))
 #define XLAT_STR_3 STRINGIFY(COUNTER_COMPONENT_FUNCTION)
 [COUNTER_COMPONENT_SYNAPSE_ACTION] = XLAT(COUNTER_COMPONENT_SYNAPSE_ACTION),
 #define XLAT_VAL_4 ((unsigned) (COUNTER_COMPONENT_SYNAPSE_ACTION))
 #define XLAT_STR_4 STRINGIFY(COUNTER_COMPONENT_SYNAPSE_ACTION)
 [COUNTER_COMPONENT_EXTENSION] = XLAT(COUNTER_COMPONENT_EXTENSION),
 #define XLAT_VAL_5 ((unsigned) (COUNTER_COMPONENT_EXTENSION))
 #define XLAT_STR_5 STRINGIFY(COUNTER_COMPONENT_EXTENSION)
};
static
const struct xlat counter_ioctl_component_types[1] = { {
 .data = counter_ioctl_component_types_xdata,
 .size = ARRAY_SIZE(counter_ioctl_component_types_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
