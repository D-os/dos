/* Generated by ./src/xlat/gen.sh from ./src/xlat/perf_attr_size.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(PERF_ATTR_SIZE_VER0) || (defined(HAVE_DECL_PERF_ATTR_SIZE_VER0) && HAVE_DECL_PERF_ATTR_SIZE_VER0)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PERF_ATTR_SIZE_VER0) == (64), "PERF_ATTR_SIZE_VER0 != 64");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PERF_ATTR_SIZE_VER0 64
#endif
#if defined(PERF_ATTR_SIZE_VER1) || (defined(HAVE_DECL_PERF_ATTR_SIZE_VER1) && HAVE_DECL_PERF_ATTR_SIZE_VER1)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PERF_ATTR_SIZE_VER1) == (72), "PERF_ATTR_SIZE_VER1 != 72");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PERF_ATTR_SIZE_VER1 72
#endif
#if defined(PERF_ATTR_SIZE_VER2) || (defined(HAVE_DECL_PERF_ATTR_SIZE_VER2) && HAVE_DECL_PERF_ATTR_SIZE_VER2)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PERF_ATTR_SIZE_VER2) == (80), "PERF_ATTR_SIZE_VER2 != 80");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PERF_ATTR_SIZE_VER2 80
#endif
#if defined(PERF_ATTR_SIZE_VER3) || (defined(HAVE_DECL_PERF_ATTR_SIZE_VER3) && HAVE_DECL_PERF_ATTR_SIZE_VER3)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PERF_ATTR_SIZE_VER3) == (96), "PERF_ATTR_SIZE_VER3 != 96");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PERF_ATTR_SIZE_VER3 96
#endif
#if defined(PERF_ATTR_SIZE_VER4) || (defined(HAVE_DECL_PERF_ATTR_SIZE_VER4) && HAVE_DECL_PERF_ATTR_SIZE_VER4)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PERF_ATTR_SIZE_VER4) == (104), "PERF_ATTR_SIZE_VER4 != 104");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PERF_ATTR_SIZE_VER4 104
#endif
#if defined(PERF_ATTR_SIZE_VER5) || (defined(HAVE_DECL_PERF_ATTR_SIZE_VER5) && HAVE_DECL_PERF_ATTR_SIZE_VER5)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PERF_ATTR_SIZE_VER5) == (112), "PERF_ATTR_SIZE_VER5 != 112");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PERF_ATTR_SIZE_VER5 112
#endif
#if defined(PERF_ATTR_SIZE_VER6) || (defined(HAVE_DECL_PERF_ATTR_SIZE_VER6) && HAVE_DECL_PERF_ATTR_SIZE_VER6)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PERF_ATTR_SIZE_VER6) == (120), "PERF_ATTR_SIZE_VER6 != 120");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PERF_ATTR_SIZE_VER6 120
#endif
#if defined(PERF_ATTR_SIZE_VER7) || (defined(HAVE_DECL_PERF_ATTR_SIZE_VER7) && HAVE_DECL_PERF_ATTR_SIZE_VER7)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PERF_ATTR_SIZE_VER7) == (128), "PERF_ATTR_SIZE_VER7 != 128");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PERF_ATTR_SIZE_VER7 128
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat perf_attr_size in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data perf_attr_size_xdata[] = {
 XLAT(PERF_ATTR_SIZE_VER0),
 #define XLAT_VAL_0 ((unsigned) (PERF_ATTR_SIZE_VER0))
 #define XLAT_STR_0 STRINGIFY(PERF_ATTR_SIZE_VER0)
 XLAT(PERF_ATTR_SIZE_VER1),
 #define XLAT_VAL_1 ((unsigned) (PERF_ATTR_SIZE_VER1))
 #define XLAT_STR_1 STRINGIFY(PERF_ATTR_SIZE_VER1)
 XLAT(PERF_ATTR_SIZE_VER2),
 #define XLAT_VAL_2 ((unsigned) (PERF_ATTR_SIZE_VER2))
 #define XLAT_STR_2 STRINGIFY(PERF_ATTR_SIZE_VER2)
 XLAT(PERF_ATTR_SIZE_VER3),
 #define XLAT_VAL_3 ((unsigned) (PERF_ATTR_SIZE_VER3))
 #define XLAT_STR_3 STRINGIFY(PERF_ATTR_SIZE_VER3)
 XLAT(PERF_ATTR_SIZE_VER4),
 #define XLAT_VAL_4 ((unsigned) (PERF_ATTR_SIZE_VER4))
 #define XLAT_STR_4 STRINGIFY(PERF_ATTR_SIZE_VER4)
 XLAT(PERF_ATTR_SIZE_VER5),
 #define XLAT_VAL_5 ((unsigned) (PERF_ATTR_SIZE_VER5))
 #define XLAT_STR_5 STRINGIFY(PERF_ATTR_SIZE_VER5)
 XLAT(PERF_ATTR_SIZE_VER6),
 #define XLAT_VAL_6 ((unsigned) (PERF_ATTR_SIZE_VER6))
 #define XLAT_STR_6 STRINGIFY(PERF_ATTR_SIZE_VER6)
 XLAT(PERF_ATTR_SIZE_VER7),
 #define XLAT_VAL_7 ((unsigned) (PERF_ATTR_SIZE_VER7))
 #define XLAT_STR_7 STRINGIFY(PERF_ATTR_SIZE_VER7)
};
static
const struct xlat perf_attr_size[1] = { {
 .data = perf_attr_size_xdata,
 .size = ARRAY_SIZE(perf_attr_size_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
