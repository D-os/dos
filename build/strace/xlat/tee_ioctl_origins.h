/* Generated by ./src/xlat/gen.sh from ./src/xlat/tee_ioctl_origins.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(TEEC_ORIGIN_API) || (defined(HAVE_DECL_TEEC_ORIGIN_API) && HAVE_DECL_TEEC_ORIGIN_API)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TEEC_ORIGIN_API) == (0x00000001), "TEEC_ORIGIN_API != 0x00000001");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TEEC_ORIGIN_API 0x00000001
#endif
#if defined(TEEC_ORIGIN_COMMS) || (defined(HAVE_DECL_TEEC_ORIGIN_COMMS) && HAVE_DECL_TEEC_ORIGIN_COMMS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TEEC_ORIGIN_COMMS) == (0x00000002), "TEEC_ORIGIN_COMMS != 0x00000002");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TEEC_ORIGIN_COMMS 0x00000002
#endif
#if defined(TEEC_ORIGIN_TEE) || (defined(HAVE_DECL_TEEC_ORIGIN_TEE) && HAVE_DECL_TEEC_ORIGIN_TEE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TEEC_ORIGIN_TEE) == (0x00000003), "TEEC_ORIGIN_TEE != 0x00000003");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TEEC_ORIGIN_TEE 0x00000003
#endif
#if defined(TEEC_ORIGIN_TRUSTED_APP) || (defined(HAVE_DECL_TEEC_ORIGIN_TRUSTED_APP) && HAVE_DECL_TEEC_ORIGIN_TRUSTED_APP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TEEC_ORIGIN_TRUSTED_APP) == (0x00000004), "TEEC_ORIGIN_TRUSTED_APP != 0x00000004");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TEEC_ORIGIN_TRUSTED_APP 0x00000004
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat tee_ioctl_origins in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data tee_ioctl_origins_xdata[] = {

 XLAT(TEEC_ORIGIN_API),
 #define XLAT_VAL_0 ((unsigned) (TEEC_ORIGIN_API))
 #define XLAT_STR_0 STRINGIFY(TEEC_ORIGIN_API)
 XLAT(TEEC_ORIGIN_COMMS),
 #define XLAT_VAL_1 ((unsigned) (TEEC_ORIGIN_COMMS))
 #define XLAT_STR_1 STRINGIFY(TEEC_ORIGIN_COMMS)
 XLAT(TEEC_ORIGIN_TEE),
 #define XLAT_VAL_2 ((unsigned) (TEEC_ORIGIN_TEE))
 #define XLAT_STR_2 STRINGIFY(TEEC_ORIGIN_TEE)
 XLAT(TEEC_ORIGIN_TRUSTED_APP),
 #define XLAT_VAL_3 ((unsigned) (TEEC_ORIGIN_TRUSTED_APP))
 #define XLAT_STR_3 STRINGIFY(TEEC_ORIGIN_TRUSTED_APP)
};
static
const struct xlat tee_ioctl_origins[1] = { {
 .data = tee_ioctl_origins_xdata,
 .size = ARRAY_SIZE(tee_ioctl_origins_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
