/* Generated by ./src/xlat/gen.sh from ./src/xlat/rtnl_route_attrs.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat rtnl_route_attrs in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data rtnl_route_attrs_xdata[] = {
 [RTA_UNSPEC] = XLAT(RTA_UNSPEC),
 #define XLAT_VAL_0 ((unsigned) (RTA_UNSPEC))
 #define XLAT_STR_0 STRINGIFY(RTA_UNSPEC)
 [RTA_DST] = XLAT(RTA_DST),
 #define XLAT_VAL_1 ((unsigned) (RTA_DST))
 #define XLAT_STR_1 STRINGIFY(RTA_DST)
 [RTA_SRC] = XLAT(RTA_SRC),
 #define XLAT_VAL_2 ((unsigned) (RTA_SRC))
 #define XLAT_STR_2 STRINGIFY(RTA_SRC)
 [RTA_IIF] = XLAT(RTA_IIF),
 #define XLAT_VAL_3 ((unsigned) (RTA_IIF))
 #define XLAT_STR_3 STRINGIFY(RTA_IIF)
 [RTA_OIF] = XLAT(RTA_OIF),
 #define XLAT_VAL_4 ((unsigned) (RTA_OIF))
 #define XLAT_STR_4 STRINGIFY(RTA_OIF)
 [RTA_GATEWAY] = XLAT(RTA_GATEWAY),
 #define XLAT_VAL_5 ((unsigned) (RTA_GATEWAY))
 #define XLAT_STR_5 STRINGIFY(RTA_GATEWAY)
 [RTA_PRIORITY] = XLAT(RTA_PRIORITY),
 #define XLAT_VAL_6 ((unsigned) (RTA_PRIORITY))
 #define XLAT_STR_6 STRINGIFY(RTA_PRIORITY)
 [RTA_PREFSRC] = XLAT(RTA_PREFSRC),
 #define XLAT_VAL_7 ((unsigned) (RTA_PREFSRC))
 #define XLAT_STR_7 STRINGIFY(RTA_PREFSRC)
 [RTA_METRICS] = XLAT(RTA_METRICS),
 #define XLAT_VAL_8 ((unsigned) (RTA_METRICS))
 #define XLAT_STR_8 STRINGIFY(RTA_METRICS)
 [RTA_MULTIPATH] = XLAT(RTA_MULTIPATH),
 #define XLAT_VAL_9 ((unsigned) (RTA_MULTIPATH))
 #define XLAT_STR_9 STRINGIFY(RTA_MULTIPATH)
 [RTA_PROTOINFO] = XLAT(RTA_PROTOINFO),
 #define XLAT_VAL_10 ((unsigned) (RTA_PROTOINFO))
 #define XLAT_STR_10 STRINGIFY(RTA_PROTOINFO)
 [RTA_FLOW] = XLAT(RTA_FLOW),
 #define XLAT_VAL_11 ((unsigned) (RTA_FLOW))
 #define XLAT_STR_11 STRINGIFY(RTA_FLOW)
 [RTA_CACHEINFO] = XLAT(RTA_CACHEINFO),
 #define XLAT_VAL_12 ((unsigned) (RTA_CACHEINFO))
 #define XLAT_STR_12 STRINGIFY(RTA_CACHEINFO)
 [RTA_SESSION] = XLAT(RTA_SESSION),
 #define XLAT_VAL_13 ((unsigned) (RTA_SESSION))
 #define XLAT_STR_13 STRINGIFY(RTA_SESSION)
 [RTA_MP_ALGO] = XLAT(RTA_MP_ALGO),
 #define XLAT_VAL_14 ((unsigned) (RTA_MP_ALGO))
 #define XLAT_STR_14 STRINGIFY(RTA_MP_ALGO)
 [RTA_TABLE] = XLAT(RTA_TABLE),
 #define XLAT_VAL_15 ((unsigned) (RTA_TABLE))
 #define XLAT_STR_15 STRINGIFY(RTA_TABLE)
 [RTA_MARK] = XLAT(RTA_MARK),
 #define XLAT_VAL_16 ((unsigned) (RTA_MARK))
 #define XLAT_STR_16 STRINGIFY(RTA_MARK)
 [RTA_MFC_STATS] = XLAT(RTA_MFC_STATS),
 #define XLAT_VAL_17 ((unsigned) (RTA_MFC_STATS))
 #define XLAT_STR_17 STRINGIFY(RTA_MFC_STATS)
 [RTA_VIA] = XLAT(RTA_VIA),
 #define XLAT_VAL_18 ((unsigned) (RTA_VIA))
 #define XLAT_STR_18 STRINGIFY(RTA_VIA)
 [RTA_NEWDST] = XLAT(RTA_NEWDST),
 #define XLAT_VAL_19 ((unsigned) (RTA_NEWDST))
 #define XLAT_STR_19 STRINGIFY(RTA_NEWDST)
 [RTA_PREF] = XLAT(RTA_PREF),
 #define XLAT_VAL_20 ((unsigned) (RTA_PREF))
 #define XLAT_STR_20 STRINGIFY(RTA_PREF)
 [RTA_ENCAP_TYPE] = XLAT(RTA_ENCAP_TYPE),
 #define XLAT_VAL_21 ((unsigned) (RTA_ENCAP_TYPE))
 #define XLAT_STR_21 STRINGIFY(RTA_ENCAP_TYPE)
 [RTA_ENCAP] = XLAT(RTA_ENCAP),
 #define XLAT_VAL_22 ((unsigned) (RTA_ENCAP))
 #define XLAT_STR_22 STRINGIFY(RTA_ENCAP)
 [RTA_EXPIRES] = XLAT(RTA_EXPIRES),
 #define XLAT_VAL_23 ((unsigned) (RTA_EXPIRES))
 #define XLAT_STR_23 STRINGIFY(RTA_EXPIRES)
 [RTA_PAD] = XLAT(RTA_PAD),
 #define XLAT_VAL_24 ((unsigned) (RTA_PAD))
 #define XLAT_STR_24 STRINGIFY(RTA_PAD)
 [RTA_UID] = XLAT(RTA_UID),
 #define XLAT_VAL_25 ((unsigned) (RTA_UID))
 #define XLAT_STR_25 STRINGIFY(RTA_UID)
 [RTA_TTL_PROPAGATE] = XLAT(RTA_TTL_PROPAGATE),
 #define XLAT_VAL_26 ((unsigned) (RTA_TTL_PROPAGATE))
 #define XLAT_STR_26 STRINGIFY(RTA_TTL_PROPAGATE)
 [RTA_IP_PROTO] = XLAT(RTA_IP_PROTO),
 #define XLAT_VAL_27 ((unsigned) (RTA_IP_PROTO))
 #define XLAT_STR_27 STRINGIFY(RTA_IP_PROTO)
 [RTA_SPORT] = XLAT(RTA_SPORT),
 #define XLAT_VAL_28 ((unsigned) (RTA_SPORT))
 #define XLAT_STR_28 STRINGIFY(RTA_SPORT)
 [RTA_DPORT] = XLAT(RTA_DPORT),
 #define XLAT_VAL_29 ((unsigned) (RTA_DPORT))
 #define XLAT_STR_29 STRINGIFY(RTA_DPORT)
 [RTA_NH_ID] = XLAT(RTA_NH_ID),
 #define XLAT_VAL_30 ((unsigned) (RTA_NH_ID))
 #define XLAT_STR_30 STRINGIFY(RTA_NH_ID)
};
static
const struct xlat rtnl_route_attrs[1] = { {
 .data = rtnl_route_attrs_xdata,
 .size = ARRAY_SIZE(rtnl_route_attrs_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
#  ifdef XLAT_VAL_22
  | XLAT_VAL_22
#  endif
#  ifdef XLAT_VAL_23
  | XLAT_VAL_23
#  endif
#  ifdef XLAT_VAL_24
  | XLAT_VAL_24
#  endif
#  ifdef XLAT_VAL_25
  | XLAT_VAL_25
#  endif
#  ifdef XLAT_VAL_26
  | XLAT_VAL_26
#  endif
#  ifdef XLAT_VAL_27
  | XLAT_VAL_27
#  endif
#  ifdef XLAT_VAL_28
  | XLAT_VAL_28
#  endif
#  ifdef XLAT_VAL_29
  | XLAT_VAL_29
#  endif
#  ifdef XLAT_VAL_30
  | XLAT_VAL_30
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
#  ifdef XLAT_STR_22
  + sizeof(XLAT_STR_22)
#  endif
#  ifdef XLAT_STR_23
  + sizeof(XLAT_STR_23)
#  endif
#  ifdef XLAT_STR_24
  + sizeof(XLAT_STR_24)
#  endif
#  ifdef XLAT_STR_25
  + sizeof(XLAT_STR_25)
#  endif
#  ifdef XLAT_STR_26
  + sizeof(XLAT_STR_26)
#  endif
#  ifdef XLAT_STR_27
  + sizeof(XLAT_STR_27)
#  endif
#  ifdef XLAT_STR_28
  + sizeof(XLAT_STR_28)
#  endif
#  ifdef XLAT_STR_29
  + sizeof(XLAT_STR_29)
#  endif
#  ifdef XLAT_STR_30
  + sizeof(XLAT_STR_30)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
#  undef XLAT_STR_22
#  undef XLAT_VAL_22
#  undef XLAT_STR_23
#  undef XLAT_VAL_23
#  undef XLAT_STR_24
#  undef XLAT_VAL_24
#  undef XLAT_STR_25
#  undef XLAT_VAL_25
#  undef XLAT_STR_26
#  undef XLAT_VAL_26
#  undef XLAT_STR_27
#  undef XLAT_VAL_27
#  undef XLAT_STR_28
#  undef XLAT_VAL_28
#  undef XLAT_STR_29
#  undef XLAT_VAL_29
#  undef XLAT_STR_30
#  undef XLAT_VAL_30
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
