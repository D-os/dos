/* Generated by ./src/xlat/gen.sh from ./src/xlat/resource_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifndef IN_MPERS

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data resource_flags_xdata[] = {
#if defined(IPC_CREAT) || (defined(HAVE_DECL_IPC_CREAT) && HAVE_DECL_IPC_CREAT)
  XLAT(IPC_CREAT),
 #define XLAT_VAL_0 ((unsigned) (IPC_CREAT))
 #define XLAT_STR_0 STRINGIFY(IPC_CREAT)
#endif
#if defined(IPC_EXCL) || (defined(HAVE_DECL_IPC_EXCL) && HAVE_DECL_IPC_EXCL)
  XLAT(IPC_EXCL),
 #define XLAT_VAL_1 ((unsigned) (IPC_EXCL))
 #define XLAT_STR_1 STRINGIFY(IPC_EXCL)
#endif
#if defined(IPC_NOWAIT) || (defined(HAVE_DECL_IPC_NOWAIT) && HAVE_DECL_IPC_NOWAIT)
  XLAT(IPC_NOWAIT),
 #define XLAT_VAL_2 ((unsigned) (IPC_NOWAIT))
 #define XLAT_STR_2 STRINGIFY(IPC_NOWAIT)
#endif
};
const struct xlat resource_flags[1] = { {
 .data = resource_flags_xdata,
 .size = ARRAY_SIZE(resource_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
