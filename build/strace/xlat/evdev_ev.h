/* Generated by ./src/xlat/gen.sh from ./src/xlat/evdev_ev.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifndef IN_MPERS

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data evdev_ev_xdata[] = {
 XLAT(EV_SYN),
 #define XLAT_VAL_0 ((unsigned) (EV_SYN))
 #define XLAT_STR_0 STRINGIFY(EV_SYN)
 XLAT(EV_KEY),
 #define XLAT_VAL_1 ((unsigned) (EV_KEY))
 #define XLAT_STR_1 STRINGIFY(EV_KEY)
 XLAT(EV_REL),
 #define XLAT_VAL_2 ((unsigned) (EV_REL))
 #define XLAT_STR_2 STRINGIFY(EV_REL)
 XLAT(EV_ABS),
 #define XLAT_VAL_3 ((unsigned) (EV_ABS))
 #define XLAT_STR_3 STRINGIFY(EV_ABS)
 XLAT(EV_MSC),
 #define XLAT_VAL_4 ((unsigned) (EV_MSC))
 #define XLAT_STR_4 STRINGIFY(EV_MSC)
 XLAT(EV_SW),
 #define XLAT_VAL_5 ((unsigned) (EV_SW))
 #define XLAT_STR_5 STRINGIFY(EV_SW)
 XLAT(EV_LED),
 #define XLAT_VAL_6 ((unsigned) (EV_LED))
 #define XLAT_STR_6 STRINGIFY(EV_LED)
 XLAT(EV_SND),
 #define XLAT_VAL_7 ((unsigned) (EV_SND))
 #define XLAT_STR_7 STRINGIFY(EV_SND)
 XLAT(EV_REP),
 #define XLAT_VAL_8 ((unsigned) (EV_REP))
 #define XLAT_STR_8 STRINGIFY(EV_REP)
 XLAT(EV_FF),
 #define XLAT_VAL_9 ((unsigned) (EV_FF))
 #define XLAT_STR_9 STRINGIFY(EV_FF)
 XLAT(EV_PWR),
 #define XLAT_VAL_10 ((unsigned) (EV_PWR))
 #define XLAT_STR_10 STRINGIFY(EV_PWR)
 XLAT(EV_FF_STATUS),
 #define XLAT_VAL_11 ((unsigned) (EV_FF_STATUS))
 #define XLAT_STR_11 STRINGIFY(EV_FF_STATUS)
};
const struct xlat evdev_ev[1] = { {
 .data = evdev_ev_xdata,
 .size = ARRAY_SIZE(evdev_ev_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
