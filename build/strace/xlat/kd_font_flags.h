/* Generated by ./src/xlat/gen.sh from ./src/xlat/kd_font_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(KD_FONT_FLAG_DONT_RECALC) || (defined(HAVE_DECL_KD_FONT_FLAG_DONT_RECALC) && HAVE_DECL_KD_FONT_FLAG_DONT_RECALC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((KD_FONT_FLAG_DONT_RECALC) == (0x1), "KD_FONT_FLAG_DONT_RECALC != 0x1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define KD_FONT_FLAG_DONT_RECALC 0x1
#endif
#if defined(KD_FONT_FLAG_OLD) || (defined(HAVE_DECL_KD_FONT_FLAG_OLD) && HAVE_DECL_KD_FONT_FLAG_OLD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((KD_FONT_FLAG_OLD) == (0x80000000), "KD_FONT_FLAG_OLD != 0x80000000");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define KD_FONT_FLAG_OLD 0x80000000
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat kd_font_flags[];

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data kd_font_flags_xdata[] = {
 XLAT(KD_FONT_FLAG_DONT_RECALC),
 #define XLAT_VAL_0 ((unsigned) (KD_FONT_FLAG_DONT_RECALC))
 #define XLAT_STR_0 STRINGIFY(KD_FONT_FLAG_DONT_RECALC)
 XLAT(KD_FONT_FLAG_OLD),
 #define XLAT_VAL_1 ((unsigned) (KD_FONT_FLAG_OLD))
 #define XLAT_STR_1 STRINGIFY(KD_FONT_FLAG_OLD)
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat kd_font_flags[1] = { {
 .data = kd_font_flags_xdata,
 .size = ARRAY_SIZE(kd_font_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
