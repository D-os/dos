/* Generated by ./src/xlat/gen.sh from ./src/xlat/ieee802154_addr_types.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(IEEE802154_ADDR_NONE) || (defined(HAVE_DECL_IEEE802154_ADDR_NONE) && HAVE_DECL_IEEE802154_ADDR_NONE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IEEE802154_ADDR_NONE) == (0), "IEEE802154_ADDR_NONE != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IEEE802154_ADDR_NONE 0
#endif
#if defined(IEEE802154_ADDR_SHORT) || (defined(HAVE_DECL_IEEE802154_ADDR_SHORT) && HAVE_DECL_IEEE802154_ADDR_SHORT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IEEE802154_ADDR_SHORT) == (2), "IEEE802154_ADDR_SHORT != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IEEE802154_ADDR_SHORT 2
#endif
#if defined(IEEE802154_ADDR_LONG) || (defined(HAVE_DECL_IEEE802154_ADDR_LONG) && HAVE_DECL_IEEE802154_ADDR_LONG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IEEE802154_ADDR_LONG) == (3), "IEEE802154_ADDR_LONG != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IEEE802154_ADDR_LONG 3
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat ieee802154_addr_types in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data ieee802154_addr_types_xdata[] = {
 [IEEE802154_ADDR_NONE] = XLAT(IEEE802154_ADDR_NONE),
 #define XLAT_VAL_0 ((unsigned) (IEEE802154_ADDR_NONE))
 #define XLAT_STR_0 STRINGIFY(IEEE802154_ADDR_NONE)
 [IEEE802154_ADDR_SHORT] = XLAT(IEEE802154_ADDR_SHORT),
 #define XLAT_VAL_1 ((unsigned) (IEEE802154_ADDR_SHORT))
 #define XLAT_STR_1 STRINGIFY(IEEE802154_ADDR_SHORT)
 [IEEE802154_ADDR_LONG] = XLAT(IEEE802154_ADDR_LONG),
 #define XLAT_VAL_2 ((unsigned) (IEEE802154_ADDR_LONG))
 #define XLAT_STR_2 STRINGIFY(IEEE802154_ADDR_LONG)
};
static
const struct xlat ieee802154_addr_types[1] = { {
 .data = ieee802154_addr_types_xdata,
 .size = ARRAY_SIZE(ieee802154_addr_types_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
