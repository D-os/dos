/* Generated by ./src/xlat/gen.sh from ./src/xlat/uring_register_opcodes.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat uring_register_opcodes in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data uring_register_opcodes_xdata[] = {
 [IORING_REGISTER_BUFFERS] = XLAT(IORING_REGISTER_BUFFERS),
 #define XLAT_VAL_0 ((unsigned) (IORING_REGISTER_BUFFERS))
 #define XLAT_STR_0 STRINGIFY(IORING_REGISTER_BUFFERS)
 [IORING_UNREGISTER_BUFFERS] = XLAT(IORING_UNREGISTER_BUFFERS),
 #define XLAT_VAL_1 ((unsigned) (IORING_UNREGISTER_BUFFERS))
 #define XLAT_STR_1 STRINGIFY(IORING_UNREGISTER_BUFFERS)
 [IORING_REGISTER_FILES] = XLAT(IORING_REGISTER_FILES),
 #define XLAT_VAL_2 ((unsigned) (IORING_REGISTER_FILES))
 #define XLAT_STR_2 STRINGIFY(IORING_REGISTER_FILES)
 [IORING_UNREGISTER_FILES] = XLAT(IORING_UNREGISTER_FILES),
 #define XLAT_VAL_3 ((unsigned) (IORING_UNREGISTER_FILES))
 #define XLAT_STR_3 STRINGIFY(IORING_UNREGISTER_FILES)
 [IORING_REGISTER_EVENTFD] = XLAT(IORING_REGISTER_EVENTFD),
 #define XLAT_VAL_4 ((unsigned) (IORING_REGISTER_EVENTFD))
 #define XLAT_STR_4 STRINGIFY(IORING_REGISTER_EVENTFD)
 [IORING_UNREGISTER_EVENTFD] = XLAT(IORING_UNREGISTER_EVENTFD),
 #define XLAT_VAL_5 ((unsigned) (IORING_UNREGISTER_EVENTFD))
 #define XLAT_STR_5 STRINGIFY(IORING_UNREGISTER_EVENTFD)
 [IORING_REGISTER_FILES_UPDATE] = XLAT(IORING_REGISTER_FILES_UPDATE),
 #define XLAT_VAL_6 ((unsigned) (IORING_REGISTER_FILES_UPDATE))
 #define XLAT_STR_6 STRINGIFY(IORING_REGISTER_FILES_UPDATE)
 [IORING_REGISTER_EVENTFD_ASYNC] = XLAT(IORING_REGISTER_EVENTFD_ASYNC),
 #define XLAT_VAL_7 ((unsigned) (IORING_REGISTER_EVENTFD_ASYNC))
 #define XLAT_STR_7 STRINGIFY(IORING_REGISTER_EVENTFD_ASYNC)
 [IORING_REGISTER_PROBE] = XLAT(IORING_REGISTER_PROBE),
 #define XLAT_VAL_8 ((unsigned) (IORING_REGISTER_PROBE))
 #define XLAT_STR_8 STRINGIFY(IORING_REGISTER_PROBE)
 [IORING_REGISTER_PERSONALITY] = XLAT(IORING_REGISTER_PERSONALITY),
 #define XLAT_VAL_9 ((unsigned) (IORING_REGISTER_PERSONALITY))
 #define XLAT_STR_9 STRINGIFY(IORING_REGISTER_PERSONALITY)
 [IORING_UNREGISTER_PERSONALITY] = XLAT(IORING_UNREGISTER_PERSONALITY),
 #define XLAT_VAL_10 ((unsigned) (IORING_UNREGISTER_PERSONALITY))
 #define XLAT_STR_10 STRINGIFY(IORING_UNREGISTER_PERSONALITY)
 [IORING_REGISTER_RESTRICTIONS] = XLAT(IORING_REGISTER_RESTRICTIONS),
 #define XLAT_VAL_11 ((unsigned) (IORING_REGISTER_RESTRICTIONS))
 #define XLAT_STR_11 STRINGIFY(IORING_REGISTER_RESTRICTIONS)
 [IORING_REGISTER_ENABLE_RINGS] = XLAT(IORING_REGISTER_ENABLE_RINGS),
 #define XLAT_VAL_12 ((unsigned) (IORING_REGISTER_ENABLE_RINGS))
 #define XLAT_STR_12 STRINGIFY(IORING_REGISTER_ENABLE_RINGS)
 [IORING_REGISTER_FILES2] = XLAT(IORING_REGISTER_FILES2),
 #define XLAT_VAL_13 ((unsigned) (IORING_REGISTER_FILES2))
 #define XLAT_STR_13 STRINGIFY(IORING_REGISTER_FILES2)
 [IORING_REGISTER_FILES_UPDATE2] = XLAT(IORING_REGISTER_FILES_UPDATE2),
 #define XLAT_VAL_14 ((unsigned) (IORING_REGISTER_FILES_UPDATE2))
 #define XLAT_STR_14 STRINGIFY(IORING_REGISTER_FILES_UPDATE2)
 [IORING_REGISTER_BUFFERS2] = XLAT(IORING_REGISTER_BUFFERS2),
 #define XLAT_VAL_15 ((unsigned) (IORING_REGISTER_BUFFERS2))
 #define XLAT_STR_15 STRINGIFY(IORING_REGISTER_BUFFERS2)
 [IORING_REGISTER_BUFFERS_UPDATE] = XLAT(IORING_REGISTER_BUFFERS_UPDATE),
 #define XLAT_VAL_16 ((unsigned) (IORING_REGISTER_BUFFERS_UPDATE))
 #define XLAT_STR_16 STRINGIFY(IORING_REGISTER_BUFFERS_UPDATE)
 [IORING_REGISTER_IOWQ_AFF] = XLAT(IORING_REGISTER_IOWQ_AFF),
 #define XLAT_VAL_17 ((unsigned) (IORING_REGISTER_IOWQ_AFF))
 #define XLAT_STR_17 STRINGIFY(IORING_REGISTER_IOWQ_AFF)
 [IORING_UNREGISTER_IOWQ_AFF] = XLAT(IORING_UNREGISTER_IOWQ_AFF),
 #define XLAT_VAL_18 ((unsigned) (IORING_UNREGISTER_IOWQ_AFF))
 #define XLAT_STR_18 STRINGIFY(IORING_UNREGISTER_IOWQ_AFF)
 [IORING_REGISTER_IOWQ_MAX_WORKERS] = XLAT(IORING_REGISTER_IOWQ_MAX_WORKERS),
 #define XLAT_VAL_19 ((unsigned) (IORING_REGISTER_IOWQ_MAX_WORKERS))
 #define XLAT_STR_19 STRINGIFY(IORING_REGISTER_IOWQ_MAX_WORKERS)
 [IORING_REGISTER_RING_FDS] = XLAT(IORING_REGISTER_RING_FDS),
 #define XLAT_VAL_20 ((unsigned) (IORING_REGISTER_RING_FDS))
 #define XLAT_STR_20 STRINGIFY(IORING_REGISTER_RING_FDS)
 [IORING_UNREGISTER_RING_FDS] = XLAT(IORING_UNREGISTER_RING_FDS),
 #define XLAT_VAL_21 ((unsigned) (IORING_UNREGISTER_RING_FDS))
 #define XLAT_STR_21 STRINGIFY(IORING_UNREGISTER_RING_FDS)
 [IORING_REGISTER_PBUF_RING] = XLAT(IORING_REGISTER_PBUF_RING),
 #define XLAT_VAL_22 ((unsigned) (IORING_REGISTER_PBUF_RING))
 #define XLAT_STR_22 STRINGIFY(IORING_REGISTER_PBUF_RING)
 [IORING_UNREGISTER_PBUF_RING] = XLAT(IORING_UNREGISTER_PBUF_RING),
 #define XLAT_VAL_23 ((unsigned) (IORING_UNREGISTER_PBUF_RING))
 #define XLAT_STR_23 STRINGIFY(IORING_UNREGISTER_PBUF_RING)
};
static
const struct xlat uring_register_opcodes[1] = { {
 .data = uring_register_opcodes_xdata,
 .size = ARRAY_SIZE(uring_register_opcodes_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
#  ifdef XLAT_VAL_22
  | XLAT_VAL_22
#  endif
#  ifdef XLAT_VAL_23
  | XLAT_VAL_23
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
#  ifdef XLAT_STR_22
  + sizeof(XLAT_STR_22)
#  endif
#  ifdef XLAT_STR_23
  + sizeof(XLAT_STR_23)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
#  undef XLAT_STR_22
#  undef XLAT_VAL_22
#  undef XLAT_STR_23
#  undef XLAT_VAL_23
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
