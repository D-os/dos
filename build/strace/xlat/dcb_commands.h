/* Generated by ./src/xlat/gen.sh from ./src/xlat/dcb_commands.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat dcb_commands in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data dcb_commands_xdata[] = {
 [DCB_CMD_UNDEFINED] = XLAT(DCB_CMD_UNDEFINED),
 #define XLAT_VAL_0 ((unsigned) (DCB_CMD_UNDEFINED))
 #define XLAT_STR_0 STRINGIFY(DCB_CMD_UNDEFINED)
 [DCB_CMD_GSTATE] = XLAT(DCB_CMD_GSTATE),
 #define XLAT_VAL_1 ((unsigned) (DCB_CMD_GSTATE))
 #define XLAT_STR_1 STRINGIFY(DCB_CMD_GSTATE)
 [DCB_CMD_SSTATE] = XLAT(DCB_CMD_SSTATE),
 #define XLAT_VAL_2 ((unsigned) (DCB_CMD_SSTATE))
 #define XLAT_STR_2 STRINGIFY(DCB_CMD_SSTATE)
 [DCB_CMD_PGTX_GCFG] = XLAT(DCB_CMD_PGTX_GCFG),
 #define XLAT_VAL_3 ((unsigned) (DCB_CMD_PGTX_GCFG))
 #define XLAT_STR_3 STRINGIFY(DCB_CMD_PGTX_GCFG)
 [DCB_CMD_PGTX_SCFG] = XLAT(DCB_CMD_PGTX_SCFG),
 #define XLAT_VAL_4 ((unsigned) (DCB_CMD_PGTX_SCFG))
 #define XLAT_STR_4 STRINGIFY(DCB_CMD_PGTX_SCFG)
 [DCB_CMD_PGRX_GCFG] = XLAT(DCB_CMD_PGRX_GCFG),
 #define XLAT_VAL_5 ((unsigned) (DCB_CMD_PGRX_GCFG))
 #define XLAT_STR_5 STRINGIFY(DCB_CMD_PGRX_GCFG)
 [DCB_CMD_PGRX_SCFG] = XLAT(DCB_CMD_PGRX_SCFG),
 #define XLAT_VAL_6 ((unsigned) (DCB_CMD_PGRX_SCFG))
 #define XLAT_STR_6 STRINGIFY(DCB_CMD_PGRX_SCFG)
 [DCB_CMD_PFC_GCFG] = XLAT(DCB_CMD_PFC_GCFG),
 #define XLAT_VAL_7 ((unsigned) (DCB_CMD_PFC_GCFG))
 #define XLAT_STR_7 STRINGIFY(DCB_CMD_PFC_GCFG)
 [DCB_CMD_PFC_SCFG] = XLAT(DCB_CMD_PFC_SCFG),
 #define XLAT_VAL_8 ((unsigned) (DCB_CMD_PFC_SCFG))
 #define XLAT_STR_8 STRINGIFY(DCB_CMD_PFC_SCFG)
 [DCB_CMD_SET_ALL] = XLAT(DCB_CMD_SET_ALL),
 #define XLAT_VAL_9 ((unsigned) (DCB_CMD_SET_ALL))
 #define XLAT_STR_9 STRINGIFY(DCB_CMD_SET_ALL)
 [DCB_CMD_GPERM_HWADDR] = XLAT(DCB_CMD_GPERM_HWADDR),
 #define XLAT_VAL_10 ((unsigned) (DCB_CMD_GPERM_HWADDR))
 #define XLAT_STR_10 STRINGIFY(DCB_CMD_GPERM_HWADDR)
 [DCB_CMD_GCAP] = XLAT(DCB_CMD_GCAP),
 #define XLAT_VAL_11 ((unsigned) (DCB_CMD_GCAP))
 #define XLAT_STR_11 STRINGIFY(DCB_CMD_GCAP)
 [DCB_CMD_GNUMTCS] = XLAT(DCB_CMD_GNUMTCS),
 #define XLAT_VAL_12 ((unsigned) (DCB_CMD_GNUMTCS))
 #define XLAT_STR_12 STRINGIFY(DCB_CMD_GNUMTCS)
 [DCB_CMD_SNUMTCS] = XLAT(DCB_CMD_SNUMTCS),
 #define XLAT_VAL_13 ((unsigned) (DCB_CMD_SNUMTCS))
 #define XLAT_STR_13 STRINGIFY(DCB_CMD_SNUMTCS)
 [DCB_CMD_PFC_GSTATE] = XLAT(DCB_CMD_PFC_GSTATE),
 #define XLAT_VAL_14 ((unsigned) (DCB_CMD_PFC_GSTATE))
 #define XLAT_STR_14 STRINGIFY(DCB_CMD_PFC_GSTATE)
 [DCB_CMD_PFC_SSTATE] = XLAT(DCB_CMD_PFC_SSTATE),
 #define XLAT_VAL_15 ((unsigned) (DCB_CMD_PFC_SSTATE))
 #define XLAT_STR_15 STRINGIFY(DCB_CMD_PFC_SSTATE)
 [DCB_CMD_BCN_GCFG] = XLAT(DCB_CMD_BCN_GCFG),
 #define XLAT_VAL_16 ((unsigned) (DCB_CMD_BCN_GCFG))
 #define XLAT_STR_16 STRINGIFY(DCB_CMD_BCN_GCFG)
 [DCB_CMD_BCN_SCFG] = XLAT(DCB_CMD_BCN_SCFG),
 #define XLAT_VAL_17 ((unsigned) (DCB_CMD_BCN_SCFG))
 #define XLAT_STR_17 STRINGIFY(DCB_CMD_BCN_SCFG)
 [DCB_CMD_GAPP] = XLAT(DCB_CMD_GAPP),
 #define XLAT_VAL_18 ((unsigned) (DCB_CMD_GAPP))
 #define XLAT_STR_18 STRINGIFY(DCB_CMD_GAPP)
 [DCB_CMD_SAPP] = XLAT(DCB_CMD_SAPP),
 #define XLAT_VAL_19 ((unsigned) (DCB_CMD_SAPP))
 #define XLAT_STR_19 STRINGIFY(DCB_CMD_SAPP)
 [DCB_CMD_IEEE_SET] = XLAT(DCB_CMD_IEEE_SET),
 #define XLAT_VAL_20 ((unsigned) (DCB_CMD_IEEE_SET))
 #define XLAT_STR_20 STRINGIFY(DCB_CMD_IEEE_SET)
 [DCB_CMD_IEEE_GET] = XLAT(DCB_CMD_IEEE_GET),
 #define XLAT_VAL_21 ((unsigned) (DCB_CMD_IEEE_GET))
 #define XLAT_STR_21 STRINGIFY(DCB_CMD_IEEE_GET)
 [DCB_CMD_GDCBX] = XLAT(DCB_CMD_GDCBX),
 #define XLAT_VAL_22 ((unsigned) (DCB_CMD_GDCBX))
 #define XLAT_STR_22 STRINGIFY(DCB_CMD_GDCBX)
 [DCB_CMD_SDCBX] = XLAT(DCB_CMD_SDCBX),
 #define XLAT_VAL_23 ((unsigned) (DCB_CMD_SDCBX))
 #define XLAT_STR_23 STRINGIFY(DCB_CMD_SDCBX)
 [DCB_CMD_GFEATCFG] = XLAT(DCB_CMD_GFEATCFG),
 #define XLAT_VAL_24 ((unsigned) (DCB_CMD_GFEATCFG))
 #define XLAT_STR_24 STRINGIFY(DCB_CMD_GFEATCFG)
 [DCB_CMD_SFEATCFG] = XLAT(DCB_CMD_SFEATCFG),
 #define XLAT_VAL_25 ((unsigned) (DCB_CMD_SFEATCFG))
 #define XLAT_STR_25 STRINGIFY(DCB_CMD_SFEATCFG)
 [DCB_CMD_CEE_GET] = XLAT(DCB_CMD_CEE_GET),
 #define XLAT_VAL_26 ((unsigned) (DCB_CMD_CEE_GET))
 #define XLAT_STR_26 STRINGIFY(DCB_CMD_CEE_GET)
 [DCB_CMD_IEEE_DEL] = XLAT(DCB_CMD_IEEE_DEL),
 #define XLAT_VAL_27 ((unsigned) (DCB_CMD_IEEE_DEL))
 #define XLAT_STR_27 STRINGIFY(DCB_CMD_IEEE_DEL)
};
static
const struct xlat dcb_commands[1] = { {
 .data = dcb_commands_xdata,
 .size = ARRAY_SIZE(dcb_commands_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
#  ifdef XLAT_VAL_22
  | XLAT_VAL_22
#  endif
#  ifdef XLAT_VAL_23
  | XLAT_VAL_23
#  endif
#  ifdef XLAT_VAL_24
  | XLAT_VAL_24
#  endif
#  ifdef XLAT_VAL_25
  | XLAT_VAL_25
#  endif
#  ifdef XLAT_VAL_26
  | XLAT_VAL_26
#  endif
#  ifdef XLAT_VAL_27
  | XLAT_VAL_27
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
#  ifdef XLAT_STR_22
  + sizeof(XLAT_STR_22)
#  endif
#  ifdef XLAT_STR_23
  + sizeof(XLAT_STR_23)
#  endif
#  ifdef XLAT_STR_24
  + sizeof(XLAT_STR_24)
#  endif
#  ifdef XLAT_STR_25
  + sizeof(XLAT_STR_25)
#  endif
#  ifdef XLAT_STR_26
  + sizeof(XLAT_STR_26)
#  endif
#  ifdef XLAT_STR_27
  + sizeof(XLAT_STR_27)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
#  undef XLAT_STR_22
#  undef XLAT_VAL_22
#  undef XLAT_STR_23
#  undef XLAT_VAL_23
#  undef XLAT_STR_24
#  undef XLAT_VAL_24
#  undef XLAT_STR_25
#  undef XLAT_VAL_25
#  undef XLAT_STR_26
#  undef XLAT_VAL_26
#  undef XLAT_STR_27
#  undef XLAT_VAL_27
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
