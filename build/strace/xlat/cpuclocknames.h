/* Generated by ./src/xlat/gen.sh from ./src/xlat/cpuclocknames.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(CPUCLOCK_PROF) || (defined(HAVE_DECL_CPUCLOCK_PROF) && HAVE_DECL_CPUCLOCK_PROF)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CPUCLOCK_PROF) == (0), "CPUCLOCK_PROF != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CPUCLOCK_PROF 0
#endif
#if defined(CPUCLOCK_VIRT) || (defined(HAVE_DECL_CPUCLOCK_VIRT) && HAVE_DECL_CPUCLOCK_VIRT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CPUCLOCK_VIRT) == (1), "CPUCLOCK_VIRT != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CPUCLOCK_VIRT 1
#endif
#if defined(CPUCLOCK_SCHED) || (defined(HAVE_DECL_CPUCLOCK_SCHED) && HAVE_DECL_CPUCLOCK_SCHED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CPUCLOCK_SCHED) == (2), "CPUCLOCK_SCHED != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CPUCLOCK_SCHED 2
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat cpuclocknames in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data cpuclocknames_xdata[] = {
 [CPUCLOCK_PROF] = XLAT(CPUCLOCK_PROF),
 #define XLAT_VAL_0 ((unsigned) (CPUCLOCK_PROF))
 #define XLAT_STR_0 STRINGIFY(CPUCLOCK_PROF)
 [CPUCLOCK_VIRT] = XLAT(CPUCLOCK_VIRT),
 #define XLAT_VAL_1 ((unsigned) (CPUCLOCK_VIRT))
 #define XLAT_STR_1 STRINGIFY(CPUCLOCK_VIRT)
 [CPUCLOCK_SCHED] = XLAT(CPUCLOCK_SCHED),
 #define XLAT_VAL_2 ((unsigned) (CPUCLOCK_SCHED))
 #define XLAT_STR_2 STRINGIFY(CPUCLOCK_SCHED)
};
static
const struct xlat cpuclocknames[1] = { {
 .data = cpuclocknames_xdata,
 .size = ARRAY_SIZE(cpuclocknames_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
