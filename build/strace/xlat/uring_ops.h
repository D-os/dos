/* Generated by ./src/xlat/gen.sh from ./src/xlat/uring_ops.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat uring_ops in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data uring_ops_xdata[] = {
 [IORING_OP_NOP] = XLAT(IORING_OP_NOP),
 #define XLAT_VAL_0 ((unsigned) (IORING_OP_NOP))
 #define XLAT_STR_0 STRINGIFY(IORING_OP_NOP)
 [IORING_OP_READV] = XLAT(IORING_OP_READV),
 #define XLAT_VAL_1 ((unsigned) (IORING_OP_READV))
 #define XLAT_STR_1 STRINGIFY(IORING_OP_READV)
 [IORING_OP_WRITEV] = XLAT(IORING_OP_WRITEV),
 #define XLAT_VAL_2 ((unsigned) (IORING_OP_WRITEV))
 #define XLAT_STR_2 STRINGIFY(IORING_OP_WRITEV)
 [IORING_OP_FSYNC] = XLAT(IORING_OP_FSYNC),
 #define XLAT_VAL_3 ((unsigned) (IORING_OP_FSYNC))
 #define XLAT_STR_3 STRINGIFY(IORING_OP_FSYNC)
 [IORING_OP_READ_FIXED] = XLAT(IORING_OP_READ_FIXED),
 #define XLAT_VAL_4 ((unsigned) (IORING_OP_READ_FIXED))
 #define XLAT_STR_4 STRINGIFY(IORING_OP_READ_FIXED)
 [IORING_OP_WRITE_FIXED] = XLAT(IORING_OP_WRITE_FIXED),
 #define XLAT_VAL_5 ((unsigned) (IORING_OP_WRITE_FIXED))
 #define XLAT_STR_5 STRINGIFY(IORING_OP_WRITE_FIXED)
 [IORING_OP_POLL_ADD] = XLAT(IORING_OP_POLL_ADD),
 #define XLAT_VAL_6 ((unsigned) (IORING_OP_POLL_ADD))
 #define XLAT_STR_6 STRINGIFY(IORING_OP_POLL_ADD)
 [IORING_OP_POLL_REMOVE] = XLAT(IORING_OP_POLL_REMOVE),
 #define XLAT_VAL_7 ((unsigned) (IORING_OP_POLL_REMOVE))
 #define XLAT_STR_7 STRINGIFY(IORING_OP_POLL_REMOVE)
 [IORING_OP_SYNC_FILE_RANGE] = XLAT(IORING_OP_SYNC_FILE_RANGE),
 #define XLAT_VAL_8 ((unsigned) (IORING_OP_SYNC_FILE_RANGE))
 #define XLAT_STR_8 STRINGIFY(IORING_OP_SYNC_FILE_RANGE)
 [IORING_OP_SENDMSG] = XLAT(IORING_OP_SENDMSG),
 #define XLAT_VAL_9 ((unsigned) (IORING_OP_SENDMSG))
 #define XLAT_STR_9 STRINGIFY(IORING_OP_SENDMSG)
 [IORING_OP_RECVMSG] = XLAT(IORING_OP_RECVMSG),
 #define XLAT_VAL_10 ((unsigned) (IORING_OP_RECVMSG))
 #define XLAT_STR_10 STRINGIFY(IORING_OP_RECVMSG)
 [IORING_OP_TIMEOUT] = XLAT(IORING_OP_TIMEOUT),
 #define XLAT_VAL_11 ((unsigned) (IORING_OP_TIMEOUT))
 #define XLAT_STR_11 STRINGIFY(IORING_OP_TIMEOUT)
 [IORING_OP_TIMEOUT_REMOVE] = XLAT(IORING_OP_TIMEOUT_REMOVE),
 #define XLAT_VAL_12 ((unsigned) (IORING_OP_TIMEOUT_REMOVE))
 #define XLAT_STR_12 STRINGIFY(IORING_OP_TIMEOUT_REMOVE)
 [IORING_OP_ACCEPT] = XLAT(IORING_OP_ACCEPT),
 #define XLAT_VAL_13 ((unsigned) (IORING_OP_ACCEPT))
 #define XLAT_STR_13 STRINGIFY(IORING_OP_ACCEPT)
 [IORING_OP_ASYNC_CANCEL] = XLAT(IORING_OP_ASYNC_CANCEL),
 #define XLAT_VAL_14 ((unsigned) (IORING_OP_ASYNC_CANCEL))
 #define XLAT_STR_14 STRINGIFY(IORING_OP_ASYNC_CANCEL)
 [IORING_OP_LINK_TIMEOUT] = XLAT(IORING_OP_LINK_TIMEOUT),
 #define XLAT_VAL_15 ((unsigned) (IORING_OP_LINK_TIMEOUT))
 #define XLAT_STR_15 STRINGIFY(IORING_OP_LINK_TIMEOUT)
 [IORING_OP_CONNECT] = XLAT(IORING_OP_CONNECT),
 #define XLAT_VAL_16 ((unsigned) (IORING_OP_CONNECT))
 #define XLAT_STR_16 STRINGIFY(IORING_OP_CONNECT)
 [IORING_OP_FALLOCATE] = XLAT(IORING_OP_FALLOCATE),
 #define XLAT_VAL_17 ((unsigned) (IORING_OP_FALLOCATE))
 #define XLAT_STR_17 STRINGIFY(IORING_OP_FALLOCATE)
 [IORING_OP_OPENAT] = XLAT(IORING_OP_OPENAT),
 #define XLAT_VAL_18 ((unsigned) (IORING_OP_OPENAT))
 #define XLAT_STR_18 STRINGIFY(IORING_OP_OPENAT)
 [IORING_OP_CLOSE] = XLAT(IORING_OP_CLOSE),
 #define XLAT_VAL_19 ((unsigned) (IORING_OP_CLOSE))
 #define XLAT_STR_19 STRINGIFY(IORING_OP_CLOSE)
 [IORING_OP_FILES_UPDATE] = XLAT(IORING_OP_FILES_UPDATE),
 #define XLAT_VAL_20 ((unsigned) (IORING_OP_FILES_UPDATE))
 #define XLAT_STR_20 STRINGIFY(IORING_OP_FILES_UPDATE)
 [IORING_OP_STATX] = XLAT(IORING_OP_STATX),
 #define XLAT_VAL_21 ((unsigned) (IORING_OP_STATX))
 #define XLAT_STR_21 STRINGIFY(IORING_OP_STATX)
 [IORING_OP_READ] = XLAT(IORING_OP_READ),
 #define XLAT_VAL_22 ((unsigned) (IORING_OP_READ))
 #define XLAT_STR_22 STRINGIFY(IORING_OP_READ)
 [IORING_OP_WRITE] = XLAT(IORING_OP_WRITE),
 #define XLAT_VAL_23 ((unsigned) (IORING_OP_WRITE))
 #define XLAT_STR_23 STRINGIFY(IORING_OP_WRITE)
 [IORING_OP_FADVISE] = XLAT(IORING_OP_FADVISE),
 #define XLAT_VAL_24 ((unsigned) (IORING_OP_FADVISE))
 #define XLAT_STR_24 STRINGIFY(IORING_OP_FADVISE)
 [IORING_OP_MADVISE] = XLAT(IORING_OP_MADVISE),
 #define XLAT_VAL_25 ((unsigned) (IORING_OP_MADVISE))
 #define XLAT_STR_25 STRINGIFY(IORING_OP_MADVISE)
 [IORING_OP_SEND] = XLAT(IORING_OP_SEND),
 #define XLAT_VAL_26 ((unsigned) (IORING_OP_SEND))
 #define XLAT_STR_26 STRINGIFY(IORING_OP_SEND)
 [IORING_OP_RECV] = XLAT(IORING_OP_RECV),
 #define XLAT_VAL_27 ((unsigned) (IORING_OP_RECV))
 #define XLAT_STR_27 STRINGIFY(IORING_OP_RECV)
 [IORING_OP_OPENAT2] = XLAT(IORING_OP_OPENAT2),
 #define XLAT_VAL_28 ((unsigned) (IORING_OP_OPENAT2))
 #define XLAT_STR_28 STRINGIFY(IORING_OP_OPENAT2)
 [IORING_OP_EPOLL_CTL] = XLAT(IORING_OP_EPOLL_CTL),
 #define XLAT_VAL_29 ((unsigned) (IORING_OP_EPOLL_CTL))
 #define XLAT_STR_29 STRINGIFY(IORING_OP_EPOLL_CTL)
 [IORING_OP_SPLICE] = XLAT(IORING_OP_SPLICE),
 #define XLAT_VAL_30 ((unsigned) (IORING_OP_SPLICE))
 #define XLAT_STR_30 STRINGIFY(IORING_OP_SPLICE)
 [IORING_OP_PROVIDE_BUFFERS] = XLAT(IORING_OP_PROVIDE_BUFFERS),
 #define XLAT_VAL_31 ((unsigned) (IORING_OP_PROVIDE_BUFFERS))
 #define XLAT_STR_31 STRINGIFY(IORING_OP_PROVIDE_BUFFERS)
 [IORING_OP_REMOVE_BUFFERS] = XLAT(IORING_OP_REMOVE_BUFFERS),
 #define XLAT_VAL_32 ((unsigned) (IORING_OP_REMOVE_BUFFERS))
 #define XLAT_STR_32 STRINGIFY(IORING_OP_REMOVE_BUFFERS)
 [IORING_OP_TEE] = XLAT(IORING_OP_TEE),
 #define XLAT_VAL_33 ((unsigned) (IORING_OP_TEE))
 #define XLAT_STR_33 STRINGIFY(IORING_OP_TEE)
 [IORING_OP_SHUTDOWN] = XLAT(IORING_OP_SHUTDOWN),
 #define XLAT_VAL_34 ((unsigned) (IORING_OP_SHUTDOWN))
 #define XLAT_STR_34 STRINGIFY(IORING_OP_SHUTDOWN)
 [IORING_OP_RENAMEAT] = XLAT(IORING_OP_RENAMEAT),
 #define XLAT_VAL_35 ((unsigned) (IORING_OP_RENAMEAT))
 #define XLAT_STR_35 STRINGIFY(IORING_OP_RENAMEAT)
 [IORING_OP_UNLINKAT] = XLAT(IORING_OP_UNLINKAT),
 #define XLAT_VAL_36 ((unsigned) (IORING_OP_UNLINKAT))
 #define XLAT_STR_36 STRINGIFY(IORING_OP_UNLINKAT)
 [IORING_OP_MKDIRAT] = XLAT(IORING_OP_MKDIRAT),
 #define XLAT_VAL_37 ((unsigned) (IORING_OP_MKDIRAT))
 #define XLAT_STR_37 STRINGIFY(IORING_OP_MKDIRAT)
 [IORING_OP_SYMLINKAT] = XLAT(IORING_OP_SYMLINKAT),
 #define XLAT_VAL_38 ((unsigned) (IORING_OP_SYMLINKAT))
 #define XLAT_STR_38 STRINGIFY(IORING_OP_SYMLINKAT)
 [IORING_OP_LINKAT] = XLAT(IORING_OP_LINKAT),
 #define XLAT_VAL_39 ((unsigned) (IORING_OP_LINKAT))
 #define XLAT_STR_39 STRINGIFY(IORING_OP_LINKAT)
 [IORING_OP_MSG_RING] = XLAT(IORING_OP_MSG_RING),
 #define XLAT_VAL_40 ((unsigned) (IORING_OP_MSG_RING))
 #define XLAT_STR_40 STRINGIFY(IORING_OP_MSG_RING)
 [IORING_OP_FSETXATTR] = XLAT(IORING_OP_FSETXATTR),
 #define XLAT_VAL_41 ((unsigned) (IORING_OP_FSETXATTR))
 #define XLAT_STR_41 STRINGIFY(IORING_OP_FSETXATTR)
 [IORING_OP_SETXATTR] = XLAT(IORING_OP_SETXATTR),
 #define XLAT_VAL_42 ((unsigned) (IORING_OP_SETXATTR))
 #define XLAT_STR_42 STRINGIFY(IORING_OP_SETXATTR)
 [IORING_OP_FGETXATTR] = XLAT(IORING_OP_FGETXATTR),
 #define XLAT_VAL_43 ((unsigned) (IORING_OP_FGETXATTR))
 #define XLAT_STR_43 STRINGIFY(IORING_OP_FGETXATTR)
 [IORING_OP_GETXATTR] = XLAT(IORING_OP_GETXATTR),
 #define XLAT_VAL_44 ((unsigned) (IORING_OP_GETXATTR))
 #define XLAT_STR_44 STRINGIFY(IORING_OP_GETXATTR)
 [IORING_OP_SOCKET] = XLAT(IORING_OP_SOCKET),
 #define XLAT_VAL_45 ((unsigned) (IORING_OP_SOCKET))
 #define XLAT_STR_45 STRINGIFY(IORING_OP_SOCKET)
 [IORING_OP_URING_CMD] = XLAT(IORING_OP_URING_CMD),
 #define XLAT_VAL_46 ((unsigned) (IORING_OP_URING_CMD))
 #define XLAT_STR_46 STRINGIFY(IORING_OP_URING_CMD)
};
static
const struct xlat uring_ops[1] = { {
 .data = uring_ops_xdata,
 .size = ARRAY_SIZE(uring_ops_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
#  ifdef XLAT_VAL_22
  | XLAT_VAL_22
#  endif
#  ifdef XLAT_VAL_23
  | XLAT_VAL_23
#  endif
#  ifdef XLAT_VAL_24
  | XLAT_VAL_24
#  endif
#  ifdef XLAT_VAL_25
  | XLAT_VAL_25
#  endif
#  ifdef XLAT_VAL_26
  | XLAT_VAL_26
#  endif
#  ifdef XLAT_VAL_27
  | XLAT_VAL_27
#  endif
#  ifdef XLAT_VAL_28
  | XLAT_VAL_28
#  endif
#  ifdef XLAT_VAL_29
  | XLAT_VAL_29
#  endif
#  ifdef XLAT_VAL_30
  | XLAT_VAL_30
#  endif
#  ifdef XLAT_VAL_31
  | XLAT_VAL_31
#  endif
#  ifdef XLAT_VAL_32
  | XLAT_VAL_32
#  endif
#  ifdef XLAT_VAL_33
  | XLAT_VAL_33
#  endif
#  ifdef XLAT_VAL_34
  | XLAT_VAL_34
#  endif
#  ifdef XLAT_VAL_35
  | XLAT_VAL_35
#  endif
#  ifdef XLAT_VAL_36
  | XLAT_VAL_36
#  endif
#  ifdef XLAT_VAL_37
  | XLAT_VAL_37
#  endif
#  ifdef XLAT_VAL_38
  | XLAT_VAL_38
#  endif
#  ifdef XLAT_VAL_39
  | XLAT_VAL_39
#  endif
#  ifdef XLAT_VAL_40
  | XLAT_VAL_40
#  endif
#  ifdef XLAT_VAL_41
  | XLAT_VAL_41
#  endif
#  ifdef XLAT_VAL_42
  | XLAT_VAL_42
#  endif
#  ifdef XLAT_VAL_43
  | XLAT_VAL_43
#  endif
#  ifdef XLAT_VAL_44
  | XLAT_VAL_44
#  endif
#  ifdef XLAT_VAL_45
  | XLAT_VAL_45
#  endif
#  ifdef XLAT_VAL_46
  | XLAT_VAL_46
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
#  ifdef XLAT_STR_22
  + sizeof(XLAT_STR_22)
#  endif
#  ifdef XLAT_STR_23
  + sizeof(XLAT_STR_23)
#  endif
#  ifdef XLAT_STR_24
  + sizeof(XLAT_STR_24)
#  endif
#  ifdef XLAT_STR_25
  + sizeof(XLAT_STR_25)
#  endif
#  ifdef XLAT_STR_26
  + sizeof(XLAT_STR_26)
#  endif
#  ifdef XLAT_STR_27
  + sizeof(XLAT_STR_27)
#  endif
#  ifdef XLAT_STR_28
  + sizeof(XLAT_STR_28)
#  endif
#  ifdef XLAT_STR_29
  + sizeof(XLAT_STR_29)
#  endif
#  ifdef XLAT_STR_30
  + sizeof(XLAT_STR_30)
#  endif
#  ifdef XLAT_STR_31
  + sizeof(XLAT_STR_31)
#  endif
#  ifdef XLAT_STR_32
  + sizeof(XLAT_STR_32)
#  endif
#  ifdef XLAT_STR_33
  + sizeof(XLAT_STR_33)
#  endif
#  ifdef XLAT_STR_34
  + sizeof(XLAT_STR_34)
#  endif
#  ifdef XLAT_STR_35
  + sizeof(XLAT_STR_35)
#  endif
#  ifdef XLAT_STR_36
  + sizeof(XLAT_STR_36)
#  endif
#  ifdef XLAT_STR_37
  + sizeof(XLAT_STR_37)
#  endif
#  ifdef XLAT_STR_38
  + sizeof(XLAT_STR_38)
#  endif
#  ifdef XLAT_STR_39
  + sizeof(XLAT_STR_39)
#  endif
#  ifdef XLAT_STR_40
  + sizeof(XLAT_STR_40)
#  endif
#  ifdef XLAT_STR_41
  + sizeof(XLAT_STR_41)
#  endif
#  ifdef XLAT_STR_42
  + sizeof(XLAT_STR_42)
#  endif
#  ifdef XLAT_STR_43
  + sizeof(XLAT_STR_43)
#  endif
#  ifdef XLAT_STR_44
  + sizeof(XLAT_STR_44)
#  endif
#  ifdef XLAT_STR_45
  + sizeof(XLAT_STR_45)
#  endif
#  ifdef XLAT_STR_46
  + sizeof(XLAT_STR_46)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
#  undef XLAT_STR_22
#  undef XLAT_VAL_22
#  undef XLAT_STR_23
#  undef XLAT_VAL_23
#  undef XLAT_STR_24
#  undef XLAT_VAL_24
#  undef XLAT_STR_25
#  undef XLAT_VAL_25
#  undef XLAT_STR_26
#  undef XLAT_VAL_26
#  undef XLAT_STR_27
#  undef XLAT_VAL_27
#  undef XLAT_STR_28
#  undef XLAT_VAL_28
#  undef XLAT_STR_29
#  undef XLAT_VAL_29
#  undef XLAT_STR_30
#  undef XLAT_VAL_30
#  undef XLAT_STR_31
#  undef XLAT_VAL_31
#  undef XLAT_STR_32
#  undef XLAT_VAL_32
#  undef XLAT_STR_33
#  undef XLAT_VAL_33
#  undef XLAT_STR_34
#  undef XLAT_VAL_34
#  undef XLAT_STR_35
#  undef XLAT_VAL_35
#  undef XLAT_STR_36
#  undef XLAT_VAL_36
#  undef XLAT_STR_37
#  undef XLAT_VAL_37
#  undef XLAT_STR_38
#  undef XLAT_VAL_38
#  undef XLAT_STR_39
#  undef XLAT_VAL_39
#  undef XLAT_STR_40
#  undef XLAT_VAL_40
#  undef XLAT_STR_41
#  undef XLAT_VAL_41
#  undef XLAT_STR_42
#  undef XLAT_VAL_42
#  undef XLAT_STR_43
#  undef XLAT_VAL_43
#  undef XLAT_STR_44
#  undef XLAT_VAL_44
#  undef XLAT_STR_45
#  undef XLAT_VAL_45
#  undef XLAT_STR_46
#  undef XLAT_VAL_46
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
