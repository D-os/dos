/* Generated by ./src/xlat/gen.sh from ./src/xlat/cap_mask0.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat cap_mask0 in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data cap_mask0_xdata[] = {
 XLAT_PAIR(1ULL<<CAP_CHOWN, "1<<CAP_CHOWN"),
 #define XLAT_VAL_0 ((unsigned) (1ULL<<CAP_CHOWN))
 #define XLAT_STR_0 "1<<CAP_CHOWN"
 XLAT_PAIR(1ULL<<CAP_DAC_OVERRIDE, "1<<CAP_DAC_OVERRIDE"),
 #define XLAT_VAL_1 ((unsigned) (1ULL<<CAP_DAC_OVERRIDE))
 #define XLAT_STR_1 "1<<CAP_DAC_OVERRIDE"
 XLAT_PAIR(1ULL<<CAP_DAC_READ_SEARCH, "1<<CAP_DAC_READ_SEARCH"),
 #define XLAT_VAL_2 ((unsigned) (1ULL<<CAP_DAC_READ_SEARCH))
 #define XLAT_STR_2 "1<<CAP_DAC_READ_SEARCH"
 XLAT_PAIR(1ULL<<CAP_FOWNER, "1<<CAP_FOWNER"),
 #define XLAT_VAL_3 ((unsigned) (1ULL<<CAP_FOWNER))
 #define XLAT_STR_3 "1<<CAP_FOWNER"
 XLAT_PAIR(1ULL<<CAP_FSETID, "1<<CAP_FSETID"),
 #define XLAT_VAL_4 ((unsigned) (1ULL<<CAP_FSETID))
 #define XLAT_STR_4 "1<<CAP_FSETID"
 XLAT_PAIR(1ULL<<CAP_KILL, "1<<CAP_KILL"),
 #define XLAT_VAL_5 ((unsigned) (1ULL<<CAP_KILL))
 #define XLAT_STR_5 "1<<CAP_KILL"
 XLAT_PAIR(1ULL<<CAP_SETGID, "1<<CAP_SETGID"),
 #define XLAT_VAL_6 ((unsigned) (1ULL<<CAP_SETGID))
 #define XLAT_STR_6 "1<<CAP_SETGID"
 XLAT_PAIR(1ULL<<CAP_SETUID, "1<<CAP_SETUID"),
 #define XLAT_VAL_7 ((unsigned) (1ULL<<CAP_SETUID))
 #define XLAT_STR_7 "1<<CAP_SETUID"
 XLAT_PAIR(1ULL<<CAP_SETPCAP, "1<<CAP_SETPCAP"),
 #define XLAT_VAL_8 ((unsigned) (1ULL<<CAP_SETPCAP))
 #define XLAT_STR_8 "1<<CAP_SETPCAP"
 XLAT_PAIR(1ULL<<CAP_LINUX_IMMUTABLE, "1<<CAP_LINUX_IMMUTABLE"),
 #define XLAT_VAL_9 ((unsigned) (1ULL<<CAP_LINUX_IMMUTABLE))
 #define XLAT_STR_9 "1<<CAP_LINUX_IMMUTABLE"
 XLAT_PAIR(1ULL<<CAP_NET_BIND_SERVICE, "1<<CAP_NET_BIND_SERVICE"),
 #define XLAT_VAL_10 ((unsigned) (1ULL<<CAP_NET_BIND_SERVICE))
 #define XLAT_STR_10 "1<<CAP_NET_BIND_SERVICE"
 XLAT_PAIR(1ULL<<CAP_NET_BROADCAST, "1<<CAP_NET_BROADCAST"),
 #define XLAT_VAL_11 ((unsigned) (1ULL<<CAP_NET_BROADCAST))
 #define XLAT_STR_11 "1<<CAP_NET_BROADCAST"
 XLAT_PAIR(1ULL<<CAP_NET_ADMIN, "1<<CAP_NET_ADMIN"),
 #define XLAT_VAL_12 ((unsigned) (1ULL<<CAP_NET_ADMIN))
 #define XLAT_STR_12 "1<<CAP_NET_ADMIN"
 XLAT_PAIR(1ULL<<CAP_NET_RAW, "1<<CAP_NET_RAW"),
 #define XLAT_VAL_13 ((unsigned) (1ULL<<CAP_NET_RAW))
 #define XLAT_STR_13 "1<<CAP_NET_RAW"
 XLAT_PAIR(1ULL<<CAP_IPC_LOCK, "1<<CAP_IPC_LOCK"),
 #define XLAT_VAL_14 ((unsigned) (1ULL<<CAP_IPC_LOCK))
 #define XLAT_STR_14 "1<<CAP_IPC_LOCK"
 XLAT_PAIR(1ULL<<CAP_IPC_OWNER, "1<<CAP_IPC_OWNER"),
 #define XLAT_VAL_15 ((unsigned) (1ULL<<CAP_IPC_OWNER))
 #define XLAT_STR_15 "1<<CAP_IPC_OWNER"
 XLAT_PAIR(1ULL<<CAP_SYS_MODULE, "1<<CAP_SYS_MODULE"),
 #define XLAT_VAL_16 ((unsigned) (1ULL<<CAP_SYS_MODULE))
 #define XLAT_STR_16 "1<<CAP_SYS_MODULE"
 XLAT_PAIR(1ULL<<CAP_SYS_RAWIO, "1<<CAP_SYS_RAWIO"),
 #define XLAT_VAL_17 ((unsigned) (1ULL<<CAP_SYS_RAWIO))
 #define XLAT_STR_17 "1<<CAP_SYS_RAWIO"
 XLAT_PAIR(1ULL<<CAP_SYS_CHROOT, "1<<CAP_SYS_CHROOT"),
 #define XLAT_VAL_18 ((unsigned) (1ULL<<CAP_SYS_CHROOT))
 #define XLAT_STR_18 "1<<CAP_SYS_CHROOT"
 XLAT_PAIR(1ULL<<CAP_SYS_PTRACE, "1<<CAP_SYS_PTRACE"),
 #define XLAT_VAL_19 ((unsigned) (1ULL<<CAP_SYS_PTRACE))
 #define XLAT_STR_19 "1<<CAP_SYS_PTRACE"
 XLAT_PAIR(1ULL<<CAP_SYS_PACCT, "1<<CAP_SYS_PACCT"),
 #define XLAT_VAL_20 ((unsigned) (1ULL<<CAP_SYS_PACCT))
 #define XLAT_STR_20 "1<<CAP_SYS_PACCT"
 XLAT_PAIR(1ULL<<CAP_SYS_ADMIN, "1<<CAP_SYS_ADMIN"),
 #define XLAT_VAL_21 ((unsigned) (1ULL<<CAP_SYS_ADMIN))
 #define XLAT_STR_21 "1<<CAP_SYS_ADMIN"
 XLAT_PAIR(1ULL<<CAP_SYS_BOOT, "1<<CAP_SYS_BOOT"),
 #define XLAT_VAL_22 ((unsigned) (1ULL<<CAP_SYS_BOOT))
 #define XLAT_STR_22 "1<<CAP_SYS_BOOT"
 XLAT_PAIR(1ULL<<CAP_SYS_NICE, "1<<CAP_SYS_NICE"),
 #define XLAT_VAL_23 ((unsigned) (1ULL<<CAP_SYS_NICE))
 #define XLAT_STR_23 "1<<CAP_SYS_NICE"
 XLAT_PAIR(1ULL<<CAP_SYS_RESOURCE, "1<<CAP_SYS_RESOURCE"),
 #define XLAT_VAL_24 ((unsigned) (1ULL<<CAP_SYS_RESOURCE))
 #define XLAT_STR_24 "1<<CAP_SYS_RESOURCE"
 XLAT_PAIR(1ULL<<CAP_SYS_TIME, "1<<CAP_SYS_TIME"),
 #define XLAT_VAL_25 ((unsigned) (1ULL<<CAP_SYS_TIME))
 #define XLAT_STR_25 "1<<CAP_SYS_TIME"
 XLAT_PAIR(1ULL<<CAP_SYS_TTY_CONFIG, "1<<CAP_SYS_TTY_CONFIG"),
 #define XLAT_VAL_26 ((unsigned) (1ULL<<CAP_SYS_TTY_CONFIG))
 #define XLAT_STR_26 "1<<CAP_SYS_TTY_CONFIG"
 XLAT_PAIR(1ULL<<CAP_MKNOD, "1<<CAP_MKNOD"),
 #define XLAT_VAL_27 ((unsigned) (1ULL<<CAP_MKNOD))
 #define XLAT_STR_27 "1<<CAP_MKNOD"
 XLAT_PAIR(1ULL<<CAP_LEASE, "1<<CAP_LEASE"),
 #define XLAT_VAL_28 ((unsigned) (1ULL<<CAP_LEASE))
 #define XLAT_STR_28 "1<<CAP_LEASE"
 XLAT_PAIR(1ULL<<CAP_AUDIT_WRITE, "1<<CAP_AUDIT_WRITE"),
 #define XLAT_VAL_29 ((unsigned) (1ULL<<CAP_AUDIT_WRITE))
 #define XLAT_STR_29 "1<<CAP_AUDIT_WRITE"
 XLAT_PAIR(1ULL<<CAP_AUDIT_CONTROL, "1<<CAP_AUDIT_CONTROL"),
 #define XLAT_VAL_30 ((unsigned) (1ULL<<CAP_AUDIT_CONTROL))
 #define XLAT_STR_30 "1<<CAP_AUDIT_CONTROL"
 XLAT_PAIR(1ULL<<CAP_SETFCAP, "1<<CAP_SETFCAP"),
 #define XLAT_VAL_31 ((unsigned) (1ULL<<CAP_SETFCAP))
 #define XLAT_STR_31 "1<<CAP_SETFCAP"
};
static
const struct xlat cap_mask0[1] = { {
 .data = cap_mask0_xdata,
 .size = ARRAY_SIZE(cap_mask0_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
#  ifdef XLAT_VAL_22
  | XLAT_VAL_22
#  endif
#  ifdef XLAT_VAL_23
  | XLAT_VAL_23
#  endif
#  ifdef XLAT_VAL_24
  | XLAT_VAL_24
#  endif
#  ifdef XLAT_VAL_25
  | XLAT_VAL_25
#  endif
#  ifdef XLAT_VAL_26
  | XLAT_VAL_26
#  endif
#  ifdef XLAT_VAL_27
  | XLAT_VAL_27
#  endif
#  ifdef XLAT_VAL_28
  | XLAT_VAL_28
#  endif
#  ifdef XLAT_VAL_29
  | XLAT_VAL_29
#  endif
#  ifdef XLAT_VAL_30
  | XLAT_VAL_30
#  endif
#  ifdef XLAT_VAL_31
  | XLAT_VAL_31
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
#  ifdef XLAT_STR_22
  + sizeof(XLAT_STR_22)
#  endif
#  ifdef XLAT_STR_23
  + sizeof(XLAT_STR_23)
#  endif
#  ifdef XLAT_STR_24
  + sizeof(XLAT_STR_24)
#  endif
#  ifdef XLAT_STR_25
  + sizeof(XLAT_STR_25)
#  endif
#  ifdef XLAT_STR_26
  + sizeof(XLAT_STR_26)
#  endif
#  ifdef XLAT_STR_27
  + sizeof(XLAT_STR_27)
#  endif
#  ifdef XLAT_STR_28
  + sizeof(XLAT_STR_28)
#  endif
#  ifdef XLAT_STR_29
  + sizeof(XLAT_STR_29)
#  endif
#  ifdef XLAT_STR_30
  + sizeof(XLAT_STR_30)
#  endif
#  ifdef XLAT_STR_31
  + sizeof(XLAT_STR_31)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
#  undef XLAT_STR_22
#  undef XLAT_VAL_22
#  undef XLAT_STR_23
#  undef XLAT_VAL_23
#  undef XLAT_STR_24
#  undef XLAT_VAL_24
#  undef XLAT_STR_25
#  undef XLAT_VAL_25
#  undef XLAT_STR_26
#  undef XLAT_VAL_26
#  undef XLAT_STR_27
#  undef XLAT_VAL_27
#  undef XLAT_STR_28
#  undef XLAT_VAL_28
#  undef XLAT_STR_29
#  undef XLAT_VAL_29
#  undef XLAT_STR_30
#  undef XLAT_VAL_30
#  undef XLAT_STR_31
#  undef XLAT_VAL_31
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
