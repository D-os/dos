/* Generated by ./src/xlat/gen.sh from ./src/xlat/caif_protocols.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(CAIFPROTO_AT) || (defined(HAVE_DECL_CAIFPROTO_AT) && HAVE_DECL_CAIFPROTO_AT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAIFPROTO_AT) == (0), "CAIFPROTO_AT != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAIFPROTO_AT 0
#endif
#if defined(CAIFPROTO_DATAGRAM) || (defined(HAVE_DECL_CAIFPROTO_DATAGRAM) && HAVE_DECL_CAIFPROTO_DATAGRAM)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAIFPROTO_DATAGRAM) == (1), "CAIFPROTO_DATAGRAM != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAIFPROTO_DATAGRAM 1
#endif
#if defined(CAIFPROTO_DATAGRAM_LOOP) || (defined(HAVE_DECL_CAIFPROTO_DATAGRAM_LOOP) && HAVE_DECL_CAIFPROTO_DATAGRAM_LOOP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAIFPROTO_DATAGRAM_LOOP) == (2), "CAIFPROTO_DATAGRAM_LOOP != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAIFPROTO_DATAGRAM_LOOP 2
#endif
#if defined(CAIFPROTO_UTIL) || (defined(HAVE_DECL_CAIFPROTO_UTIL) && HAVE_DECL_CAIFPROTO_UTIL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAIFPROTO_UTIL) == (3), "CAIFPROTO_UTIL != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAIFPROTO_UTIL 3
#endif
#if defined(CAIFPROTO_RFM) || (defined(HAVE_DECL_CAIFPROTO_RFM) && HAVE_DECL_CAIFPROTO_RFM)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAIFPROTO_RFM) == (4), "CAIFPROTO_RFM != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAIFPROTO_RFM 4
#endif
#if defined(CAIFPROTO_DEBUG) || (defined(HAVE_DECL_CAIFPROTO_DEBUG) && HAVE_DECL_CAIFPROTO_DEBUG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAIFPROTO_DEBUG) == (5), "CAIFPROTO_DEBUG != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAIFPROTO_DEBUG 5
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat caif_protocols in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data caif_protocols_xdata[] = {
 [CAIFPROTO_AT] = XLAT(CAIFPROTO_AT),
 #define XLAT_VAL_0 ((unsigned) (CAIFPROTO_AT))
 #define XLAT_STR_0 STRINGIFY(CAIFPROTO_AT)
 [CAIFPROTO_DATAGRAM] = XLAT(CAIFPROTO_DATAGRAM),
 #define XLAT_VAL_1 ((unsigned) (CAIFPROTO_DATAGRAM))
 #define XLAT_STR_1 STRINGIFY(CAIFPROTO_DATAGRAM)
 [CAIFPROTO_DATAGRAM_LOOP] = XLAT(CAIFPROTO_DATAGRAM_LOOP),
 #define XLAT_VAL_2 ((unsigned) (CAIFPROTO_DATAGRAM_LOOP))
 #define XLAT_STR_2 STRINGIFY(CAIFPROTO_DATAGRAM_LOOP)
 [CAIFPROTO_UTIL] = XLAT(CAIFPROTO_UTIL),
 #define XLAT_VAL_3 ((unsigned) (CAIFPROTO_UTIL))
 #define XLAT_STR_3 STRINGIFY(CAIFPROTO_UTIL)
 [CAIFPROTO_RFM] = XLAT(CAIFPROTO_RFM),
 #define XLAT_VAL_4 ((unsigned) (CAIFPROTO_RFM))
 #define XLAT_STR_4 STRINGIFY(CAIFPROTO_RFM)
 [CAIFPROTO_DEBUG] = XLAT(CAIFPROTO_DEBUG),
 #define XLAT_VAL_5 ((unsigned) (CAIFPROTO_DEBUG))
 #define XLAT_STR_5 STRINGIFY(CAIFPROTO_DEBUG)
};
static
const struct xlat caif_protocols[1] = { {
 .data = caif_protocols_xdata,
 .size = ARRAY_SIZE(caif_protocols_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
