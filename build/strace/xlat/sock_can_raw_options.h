/* Generated by ./src/xlat/gen.sh from ./src/xlat/sock_can_raw_options.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(CAN_RAW_FILTER) || (defined(HAVE_DECL_CAN_RAW_FILTER) && HAVE_DECL_CAN_RAW_FILTER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAN_RAW_FILTER) == (1), "CAN_RAW_FILTER != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAN_RAW_FILTER 1
#endif
#if defined(CAN_RAW_ERR_FILTER) || (defined(HAVE_DECL_CAN_RAW_ERR_FILTER) && HAVE_DECL_CAN_RAW_ERR_FILTER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAN_RAW_ERR_FILTER) == (2), "CAN_RAW_ERR_FILTER != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAN_RAW_ERR_FILTER 2
#endif
#if defined(CAN_RAW_LOOPBACK) || (defined(HAVE_DECL_CAN_RAW_LOOPBACK) && HAVE_DECL_CAN_RAW_LOOPBACK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAN_RAW_LOOPBACK) == (3), "CAN_RAW_LOOPBACK != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAN_RAW_LOOPBACK 3
#endif
#if defined(CAN_RAW_RECV_OWN_MSGS) || (defined(HAVE_DECL_CAN_RAW_RECV_OWN_MSGS) && HAVE_DECL_CAN_RAW_RECV_OWN_MSGS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAN_RAW_RECV_OWN_MSGS) == (4), "CAN_RAW_RECV_OWN_MSGS != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAN_RAW_RECV_OWN_MSGS 4
#endif
#if defined(CAN_RAW_FD_FRAMES) || (defined(HAVE_DECL_CAN_RAW_FD_FRAMES) && HAVE_DECL_CAN_RAW_FD_FRAMES)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAN_RAW_FD_FRAMES) == (5), "CAN_RAW_FD_FRAMES != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAN_RAW_FD_FRAMES 5
#endif
#if defined(CAN_RAW_JOIN_FILTERS) || (defined(HAVE_DECL_CAN_RAW_JOIN_FILTERS) && HAVE_DECL_CAN_RAW_JOIN_FILTERS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((CAN_RAW_JOIN_FILTERS) == (6), "CAN_RAW_JOIN_FILTERS != 6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define CAN_RAW_JOIN_FILTERS 6
#endif
#undef XLAT_PREV_VAL

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat sock_can_raw_options in mpers mode

# else

DIAG_PUSH_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE
static const struct xlat_data sock_can_raw_options_xdata[] = {
 [CAN_RAW_FILTER] = XLAT(CAN_RAW_FILTER),
 #define XLAT_VAL_0 ((unsigned) (CAN_RAW_FILTER))
 #define XLAT_STR_0 STRINGIFY(CAN_RAW_FILTER)
 [CAN_RAW_ERR_FILTER] = XLAT(CAN_RAW_ERR_FILTER),
 #define XLAT_VAL_1 ((unsigned) (CAN_RAW_ERR_FILTER))
 #define XLAT_STR_1 STRINGIFY(CAN_RAW_ERR_FILTER)
 [CAN_RAW_LOOPBACK] = XLAT(CAN_RAW_LOOPBACK),
 #define XLAT_VAL_2 ((unsigned) (CAN_RAW_LOOPBACK))
 #define XLAT_STR_2 STRINGIFY(CAN_RAW_LOOPBACK)
 [CAN_RAW_RECV_OWN_MSGS] = XLAT(CAN_RAW_RECV_OWN_MSGS),
 #define XLAT_VAL_3 ((unsigned) (CAN_RAW_RECV_OWN_MSGS))
 #define XLAT_STR_3 STRINGIFY(CAN_RAW_RECV_OWN_MSGS)
 [CAN_RAW_FD_FRAMES] = XLAT(CAN_RAW_FD_FRAMES),
 #define XLAT_VAL_4 ((unsigned) (CAN_RAW_FD_FRAMES))
 #define XLAT_STR_4 STRINGIFY(CAN_RAW_FD_FRAMES)
 [CAN_RAW_JOIN_FILTERS] = XLAT(CAN_RAW_JOIN_FILTERS),
 #define XLAT_VAL_5 ((unsigned) (CAN_RAW_JOIN_FILTERS))
 #define XLAT_STR_5 STRINGIFY(CAN_RAW_JOIN_FILTERS)
};
static
const struct xlat sock_can_raw_options[1] = { {
 .data = sock_can_raw_options_xdata,
 .size = ARRAY_SIZE(sock_can_raw_options_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
  ,
} };
DIAG_POP_IGNORE_TAUTOLOGICAL_CONSTANT_COMPARE

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
