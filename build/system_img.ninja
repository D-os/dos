IMAGE_SIZE = 1G

rule mkfs
  command = truncate -s $IMAGE_SIZE $out && mke2fs -q -t ext4 -L / -E root_owner=0:0 -d $in $out
  description = [HOST] MKFS $out

build $BUILDROOT/system.img: mkfs $SYSTEMDIR
  depfile = build/system_img/content.d

rule mkdir
  command = mkdir -p $out
  description = MKDIR $out

rule sync
  command = mkdir -p $out && for SOURCE in $source; do cp -a $$SOURCE $out; done
  description = SYNC $out <- $source

rule hardlink
  command = ln -f $in $out
  description = HARDLINK $out -> $in

build $SYSTEMDIR: mkdir
build $SYSTEMDIR/dev: mkdir
build $SYSTEMDIR/proc: mkdir
build $SYSTEMDIR/sys: mkdir
build $SYSTEMDIR/mnt: mkdir
build $SYSTEMDIR/debug_ramdisk: mkdir
build $SYSTEMDIR/second_stage_resources: mkdir
build $SYSTEMDIR/apex: mkdir
build $SYSTEMDIR/linkerconfig: mkdir

build $SYSTEMDIR/bin/ldd: symlink
  target = ../lib/libc.so

build $SYSTEMDIR/lib: sync | $SYSROOT/lib
  source = $SYSROOT/lib/*.so*
build $SYSTEMDIR/lib/modules: sync | $SYSROOT/lib/modules
  source = $SYSROOT/lib/modules/*
build $SYSTEMDIR/system/bin/init: copy $BUILDROOT/init/obj/init
build $SYSTEMDIR/system/bin/ueventd: hardlink $SYSTEMDIR/system/bin/init
build $SYSTEMDIR/system/build.prop: copy build/conf/build.prop
build $SYSTEMDIR/etc/cgroups.json: copy build/conf/cgroups.json
build $SYSTEMDIR/system/etc/init/hw/init.rc: copy build/conf/init.rc
build $SYSTEMDIR/system/etc/ueventd.rc: copy build/conf/ueventd.rc
build $SYSTEMDIR/etc/passwd: copy build/conf/passwd
build $SYSTEMDIR/etc/group: copy build/conf/group
build $SYSTEMDIR/system/bin/sh: copy $BUILDROOT/mksh/sh
build $SYSTEMDIR/system/etc/mkshrc: copy external/mksh/mkshrc
build $SYSTEMDIR/system/bin/weston: copy $BUILDROOT/weston/weston
build $SYSTEMDIR/system/lib/libweston-11.so: copy $BUILDROOT/weston/libweston-11.so
build $SYSTEMDIR/system/lib/weston/libexec_weston.so: copy $BUILDROOT/weston/libexec_weston.so
