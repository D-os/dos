IMAGE_SIZE = 5G

build system.img: phony $SYSTEMDIR.content $SYSTEMDIR.img $SYSTEMDIR.fixup

rule touch
  command = touch $out
  description = [HOST] TOUCH $out

build $SYSTEMDIR.content: touch $SYSTEMDIR
  depfile = build/system/content.d

rule mkfs
  command = truncate -s $IMAGE_SIZE $out && mke2fs -q -t ext4 -L / -E root_owner=0:0 -d $in $out
  description = [HOST] MKFS $out

build $SYSTEMDIR.img: mkfs $SYSTEMDIR $
  | $SYSTEMDIR.content

rule fixup
  command = sh build/system/content.sh && touch -d "now + 1 second" $out
  description = [HOST] FIXUP $out

build $SYSTEMDIR.fixup: fixup $SYSTEMDIR.img $
  | build/system/content.sh

rule mkdir
  command = mkdir -p $out
  description = MKDIR $out

rule sync
  command = mkdir -p $out && for SOURCE in $source; do cp --archive --update $$SOURCE $out; done; touch $out
  description = SYNC $out <- $source

rule hardlink
  command = ln -f $in $out
  description = HARDLINK $out -> $in

rule sed
  command = sed '${pattern}' <$in >$out
  description = SED $out -> $in

build $SYSTEMDIR: mkdir
build $SYSTEMDIR/dev: mkdir
build $SYSTEMDIR/proc: mkdir
build $SYSTEMDIR/sys: mkdir
build $SYSTEMDIR/run: mkdir
build $SYSTEMDIR/data: mkdir

build $SYSTEMDIR/bin/ldd: symlink
  target = ../lib/libc.so

build $SYSTEMDIR/lib: sync | $SYSROOT/lib
  source = $SYSROOT/lib/*.so*
build $SYSTEMDIR/lib/modules: sync | $SYSROOT/lib/modules
  source = $SYSROOT/lib/modules/*
build $SYSTEMDIR/etc/cgroups.json: copy build/conf/cgroups.json
build $SYSTEMDIR/etc/task_profiles.json: copy system/core/libprocessgroup/profiles/task_profiles.json
build $SYSTEMDIR/system/build.prop: copy build/conf/build.prop
build $SYSTEMDIR/system/etc/fstab.qemu: copy build/conf/fstab.qemu
build $SYSTEMDIR/system/etc/init/hw/init.rc: copy build/conf/init.rc
build $SYSTEMDIR/system/etc/init/hw/init.qemu.rc: copy build/conf/init.qemu.rc
build $SYSTEMDIR/system/bin/init: copy $BUILDROOT/init/obj/init
build $SYSTEMDIR/system/bin/init.insmod.sh: copy build/conf/init.insmod.sh
build $SYSTEMDIR/system/etc/ueventd.rc: copy build/conf/ueventd.rc
build $SYSTEMDIR/system/bin/ueventd: hardlink $SYSTEMDIR/system/bin/init
build $SYSTEMDIR/system/etc/init/servicemanager.rc: sed frameworks/native/cmds/servicemanager/servicemanager.microdroid.rc
  pattern = s/.microdroid//
build $SYSTEMDIR/system/bin/servicemanager: copy $BUILDROOT/servicemanager/servicemanager
build $SYSTEMDIR/system/bin/service: copy $BUILDROOT/servicemanager/service
build $SYSTEMDIR/system/bin/cmd: copy $BUILDROOT/servicemanager/cmd
build $SYSTEMDIR/system/bin/su: copy $BUILDROOT/utils/su
build $SYSTEMDIR/system/bin/toybox: copy $BUILDROOT/toybox/toybox
build $SYSTEMDIR/system/bin/toolbox: copy $BUILDROOT/toolbox/toolbox
build $SYSTEMDIR/etc/passwd: copy build/conf/passwd
build $SYSTEMDIR/etc/group: copy build/conf/group
build $SYSTEMDIR/etc/fstab: copy build/conf/fstab
build $SYSTEMDIR/etc/hosts: copy system/core/rootdir/etc/hosts
build $SYSTEMDIR/lib/libz.so: copy $SYSROOT/lib/libz.so
build $SYSTEMDIR/lib/libjpeg.so: copy $SYSROOT/lib/libjpeg.so
build $SYSTEMDIR/lib/libpng.so: copy $SYSROOT/lib/libpng.so
build $SYSTEMDIR/lib/libwebp.so: copy $SYSROOT/lib/libwebp.so
build $SYSTEMDIR/lib/libgbm.so: copy $SYSROOT/lib/libgbm.so
build $SYSTEMDIR/lib/libglapi.so: copy $SYSROOT/lib/libglapi.so
build $SYSTEMDIR/lib/libEGL.so: copy $SYSROOT/lib/libEGL.so
build $SYSTEMDIR/lib/libGLESv2.so: copy $SYSROOT/lib/libGLESv2.so
build $SYSTEMDIR/lib/libcairo.so: copy $SYSROOT/lib/libcairo.so
build $SYSTEMDIR/lib/libbe.so: copy $SYSROOT/lib/libbe.so
build $SYSTEMDIR/system/bin/sh: copy $BUILDROOT/mksh/sh
build $SYSTEMDIR/bin/sh: symlink
  target = ../system/bin/sh
build $SYSTEMDIR/system/etc/mkshrc: copy external/mksh/mkshrc
build $SYSTEMDIR/system/etc/init/weston.rc: copy build/weston/weston.rc
build $SYSTEMDIR/system/bin/weston: copy $BUILDROOT/weston/weston
build $SYSTEMDIR/system/lib/libweston-11.so: copy $BUILDROOT/weston/libweston-11.so
build $SYSTEMDIR/system/lib/weston/libexec_weston.so: copy $BUILDROOT/weston/libexec_weston.so
build $SYSTEMDIR/system/lib/weston/desktop-shell.so: copy $BUILDROOT/weston/desktop-shell.so
build $SYSTEMDIR/system/lib/libweston-11/drm-backend.so: copy $BUILDROOT/weston/drm-backend.so
build $SYSTEMDIR/system/lib/libweston-11/gl-renderer.so: copy $BUILDROOT/weston/gl-renderer.so
build $SYSTEMDIR/system/lib/libweston-11/libweston-desktop-11.so: copy $BUILDROOT/weston/libweston-desktop-11.so
build $SYSTEMDIR/system/libexec/weston-desktop-shell: copy $BUILDROOT/weston/weston-desktop-shell
build $SYSTEMDIR/system/libexec/weston-keyboard: copy $BUILDROOT/weston/weston-keyboard
build $SYSTEMDIR/system/bin/weston-terminal: copy $BUILDROOT/weston/weston-terminal
build $SYSTEMDIR/system/bin/wayland-info: copy $BUILDROOT/wayland-utils/wayland-info
build $SYSTEMDIR/system/lib/dri/libgallium_dri.so: copy $BUILDROOT/mesa/libgallium_dri.so
build $SYSTEMDIR/system/lib/dri/swrast_dri.so: hardlink $SYSTEMDIR/system/lib/dri/libgallium_dri.so
build $SYSTEMDIR/system/lib/dri/kms_swrast_dri.so: hardlink $SYSTEMDIR/system/lib/dri/libgallium_dri.so
build $SYSTEMDIR/system/lib/dri/vmwgfx_dri.so: hardlink $SYSTEMDIR/system/lib/dri/libgallium_dri.so
build $SYSTEMDIR/system/lib/dri/virtio_gpu_dri.so: hardlink $SYSTEMDIR/system/lib/dri/libgallium_dri.so
build $SYSTEMDIR/system/data/weston: sync | external/weston/data
  source = external/weston/data/*.png
build $SYSTEMDIR/system/data/icons/default: sync | system/data/icons/default
  source = system/data/icons/default/*
build $SYSTEMDIR/lib/libz.so.1: symlink
  target = libz.so

build $SYSTEMDIR/bin/lldb: copy $BUILDROOT/llvm/bin/lldb
build $SYSTEMDIR/bin/lldb-server: copy $BUILDROOT/llvm/bin/lldb-server
