cflags = $
  -Wno-pointer-arith $
  -Wno-tautological-compare $
  -Wno-unused-parameter $
  -Wno-unused-result $
  -Wno-unused-variable $
  -Wno-shift-op-parentheses $

includes = -Iexternal/libcap/libcap/include -I$BUILDROOT/libcap

build $BUILDROOT/libcap/cap_alloc.o: cc external/libcap/libcap/cap_alloc.c | $BUILDROOT/libcap/cap_names.h
build $BUILDROOT/libcap/cap_extint.o: cc external/libcap/libcap/cap_extint.c | $BUILDROOT/libcap/cap_names.h
build $BUILDROOT/libcap/cap_file.o: cc external/libcap/libcap/cap_file.c | $BUILDROOT/libcap/cap_names.h
build $BUILDROOT/libcap/cap_flag.o: cc external/libcap/libcap/cap_flag.c | $BUILDROOT/libcap/cap_names.h
build $BUILDROOT/libcap/cap_proc.o: cc external/libcap/libcap/cap_proc.c | $BUILDROOT/libcap/cap_names.h
build $BUILDROOT/libcap/cap_text.o: cc external/libcap/libcap/cap_text.c | $BUILDROOT/libcap/cap_names.h

build $BUILDROOT/libcap/libcap.a: ar $BUILDROOT/libcap/cap_alloc.o $BUILDROOT/libcap/cap_proc.o $BUILDROOT/libcap/cap_extint.o $BUILDROOT/libcap/cap_flag.o $BUILDROOT/libcap/cap_text.o $BUILDROOT/libcap/cap_file.o

build $BUILDROOT/libcap/libcap.so: soa $BUILDROOT/libcap/libcap.a

rule generate_cap_names_list
  command = awk -f external/libcap/generate_cap_names_list.awk $in > $out
  description = [HOST] GEN $out

build $BUILDROOT/libcap/cap_names.list.h: generate_cap_names_list out/tc/target/${TARGET}/include/linux/capability.h

build $BUILDROOT/libcap/_makenames.o: hostcc external/libcap/libcap/_makenames.c | $BUILDROOT/libcap/cap_names.list.h

build $BUILDROOT/libcap/_makenames: hostld $BUILDROOT/libcap/_makenames.o

rule makenames
  command = $BUILDROOT/libcap/_makenames > $out
  description = [HOST] GEN $out

build $BUILDROOT/libcap/cap_names.h: makenames | $BUILDROOT/libcap/_makenames
